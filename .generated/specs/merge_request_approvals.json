{
  "origin": "https://docs.gitlab.com/ee/api/merge_request_approvals.html",
  "pageName": "Merge request approvals",
  "apis": [
    {
      "name": "Get Configuration",
      "description": "Parameters:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/approvals"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        }
      ],
      "response": {
        "approvals_before_merge": 2,
        "reset_approvals_on_push": true,
        "disable_overriding_approvers_per_merge_request": false,
        "merge_requests_author_approval": true,
        "merge_requests_disable_committers_approval": false,
        "require_password_to_approve": true
      }
    },
    {
      "name": "Change configuration",
      "description": "Parameters:",
      "resources": [
        {
          "method": "POST",
          "path": "/projects/:id/approvals"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "approvals_before_merge",
          "type": "integer",
          "required": false,
          "description": "How many approvals are required before an MR can be merged. Deprecated in 12.0 in favor of Approval Rules API."
        },
        {
          "name": "reset_approvals_on_push",
          "type": "boolean",
          "required": false,
          "description": "Reset approvals on a new push"
        },
        {
          "name": "disable_overriding_approvers_per_merge_request",
          "type": "boolean",
          "required": false,
          "description": "Allow or prevent overriding approvers per MR"
        },
        {
          "name": "merge_requests_author_approval",
          "type": "boolean",
          "required": false,
          "description": "Allow or prevent authors from self approving merge requests; true means authors can self approve"
        },
        {
          "name": "merge_requests_disable_committers_approval",
          "type": "boolean",
          "required": false,
          "description": "Allow or prevent committers from self approving merge requests"
        },
        {
          "name": "require_password_to_approve",
          "type": "boolean",
          "required": false,
          "description": "Require approver to enter a password to authenticate before adding the approval"
        }
      ],
      "response": {
        "approvals_before_merge": 2,
        "reset_approvals_on_push": true,
        "disable_overriding_approvers_per_merge_request": false,
        "merge_requests_author_approval": false,
        "merge_requests_disable_committers_approval": false,
        "require_password_to_approve": true
      }
    },
    {
      "name": "Get project-level rules",
      "description": "Parameters:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/approval_rules"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        }
      ],
      "response": [
        {
          "id": 1,
          "name": "security",
          "rule_type": "regular",
          "eligible_approvers": [
            {
              "id": 5,
              "name": "John Doe",
              "username": "jdoe",
              "state": "active",
              "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
              "web_url": "http://localhost/jdoe"
            },
            {
              "id": 50,
              "name": "Group Member 1",
              "username": "group_member_1",
              "state": "active",
              "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
              "web_url": "http://localhost/group_member_1"
            }
          ],
          "approvals_required": 3,
          "users": [
            {
              "id": 5,
              "name": "John Doe",
              "username": "jdoe",
              "state": "active",
              "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
              "web_url": "http://localhost/jdoe"
            }
          ],
          "groups": [
            {
              "id": 5,
              "name": "group1",
              "path": "group1",
              "description": "",
              "visibility": "public",
              "lfs_enabled": false,
              "avatar_url": null,
              "web_url": "http://localhost/groups/group1",
              "request_access_enabled": false,
              "full_name": "group1",
              "full_path": "group1",
              "parent_id": null,
              "ldap_cn": null,
              "ldap_access": null
            }
          ],
          "protected_branches": [
            {
              "id": 1,
              "name": "master",
              "push_access_levels": [
                {
                  "access_level": 30,
                  "access_level_description": "Developers + Maintainers"
                }
              ],
              "merge_access_levels": [
                {
                  "access_level": 30,
                  "access_level_description": "Developers + Maintainers"
                }
              ],
              "unprotect_access_levels": [
                {
                  "access_level": 40,
                  "access_level_description": "Maintainers"
                }
              ],
              "code_owner_approval_required": "false"
            }
          ],
          "contains_hidden_groups": false
        }
      ]
    },
    {
      "name": "Get a single project-level rule",
      "description": "Parameters:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/approval_rules/:approval_rule_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "approval_rule_id",
          "type": "integer",
          "required": true,
          "description": "The ID of a approval rule"
        }
      ],
      "response": {
        "id": 1,
        "name": "security",
        "rule_type": "regular",
        "eligible_approvers": [
          {
            "id": 5,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          },
          {
            "id": 50,
            "name": "Group Member 1",
            "username": "group_member_1",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/group_member_1"
          }
        ],
        "approvals_required": 3,
        "users": [
          {
            "id": 5,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          }
        ],
        "groups": [
          {
            "id": 5,
            "name": "group1",
            "path": "group1",
            "description": "",
            "visibility": "public",
            "lfs_enabled": false,
            "avatar_url": null,
            "web_url": "http://localhost/groups/group1",
            "request_access_enabled": false,
            "full_name": "group1",
            "full_path": "group1",
            "parent_id": null,
            "ldap_cn": null,
            "ldap_access": null
          }
        ],
        "protected_branches": [
          {
            "id": 1,
            "name": "master",
            "push_access_levels": [
              {
                "access_level": 30,
                "access_level_description": "Developers + Maintainers"
              }
            ],
            "merge_access_levels": [
              {
                "access_level": 30,
                "access_level_description": "Developers + Maintainers"
              }
            ],
            "unprotect_access_levels": [
              {
                "access_level": 40,
                "access_level_description": "Maintainers"
              }
            ],
            "code_owner_approval_required": "false"
          }
        ],
        "contains_hidden_groups": false
      }
    },
    {
      "name": "Create project-level rule",
      "description": "Another example is creating an additional, user-specific rule:",
      "resources": [
        {
          "method": "POST",
          "path": "/projects/:id/approval_rules"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "The name of the approval rule"
        },
        {
          "name": "approvals_required",
          "type": "integer",
          "required": true,
          "description": "The number of required approvals for this rule"
        },
        {
          "name": "rule_type",
          "type": "string",
          "required": false,
          "description": "The type of rule. any_approver is a pre-configured default rule with approvals_required at 0. Other rules are regular."
        },
        {
          "name": "user_ids",
          "type": "Array",
          "required": false,
          "description": "The ids of users as approvers"
        },
        {
          "name": "group_ids",
          "type": "Array",
          "required": false,
          "description": "The ids of groups as approvers"
        },
        {
          "name": "protected_branch_ids",
          "type": "Array",
          "required": false,
          "description": "The IDs of protected branches to scope the rule by. To identify the ID, use the API."
        },
        {
          "name": "report_type",
          "type": "string",
          "required": false,
          "description": "The report type required when the rule type is report_approver. The supported report types are: vulnerability, license_scanning, code_coverage. The vulnerability report type is part of the Vulnerability-Check feature, which deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        },
        {
          "name": "scanners",
          "type": "Array",
          "required": false,
          "description": "The security scanners the Vulnerability-Check approval rule considers. The supported scanners are: sast, secret_detection, dependency_scanning, container_scanning, dast, coverage_fuzzing, api_fuzzing. Defaults to all supported scanners. Deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        },
        {
          "name": "severity_levels",
          "type": "Array",
          "required": false,
          "description": "The severity levels the Vulnerability-Check approval rule considers. The supported severity levels are: info, unknown, low, medium, high, critical. Defaults to unknown, high, and critical. Deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        },
        {
          "name": "vulnerabilities_allowed",
          "type": "integer",
          "required": false,
          "description": "The number of vulnerabilities allowed for the Vulnerability-Check approval rule. Defaults to 0. Deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        },
        {
          "name": "vulnerability_states",
          "type": "Array",
          "required": false,
          "description": "The vulnerability states the Vulnerability-Check approval rule considers. The supported vulnerability states are: newly_detected (default), detected, confirmed, resolved, dismissed. Deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        }
      ],
      "response": {
        "id": 1,
        "name": "security",
        "rule_type": "regular",
        "eligible_approvers": [
          {
            "id": 2,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          },
          {
            "id": 50,
            "name": "Group Member 1",
            "username": "group_member_1",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/group_member_1"
          }
        ],
        "approvals_required": 1,
        "users": [
          {
            "id": 2,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          }
        ],
        "groups": [
          {
            "id": 5,
            "name": "group1",
            "path": "group1",
            "description": "",
            "visibility": "public",
            "lfs_enabled": false,
            "avatar_url": null,
            "web_url": "http://localhost/groups/group1",
            "request_access_enabled": false,
            "full_name": "group1",
            "full_path": "group1",
            "parent_id": null,
            "ldap_cn": null,
            "ldap_access": null
          }
        ],
        "protected_branches": [
          {
            "id": 1,
            "name": "master",
            "push_access_levels": [
              {
                "access_level": 30,
                "access_level_description": "Developers + Maintainers"
              }
            ],
            "merge_access_levels": [
              {
                "access_level": 30,
                "access_level_description": "Developers + Maintainers"
              }
            ],
            "unprotect_access_levels": [
              {
                "access_level": 40,
                "access_level_description": "Maintainers"
              }
            ],
            "code_owner_approval_required": "false"
          }
        ],
        "contains_hidden_groups": false
      }
    },
    {
      "name": "Update project-level rule",
      "description": "Parameters:",
      "resources": [
        {
          "method": "PUT",
          "path": "/projects/:id/approval_rules/:approval_rule_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "approval_rule_id",
          "type": "integer",
          "required": true,
          "description": "The ID of a approval rule"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "The name of the approval rule"
        },
        {
          "name": "approvals_required",
          "type": "integer",
          "required": true,
          "description": "The number of required approvals for this rule"
        },
        {
          "name": "user_ids",
          "type": "Array",
          "required": false,
          "description": "The ids of users as approvers"
        },
        {
          "name": "group_ids",
          "type": "Array",
          "required": false,
          "description": "The ids of groups as approvers"
        },
        {
          "name": "protected_branch_ids",
          "type": "Array",
          "required": false,
          "description": "The IDs of protected branches to scope the rule by. To identify the ID, use the API."
        },
        {
          "name": "scanners",
          "type": "Array",
          "required": false,
          "description": "The security scanners the Vulnerability-Check approval rule considers. The supported scanners are: sast, secret_detection, dependency_scanning, container_scanning, dast, coverage_fuzzing, api_fuzzing. Defaults to all supported scanners. Deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        },
        {
          "name": "severity_levels",
          "type": "Array",
          "required": false,
          "description": "The severity levels the Vulnerability-Check approval rule considers. The supported severity levels are: info, unknown, low, medium, high, critical. Defaults to unknown, high, and critical. Deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        },
        {
          "name": "vulnerabilities_allowed",
          "type": "integer",
          "required": false,
          "description": "The number of vulnerabilities allowed for the Vulnerability-Check approval rule. Defaults to 0. Deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        },
        {
          "name": "vulnerability_states",
          "type": "Array",
          "required": false,
          "description": "The vulnerability states the Vulnerability-Check approval rule considers. The supported vulnerability states are: newly_detected (default), detected, confirmed, resolved, dismissed. Deprecated in GitLab 14.8, and planned for removal in GitLab 15.0."
        }
      ],
      "response": {
        "id": 1,
        "name": "security",
        "rule_type": "regular",
        "eligible_approvers": [
          {
            "id": 2,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          },
          {
            "id": 50,
            "name": "Group Member 1",
            "username": "group_member_1",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/group_member_1"
          }
        ],
        "approvals_required": 1,
        "users": [
          {
            "id": 2,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          }
        ],
        "groups": [
          {
            "id": 5,
            "name": "group1",
            "path": "group1",
            "description": "",
            "visibility": "public",
            "lfs_enabled": false,
            "avatar_url": null,
            "web_url": "http://localhost/groups/group1",
            "request_access_enabled": false,
            "full_name": "group1",
            "full_path": "group1",
            "parent_id": null,
            "ldap_cn": null,
            "ldap_access": null
          }
        ],
        "protected_branches": [
          {
            "id": 1,
            "name": "master",
            "push_access_levels": [
              {
                "access_level": 30,
                "access_level_description": "Developers + Maintainers"
              }
            ],
            "merge_access_levels": [
              {
                "access_level": 30,
                "access_level_description": "Developers + Maintainers"
              }
            ],
            "unprotect_access_levels": [
              {
                "access_level": 40,
                "access_level_description": "Maintainers"
              }
            ],
            "code_owner_approval_required": "false"
          }
        ],
        "contains_hidden_groups": false
      }
    },
    {
      "name": "Delete project-level rule",
      "description": "Parameters:",
      "resources": [
        {
          "method": "DELETE",
          "path": "/projects/:id/approval_rules/:approval_rule_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "approval_rule_id",
          "type": "integer",
          "required": true,
          "description": "The ID of a approval rule"
        }
      ],
      "response": null
    },
    {
      "name": "Get Configuration",
      "description": "Parameters:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approvals"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of MR"
        }
      ],
      "response": {
        "id": 5,
        "iid": 5,
        "project_id": 1,
        "title": "Approvals API",
        "description": "Test",
        "state": "opened",
        "created_at": "2016-06-08T00:19:52.638Z",
        "updated_at": "2016-06-08T21:20:42.470Z",
        "merge_status": "cannot_be_merged",
        "approvals_required": 2,
        "approvals_left": 1,
        "approved_by": [
          {
            "user": {
              "name": "Administrator",
              "username": "root",
              "id": 1,
              "state": "active",
              "avatar_url": "http://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80&d=identicon",
              "web_url": "http://localhost:3000/root"
            }
          }
        ]
      }
    },
    {
      "name": "Change approval configuration",
      "description": "Parameters:",
      "resources": [
        {
          "method": "POST",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approvals"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of MR"
        },
        {
          "name": "approvals_required",
          "type": "integer",
          "required": true,
          "description": "Approvals required before MR can be merged. Deprecated in 12.0 in favor of Approval Rules API."
        }
      ],
      "response": {
        "id": 5,
        "iid": 5,
        "project_id": 1,
        "title": "Approvals API",
        "description": "Test",
        "state": "opened",
        "created_at": "2016-06-08T00:19:52.638Z",
        "updated_at": "2016-06-08T21:20:42.470Z",
        "merge_status": "cannot_be_merged",
        "approvals_required": 2,
        "approvals_left": 2,
        "approved_by": []
      }
    },
    {
      "name": "Get the approval state of merge requests",
      "description": "Parameters:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approval_state"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of MR"
        }
      ],
      "response": {
        "approval_rules_overwritten": true,
        "rules": [
          {
            "id": 1,
            "name": "Ruby",
            "rule_type": "regular",
            "eligible_approvers": [
              {
                "id": 4,
                "name": "John Doe",
                "username": "jdoe",
                "state": "active",
                "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
                "web_url": "http://localhost/jdoe"
              }
            ],
            "approvals_required": 2,
            "users": [
              {
                "id": 4,
                "name": "John Doe",
                "username": "jdoe",
                "state": "active",
                "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
                "web_url": "http://localhost/jdoe"
              }
            ],
            "groups": [],
            "contains_hidden_groups": false,
            "approved_by": [
              {
                "id": 4,
                "name": "John Doe",
                "username": "jdoe",
                "state": "active",
                "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
                "web_url": "http://localhost/jdoe"
              }
            ],
            "source_rule": null,
            "approved": true,
            "overridden": false
          }
        ]
      }
    },
    {
      "name": "Get merge request level rules",
      "description": "Parameters:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approval_rules"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of MR"
        }
      ],
      "response": [
        {
          "id": 1,
          "name": "security",
          "rule_type": "regular",
          "eligible_approvers": [
            {
              "id": 5,
              "name": "John Doe",
              "username": "jdoe",
              "state": "active",
              "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
              "web_url": "http://localhost/jdoe"
            },
            {
              "id": 50,
              "name": "Group Member 1",
              "username": "group_member_1",
              "state": "active",
              "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
              "web_url": "http://localhost/group_member_1"
            }
          ],
          "approvals_required": 3,
          "source_rule": null,
          "users": [
            {
              "id": 5,
              "name": "John Doe",
              "username": "jdoe",
              "state": "active",
              "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
              "web_url": "http://localhost/jdoe"
            }
          ],
          "groups": [
            {
              "id": 5,
              "name": "group1",
              "path": "group1",
              "description": "",
              "visibility": "public",
              "lfs_enabled": false,
              "avatar_url": null,
              "web_url": "http://localhost/groups/group1",
              "request_access_enabled": false,
              "full_name": "group1",
              "full_path": "group1",
              "parent_id": null,
              "ldap_cn": null,
              "ldap_access": null
            }
          ],
          "contains_hidden_groups": false,
          "overridden": false
        }
      ]
    },
    {
      "name": "Get a single merge request level rule",
      "description": "Parameters:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approval_rules/:approval_rule_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project."
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of a merge request."
        },
        {
          "name": "approval_rule_id",
          "type": "integer",
          "required": true,
          "description": "The ID of an approval rule."
        }
      ],
      "response": {
        "id": 1,
        "name": "security",
        "rule_type": "regular",
        "eligible_approvers": [
          {
            "id": 5,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          },
          {
            "id": 50,
            "name": "Group Member 1",
            "username": "group_member_1",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/group_member_1"
          }
        ],
        "approvals_required": 3,
        "source_rule": null,
        "users": [
          {
            "id": 5,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          }
        ],
        "groups": [
          {
            "id": 5,
            "name": "group1",
            "path": "group1",
            "description": "",
            "visibility": "public",
            "lfs_enabled": false,
            "avatar_url": null,
            "web_url": "http://localhost/groups/group1",
            "request_access_enabled": false,
            "full_name": "group1",
            "full_path": "group1",
            "parent_id": null,
            "ldap_cn": null,
            "ldap_access": null
          }
        ],
        "contains_hidden_groups": false,
        "overridden": false
      }
    },
    {
      "name": "Create merge request level rule",
      "description": "Important: When approval_project_rule_id is set, the name, users and groups of project-level rule are copied. The approvals_required specified is used.",
      "resources": [
        {
          "method": "POST",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approval_rules"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of MR"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "The name of the approval rule"
        },
        {
          "name": "approvals_required",
          "type": "integer",
          "required": true,
          "description": "The number of required approvals for this rule"
        },
        {
          "name": "approval_project_rule_id",
          "type": "integer",
          "required": false,
          "description": "The ID of a project-level approval rule"
        },
        {
          "name": "user_ids",
          "type": "Array",
          "required": false,
          "description": "The ids of users as approvers"
        },
        {
          "name": "group_ids",
          "type": "Array",
          "required": false,
          "description": "The ids of groups as approvers"
        }
      ],
      "response": {
        "id": 1,
        "name": "security",
        "rule_type": "regular",
        "eligible_approvers": [
          {
            "id": 2,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          },
          {
            "id": 50,
            "name": "Group Member 1",
            "username": "group_member_1",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/group_member_1"
          }
        ],
        "approvals_required": 1,
        "source_rule": null,
        "users": [
          {
            "id": 2,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          }
        ],
        "groups": [
          {
            "id": 5,
            "name": "group1",
            "path": "group1",
            "description": "",
            "visibility": "public",
            "lfs_enabled": false,
            "avatar_url": null,
            "web_url": "http://localhost/groups/group1",
            "request_access_enabled": false,
            "full_name": "group1",
            "full_path": "group1",
            "parent_id": null,
            "ldap_cn": null,
            "ldap_access": null
          }
        ],
        "contains_hidden_groups": false,
        "overridden": false
      }
    },
    {
      "name": "Update merge request level rule",
      "description": "Parameters:",
      "resources": [
        {
          "method": "PUT",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approval_rules/:approval_rule_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project."
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of a merge request."
        },
        {
          "name": "approval_rule_id",
          "type": "integer",
          "required": true,
          "description": "The ID of an approval rule."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "The name of the approval rule."
        },
        {
          "name": "approvals_required",
          "type": "integer",
          "required": true,
          "description": "The number of required approvals for this rule."
        },
        {
          "name": "user_ids",
          "type": "Array",
          "required": false,
          "description": "The IDs of users as approvers."
        },
        {
          "name": "group_ids",
          "type": "Array",
          "required": false,
          "description": "The IDs of groups as approvers."
        }
      ],
      "response": {
        "id": 1,
        "name": "security",
        "rule_type": "regular",
        "eligible_approvers": [
          {
            "id": 2,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          },
          {
            "id": 50,
            "name": "Group Member 1",
            "username": "group_member_1",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/group_member_1"
          }
        ],
        "approvals_required": 1,
        "source_rule": null,
        "users": [
          {
            "id": 2,
            "name": "John Doe",
            "username": "jdoe",
            "state": "active",
            "avatar_url": "https://www.gravatar.com/avatar/0?s=80&d=identicon",
            "web_url": "http://localhost/jdoe"
          }
        ],
        "groups": [
          {
            "id": 5,
            "name": "group1",
            "path": "group1",
            "description": "",
            "visibility": "public",
            "lfs_enabled": false,
            "avatar_url": null,
            "web_url": "http://localhost/groups/group1",
            "request_access_enabled": false,
            "full_name": "group1",
            "full_path": "group1",
            "parent_id": null,
            "ldap_cn": null,
            "ldap_access": null
          }
        ],
        "contains_hidden_groups": false,
        "overridden": false
      }
    },
    {
      "name": "Delete merge request level rule",
      "description": "Parameters:",
      "resources": [
        {
          "method": "DELETE",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approval_rules/:approval_rule_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of the merge request"
        },
        {
          "name": "approval_rule_id",
          "type": "integer",
          "required": true,
          "description": "The ID of an approval rule"
        }
      ],
      "response": null
    },
    {
      "name": "Approve merge request",
      "description": "The sha parameter works in the same way as when accepting a merge request: if it is passed, then it must match the current HEAD of the merge request for the approval to be added. If it does not match, the response code is 409.",
      "resources": [
        {
          "method": "POST",
          "path": "/projects/:id/merge_requests/:merge_request_iid/approve"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of the merge request"
        },
        {
          "name": "sha",
          "type": "string",
          "required": false,
          "description": "The HEAD of the merge request"
        },
        {
          "name": "approval_password",
          "type": "string",
          "required": false,
          "description": "Current user’s password. Required if Require user password to approve is enabled in the project settings."
        }
      ],
      "response": {
        "id": 5,
        "iid": 5,
        "project_id": 1,
        "title": "Approvals API",
        "description": "Test",
        "state": "opened",
        "created_at": "2016-06-08T00:19:52.638Z",
        "updated_at": "2016-06-09T21:32:14.105Z",
        "merge_status": "can_be_merged",
        "approvals_required": 2,
        "approvals_left": 0,
        "approved_by": [
          {
            "user": {
              "name": "Administrator",
              "username": "root",
              "id": 1,
              "state": "active",
              "avatar_url": "http://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80&d=identicon",
              "web_url": "http://localhost:3000/root"
            }
          },
          {
            "user": {
              "name": "Nico Cartwright",
              "username": "ryley",
              "id": 2,
              "state": "active",
              "avatar_url": "http://www.gravatar.com/avatar/cf7ad14b34162a76d593e3affca2adca?s=80&d=identicon",
              "web_url": "http://localhost:3000/ryley"
            }
          }
        ]
      }
    },
    {
      "name": "Unapprove merge request",
      "description": "Parameters:",
      "resources": [
        {
          "method": "POST",
          "path": "/projects/:id/merge_requests/:merge_request_iid/unapprove"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of a project"
        },
        {
          "name": "merge_request_iid",
          "type": "integer",
          "required": true,
          "description": "The IID of a merge request"
        }
      ],
      "response": null
    }
  ]
}