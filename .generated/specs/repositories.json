{
  "origin": "https://docs.gitlab.com/ee/api/repositories.html",
  "pageName": "Repositories",
  "apis": [
    {
      "name": "List repository tree",
      "description": "Supported attributes:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/repository/tree"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of the project owned by the authenticated user."
        },
        {
          "name": "path",
          "type": "string",
          "required": false,
          "description": "The path inside repository. Used to get content of subdirectories."
        },
        {
          "name": "ref",
          "type": "string",
          "required": false,
          "description": "The name of a repository branch or tag or if not given the default branch."
        },
        {
          "name": "recursive",
          "type": "boolean",
          "required": false,
          "description": "Boolean value used to get a recursive tree (false by default)."
        },
        {
          "name": "per_page",
          "type": "integer",
          "required": false,
          "description": "Number of results to show per page. If not specified, defaults to 20. Learn more on pagination."
        },
        {
          "name": "pagination",
          "type": "string",
          "required": false,
          "description": "If set to keyset, use the new keyset pagination method."
        },
        {
          "name": "page_token",
          "type": "string",
          "required": false,
          "description": "The tree record ID at which to fetch the next page. Used only with keyset pagination."
        }
      ],
      "response": [
        {
          "id": "a1e8f8d745cc87e3a9248358d9352bb7f9a0aeba",
          "name": "html",
          "type": "tree",
          "path": "files/html",
          "mode": "040000"
        },
        {
          "id": "4535904260b1082e14f867f7a24fd8c21495bde3",
          "name": "images",
          "type": "tree",
          "path": "files/images",
          "mode": "040000"
        },
        {
          "id": "31405c5ddef582c5a9b7a85230413ff90e2fe720",
          "name": "js",
          "type": "tree",
          "path": "files/js",
          "mode": "040000"
        },
        {
          "id": "cc71111cfad871212dc99572599a568bfe1e7e00",
          "name": "lfs",
          "type": "tree",
          "path": "files/lfs",
          "mode": "040000"
        },
        {
          "id": "fd581c619bf59cfdfa9c8282377bb09c2f897520",
          "name": "markdown",
          "type": "tree",
          "path": "files/markdown",
          "mode": "040000"
        },
        {
          "id": "23ea4d11a4bdd960ee5320c5cb65b5b3fdbc60db",
          "name": "ruby",
          "type": "tree",
          "path": "files/ruby",
          "mode": "040000"
        },
        {
          "id": "7d70e02340bac451f281cecf0a980907974bd8be",
          "name": "whitespace",
          "type": "blob",
          "path": "files/whitespace",
          "mode": "100644"
        }
      ]
    },
    {
      "name": "Get a blob from repository",
      "description": "Supported attributes:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/repository/blobs/:sha"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of the project owned by the authenticated user."
        },
        {
          "name": "sha",
          "type": "string",
          "required": true,
          "description": "The blob SHA."
        }
      ],
      "response": null
    },
    {
      "name": "Raw blob content",
      "description": "Supported attributes:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/repository/blobs/:sha/raw"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of the project owned by the authenticated user."
        },
        {
          "name": "sha",
          "type": "string",
          "required": true,
          "description": "The blob SHA."
        }
      ],
      "response": null
    },
    {
      "name": "Get file archive",
      "description": "Supported attributes:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/repository/archive[.format]"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of the project owned by the authenticated user."
        },
        {
          "name": "sha",
          "type": "string",
          "required": false,
          "description": "The commit SHA to download. A tag, branch reference, or SHA can be used. This defaults to the tip of the default branch if not specified."
        },
        {
          "name": "path",
          "type": "string",
          "required": false,
          "description": "The subpath of the repository to download. This defaults to the whole repository (empty string)."
        }
      ],
      "response": null
    },
    {
      "name": "Compare branches, tags or commits",
      "description": "Supported attributes:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/repository/compare?from=master&to=feature"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of the project owned by the authenticated user."
        },
        {
          "name": "from",
          "type": "string",
          "required": true,
          "description": "The commit SHA or branch name."
        },
        {
          "name": "to",
          "type": "string",
          "required": true,
          "description": "The commit SHA or branch name."
        },
        {
          "name": "from_project_id",
          "type": "integer",
          "required": false,
          "description": "The ID to compare from"
        },
        {
          "name": "straight",
          "type": "boolean",
          "required": false,
          "description": "Comparison method, true for direct comparison between from and to (from..to), false to compare using merge base (from…to)’. Default is false."
        }
      ],
      "response": {
        "commit": {
          "id": "12d65c8dd2b2676fa3ac47d955accc085a37a9c1",
          "short_id": "12d65c8dd2b",
          "title": "JS fix",
          "author_name": "Example User",
          "author_email": "user@example.com",
          "created_at": "2014-02-27T10:27:00+02:00"
        },
        "commits": [
          {
            "id": "12d65c8dd2b2676fa3ac47d955accc085a37a9c1",
            "short_id": "12d65c8dd2b",
            "title": "JS fix",
            "author_name": "Example User",
            "author_email": "user@example.com",
            "created_at": "2014-02-27T10:27:00+02:00"
          }
        ],
        "diffs": [
          {
            "old_path": "files/js/application.js",
            "new_path": "files/js/application.js",
            "a_mode": null,
            "b_mode": "100644",
            "diff": "--- a/files/js/application.js\n+++ b/files/js/application.js\n@@ -24,8 +24,10 @@\n //= require g.raphael-min\n //= require g.bar-min\n //= require branch-graph\n-//= require highlightjs.min\n-//= require ace/ace\n //= require_tree .\n //= require d3\n //= require underscore\n+\n+function fix() { \n+  alert(\"Fixed\")\n+}",
            "new_file": false,
            "renamed_file": false,
            "deleted_file": false
          }
        ],
        "compare_timeout": false,
        "compare_same_ref": false,
        "web_url": "https://gitlab.example.com/thedude/gitlab-foss/-/compare/ae73cb07c9eeaf35924a10f713b364d32b2dd34f...0b4bc9a49b562e85de7cc9e834518ea6828729b9"
      }
    },
    {
      "name": "Contributors",
      "description": "Supported attributes:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/repository/contributors"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of the project owned by the authenticated user."
        },
        {
          "name": "order_by",
          "type": "string",
          "required": false,
          "description": "Return contributors ordered by name, email, or commits (orders by commit date) fields. Default is commits."
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "description": "Return contributors sorted in asc or desc order. Default is asc."
        }
      ],
      "response": [
        {
          "name": "Example User",
          "email": "example@example.com",
          "commits": 117,
          "additions": 0,
          "deletions": 0
        },
        {
          "name": "Sample User",
          "email": "sample@example.com",
          "commits": 33,
          "additions": 0,
          "deletions": 0
        }
      ]
    },
    {
      "name": "Merge Base",
      "description": "Get the common ancestor for 2 or more refs (commit SHAs, branch names or tags).",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/repository/merge_base"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer or string",
          "required": true,
          "description": "The ID or URL-encoded path of the project"
        },
        {
          "name": "refs",
          "type": "array",
          "required": true,
          "description": "The refs to find the common ancestor of, multiple refs can be passed"
        }
      ],
      "response": {
        "id": "1a0b36b3cdad1d2ee32457c102a8c0b7056fa863",
        "short_id": "1a0b36b3",
        "title": "Initial commit",
        "created_at": "2014-02-27T08:03:18.000Z",
        "parent_ids": [],
        "message": "Initial commit\n",
        "author_name": "Example User",
        "author_email": "user@example.com",
        "authored_date": "2014-02-27T08:03:18.000Z",
        "committer_name": "Example User",
        "committer_email": "user@example.com",
        "committed_date": "2014-02-27T08:03:18.000Z"
      }
    },
    {
      "name": "Add changelog data to a changelog file",
      "description": "If from is unspecified and no tag to use is found, the API produces an error. To solve such an error, you must explicitly specify a value for the from attribute.",
      "resources": [
        {
          "method": "POST",
          "path": "/projects/:id/repository/changelog"
        }
      ],
      "attributes": [
        {
          "name": "version",
          "type": "string",
          "required": true,
          "description": "The version to generate the changelog for. The format must follow semantic versioning."
        },
        {
          "name": "from",
          "type": "string",
          "required": false,
          "description": "The start of the range of commits (as a SHA) to use for generating the changelog. This commit itself isn’t included in the list."
        },
        {
          "name": "to",
          "type": "string",
          "required": false,
          "description": "The end of the range of commits (as a SHA) to use for the changelog. This commit is included in the list. Defaults to the branch specified in the branch attribute."
        },
        {
          "name": "date",
          "type": "datetime",
          "required": false,
          "description": "The date and time of the release, defaults to the current time."
        },
        {
          "name": "branch",
          "type": "string",
          "required": false,
          "description": "The branch to commit the changelog changes to, defaults to the project’s default branch."
        },
        {
          "name": "trailer",
          "type": "string",
          "required": false,
          "description": "The Git trailer to use for including commits, defaults to Changelog."
        },
        {
          "name": "file",
          "type": "string",
          "required": false,
          "description": "The file to commit the changes to, defaults to CHANGELOG.md."
        },
        {
          "name": "message",
          "type": "string",
          "required": false,
          "description": "The commit message to produce when committing the changes, defaults to Add changelog for version X where X is the value of the version argument."
        }
      ],
      "response": null
    },
    {
      "name": "How it works",
      "description": "Trailers can be manually added while editing a commit message. To include a commit using the default trailer of Changelog and categorize it as a feature, the trailer could be added to a commit message like so:",
      "resources": [
        {
          "method": "<Commit",
          "path": "message"
        },
        {
          "method": "<Commit",
          "path": "message"
        },
        {
          "method": "Changelog:",
          "path": "feature"
        }
      ],
      "attributes": [],
      "response": null
    },
    {
      "name": "Custom templates",
      "description": "When specifying the template you should use template: | and not template: >, as the latter doesn’t preserve newlines in the template.",
      "resources": [
        {
          "method": "---"
        },
        {
          "method": "bar"
        },
        {
          "method": "---"
        }
      ],
      "attributes": [],
      "response": null
    },
    {
      "name": "Customize the tag format when extracting versions",
      "description": "To test if your regular expression is working, you can use websites such as regex101. If the regular expression syntax is invalid, an error is produced when generating a changelog.",
      "resources": [
        {
          "method": "^v?(?P<major>0|[1-9]\\d*)\\.(?P<minor>0|[1-9]\\d*)\\.(?P<patch>0|[1-9]\\d*)(?:-(?P<pre>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?P<meta>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
        }
      ],
      "attributes": [],
      "response": null
    },
    {
      "name": "Generate changelog data",
      "description": "Supported attributes:",
      "resources": [
        {
          "method": "GET",
          "path": "/projects/:id/repository/changelog"
        }
      ],
      "attributes": [
        {
          "name": "version",
          "type": "string",
          "required": true,
          "description": "The version to generate the changelog for. The format must follow semantic versioning."
        },
        {
          "name": "from",
          "type": "string",
          "required": false,
          "description": "The start of the range of commits (as a SHA) to use for generating the changelog. This commit itself isn’t included in the list."
        },
        {
          "name": "to",
          "type": "string",
          "required": false,
          "description": "The end of the range of commits (as a SHA) to use for the changelog. This commit is included in the list. Defaults to the branch specified in the branch attribute."
        },
        {
          "name": "date",
          "type": "datetime",
          "required": false,
          "description": "The date and time of the release, ISO 8601 formatted. Example: 2016-03-11T03:45:40Z. Defaults to the current time."
        },
        {
          "name": "trailer",
          "type": "string",
          "required": false,
          "description": "The Git trailer to use for including commits, defaults to Changelog."
        }
      ],
      "response": {
        "notes": "## 1.0.0 (2021-11-17)\n\n### feature (2 changes)\n\n- [Title 2](namespace13/project13@ad608eb642124f5b3944ac0ac772fecaf570a6bf) ([merge request](namespace13/project13!2))\n- [Title 1](namespace13/project13@3c6b80ff7034fa0d585314e1571cc780596ce3c8) ([merge request](namespace13/project13!1))\n"
      }
    }
  ]
}