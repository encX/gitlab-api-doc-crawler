[
  {
    "/projects/{id}/integrations": {
      "get": {
        "summary": "List all active integrations",
        "description": "Get a list of all active project integrations.",
        "operationId": "listAllActiveIntegrations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "active": {
                        "type": "boolean"
                      },
                      "commit_events": {
                        "type": "boolean"
                      },
                      "push_events": {
                        "type": "boolean"
                      },
                      "issues_events": {
                        "type": "boolean"
                      },
                      "confidential_issues_events": {
                        "type": "boolean"
                      },
                      "merge_requests_events": {
                        "type": "boolean"
                      },
                      "tag_push_events": {
                        "type": "boolean"
                      },
                      "note_events": {
                        "type": "boolean"
                      },
                      "confidential_note_events": {
                        "type": "boolean"
                      },
                      "pipeline_events": {
                        "type": "boolean"
                      },
                      "wiki_page_events": {
                        "type": "boolean"
                      },
                      "job_events": {
                        "type": "boolean"
                      },
                      "comment_on_event_enabled": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/asana": {
      "put": {
        "summary": "Create/Edit Asana integration",
        "description": "Set Asana integration for a project.",
        "operationId": "create/editAsanaIntegration",
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "description": "User API token. User must have access to task. All comments are attributed to this user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restrict_to_branch",
            "in": "query",
            "description": "Comma-separated list of branches to be are automatically inspected. Leave blank to include all branches.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/asana": {
      "delete": {
        "summary": "Disable Asana integration",
        "description": "Disable the Asana integration for a project. Integration settings are preserved.",
        "operationId": "disableAsanaIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/asana": {
      "get": {
        "summary": "Get Asana integration settings",
        "description": "Get Asana integration settings for a project.",
        "operationId": "getAsanaIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/assembla": {
      "put": {
        "summary": "Create/Edit Assembla integration",
        "description": "Set Assembla integration for a project.",
        "operationId": "create/editAssemblaIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The authentication token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subdomain",
            "in": "query",
            "description": "The subdomain setting",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/assembla": {
      "delete": {
        "summary": "Disable Assembla integration",
        "description": "Disable the Assembla integration for a project. Integration settings are preserved.",
        "operationId": "disableAssemblaIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/assembla": {
      "get": {
        "summary": "Get Assembla integration settings",
        "description": "Get Assembla integration settings for a project.",
        "operationId": "getAssemblaIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/bamboo": {
      "put": {
        "summary": "Create/Edit Atlassian Bamboo CI integration",
        "description": "Set Atlassian Bamboo CI integration for a project.",
        "operationId": "create/editAtlassianBambooCiIntegration",
        "parameters": [
          {
            "name": "bamboo_url",
            "in": "query",
            "description": "Bamboo root URL. For example, https://bamboo.example.com.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enable_ssl_verification",
            "in": "query",
            "description": "Enable SSL verification. Defaults to true (enabled).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "build_key",
            "in": "query",
            "description": "Bamboo build plan key like KEY",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "A user with API access, if applicable",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of the user",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/bamboo": {
      "delete": {
        "summary": "Disable Atlassian Bamboo CI integration",
        "description": "Disable the Atlassian Bamboo CI integration for a project. Integration settings are preserved.",
        "operationId": "disableAtlassianBambooCiIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/bamboo": {
      "get": {
        "summary": "Get Atlassian Bamboo CI integration settings",
        "description": "Get Atlassian Bamboo CI integration settings for a project.",
        "operationId": "getAtlassianBambooCiIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/bugzilla": {
      "put": {
        "summary": "Create/Edit Bugzilla integration",
        "description": "Set Bugzilla integration for a project.",
        "operationId": "create/editBugzillaIntegration",
        "parameters": [
          {
            "name": "new_issue_url",
            "in": "query",
            "description": "New Issue URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_url",
            "in": "query",
            "description": "Issue URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_url",
            "in": "query",
            "description": "Project URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/bugzilla": {
      "delete": {
        "summary": "Disable Bugzilla integration",
        "description": "Disable the Bugzilla integration for a project. Integration settings are preserved.",
        "operationId": "disableBugzillaIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/bugzilla": {
      "get": {
        "summary": "Get Bugzilla integration settings",
        "description": "Get Bugzilla integration settings for a project.",
        "operationId": "getBugzillaIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/buildkite": {
      "put": {
        "summary": "Create/Edit Buildkite integration",
        "description": "Set Buildkite integration for a project.",
        "operationId": "create/editBuildkiteIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Buildkite project GitLab token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_url",
            "in": "query",
            "description": "Pipeline URL. For example, https://buildkite.com/example/pipeline",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enable_ssl_verification",
            "in": "query",
            "description": "DEPRECATED: This parameter has no effect since SSL verification is always enabled",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/buildkite": {
      "delete": {
        "summary": "Disable Buildkite integration",
        "description": "Disable the Buildkite integration for a project. Integration settings are preserved.",
        "operationId": "disableBuildkiteIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/buildkite": {
      "get": {
        "summary": "Get Buildkite integration settings",
        "description": "Get Buildkite integration settings for a project.",
        "operationId": "getBuildkiteIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/campfire": {
      "put": {
        "summary": "Create/Edit Campfire integration",
        "description": "Set Campfire integration for a project.",
        "operationId": "create/editCampfireIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Campfire API token. To find it, log into Campfire and select My info.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subdomain",
            "in": "query",
            "description": "Campfire subdomain. Text between https:// and .campfirenow.com when you’re logged in.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "room",
            "in": "query",
            "description": "Campfire room. The last part of the URL when you’re in a room.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/campfire": {
      "delete": {
        "summary": "Disable Campfire integration",
        "description": "Disable the Campfire integration for a project. Integration settings are preserved.",
        "operationId": "disableCampfireIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/campfire": {
      "get": {
        "summary": "Get Campfire integration settings",
        "description": "Get Campfire integration settings for a project.",
        "operationId": "getCampfireIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/datadog": {
      "put": {
        "summary": "Create/Edit Datadog integration",
        "description": "Set Datadog integration for a project.",
        "operationId": "create/editDatadogIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/datadog": {
      "delete": {
        "summary": "Disable Datadog integration",
        "description": "Disable the Datadog integration for a project. Integration settings are preserved.",
        "operationId": "disableDatadogIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/datadog": {
      "get": {
        "summary": "Get Datadog integration settings",
        "description": "Get Datadog integration settings for a project.",
        "operationId": "getDatadogIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/unify-circuit": {
      "put": {
        "summary": "Create/Edit Unify Circuit integration",
        "description": "Set Unify Circuit integration for a project.",
        "operationId": "create/editUnifyCircuitIntegration",
        "parameters": [
          {
            "name": "webhook",
            "in": "query",
            "description": "The Unify Circuit webhook. For example, https://circuit.com/rest/v2/webhooks/incoming/....",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_broken_pipelines",
            "in": "query",
            "description": "Send notifications for broken pipelines",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branches_to_be_notified",
            "in": "query",
            "description": "Branches to send notifications for. Valid options are “all”, “default”, “protected”, and “default_and_protected”. The default value is “default”",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_events",
            "in": "query",
            "description": "Enable notifications for issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_issues_events",
            "in": "query",
            "description": "Enable notifications for confidential issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_events",
            "in": "query",
            "description": "Enable notifications for note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_note_events",
            "in": "query",
            "description": "Enable notifications for confidential note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_events",
            "in": "query",
            "description": "Enable notifications for pipeline events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wiki_page_events",
            "in": "query",
            "description": "Enable notifications for wiki page events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/unify-circuit": {
      "delete": {
        "summary": "Disable Unify Circuit integration",
        "description": "Disable the Unify Circuit integration for a project. Integration settings are preserved.",
        "operationId": "disableUnifyCircuitIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/unify-circuit": {
      "get": {
        "summary": "Get Unify Circuit integration settings",
        "description": "Get Unify Circuit integration settings for a project.",
        "operationId": "getUnifyCircuitIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/webex-teams": {
      "put": {
        "summary": "Create/Edit Webex Teams integration",
        "description": "Set Webex Teams integration for a project.",
        "operationId": "create/editWebexTeamsIntegration",
        "parameters": [
          {
            "name": "webhook",
            "in": "query",
            "description": "The Webex Teams webhook. For example, https://api.ciscospark.com/v1/webhooks/incoming/....",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_broken_pipelines",
            "in": "query",
            "description": "Send notifications for broken pipelines",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branches_to_be_notified",
            "in": "query",
            "description": "Branches to send notifications for. Valid options are “all”, “default”, “protected”, and “default_and_protected”. The default value is “default”",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_events",
            "in": "query",
            "description": "Enable notifications for issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_issues_events",
            "in": "query",
            "description": "Enable notifications for confidential issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_events",
            "in": "query",
            "description": "Enable notifications for note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_note_events",
            "in": "query",
            "description": "Enable notifications for confidential note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_events",
            "in": "query",
            "description": "Enable notifications for pipeline events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wiki_page_events",
            "in": "query",
            "description": "Enable notifications for wiki page events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/webex-teams": {
      "delete": {
        "summary": "Disable Webex Teams integration",
        "description": "Disable the Webex Teams integration for a project. Integration settings are preserved.",
        "operationId": "disableWebexTeamsIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/webex-teams": {
      "get": {
        "summary": "Get Webex Teams integration settings",
        "description": "Get Webex Teams integration settings for a project.",
        "operationId": "getWebexTeamsIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/custom-issue-tracker": {
      "put": {
        "summary": "Create/Edit Custom Issue Tracker integration",
        "description": "Set Custom Issue Tracker integration for a project.",
        "operationId": "create/editCustomIssueTrackerIntegration",
        "parameters": [
          {
            "name": "new_issue_url",
            "in": "query",
            "description": "New Issue URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_url",
            "in": "query",
            "description": "Issue URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_url",
            "in": "query",
            "description": "Project URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/custom-issue-tracker": {
      "delete": {
        "summary": "Disable Custom Issue Tracker integration",
        "description": "Disable the Custom Issue Tracker integration for a project. Integration settings are preserved.",
        "operationId": "disableCustomIssueTrackerIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/custom-issue-tracker": {
      "get": {
        "summary": "Get Custom Issue Tracker integration settings",
        "description": "Get Custom Issue Tracker integration settings for a project.",
        "operationId": "getCustomIssueTrackerIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/discord": {
      "put": {
        "summary": "Create/Edit Discord integration",
        "description": "Set Discord integration for a project.",
        "operationId": "create/editDiscordIntegration",
        "parameters": [
          {
            "name": "webhook",
            "in": "query",
            "description": "Discord webhook. For example, https://discord.com/api/webhooks/…",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/discord": {
      "delete": {
        "summary": "Disable Discord integration",
        "description": "Disable the Discord integration for a project. Integration settings are preserved.",
        "operationId": "disableDiscordIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/discord": {
      "get": {
        "summary": "Get Discord integration settings",
        "description": "Get Discord integration settings for a project.",
        "operationId": "getDiscordIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/drone-ci": {
      "put": {
        "summary": "Create/Edit Drone CI integration",
        "description": "Set Drone CI integration for a project.",
        "operationId": "create/editDroneCiIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Drone CI project specific token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "drone_url",
            "in": "query",
            "description": "http://drone.example.com",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enable_ssl_verification",
            "in": "query",
            "description": "Enable SSL verification. Defaults to true (enabled).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/drone-ci": {
      "delete": {
        "summary": "Disable Drone CI integration",
        "description": "Disable the Drone CI integration for a project. Integration settings are preserved.",
        "operationId": "disableDroneCiIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/drone-ci": {
      "get": {
        "summary": "Get Drone CI integration settings",
        "description": "Get Drone CI integration settings for a project.",
        "operationId": "getDroneCiIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/emails-on-push": {
      "put": {
        "summary": "Create/Edit Emails on Push integration",
        "description": "Set Emails on Push integration for a project.",
        "operationId": "create/editEmailsOnPushIntegration",
        "parameters": [
          {
            "name": "recipients",
            "in": "query",
            "description": "Emails separated by whitespace",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disable_diffs",
            "in": "query",
            "description": "Disable code diffs",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "send_from_committer_email",
            "in": "query",
            "description": "Send from committer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branches_to_be_notified",
            "in": "query",
            "description": "Branches to send notifications for. Valid options are “all”, “default”, “protected”, and “default_and_protected”. Notifications are always fired for tag pushes. The default value is “all”",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/emails-on-push": {
      "delete": {
        "summary": "Disable Emails on Push integration",
        "description": "Disable the Emails on Push integration for a project. Integration settings are preserved.",
        "operationId": "disableEmailsOnPushIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/emails-on-push": {
      "get": {
        "summary": "Get Emails on Push integration settings",
        "description": "Get Emails on Push integration settings for a project.",
        "operationId": "getEmailsOnPushIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/ewm": {
      "put": {
        "summary": "Create/Edit EWM integration",
        "description": "Set EWM integration for a project.",
        "operationId": "create/editEwmIntegration",
        "parameters": [
          {
            "name": "new_issue_url",
            "in": "query",
            "description": "The URL to create an issue in EWM",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_url",
            "in": "query",
            "description": "The URL to the project in EWM",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_url",
            "in": "query",
            "description": "The URL to view an issue in EWM. Must contain :id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/ewm": {
      "delete": {
        "summary": "Disable EWM integration",
        "description": "Disable the EWM integration for a project. Integration settings are preserved.",
        "operationId": "disableEwmIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/ewm": {
      "get": {
        "summary": "Get EWM integration settings",
        "description": "Get EWM integration settings for a project.",
        "operationId": "getEwmIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/confluence": {
      "put": {
        "summary": "Create/Edit Confluence integration",
        "description": "Set Confluence integration for a project.",
        "operationId": "create/editConfluenceIntegration",
        "parameters": [
          {
            "name": "confluence_url",
            "in": "query",
            "description": "The URL of the Confluence Cloud Workspace hosted on atlassian.net.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/confluence": {
      "delete": {
        "summary": "Disable Confluence integration",
        "description": "Disable the Confluence integration for a project. Integration settings are preserved.",
        "operationId": "disableConfluenceIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/confluence": {
      "get": {
        "summary": "Get Confluence integration settings",
        "description": "Get Confluence integration settings for a project.",
        "operationId": "getConfluenceIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/external-wiki": {
      "put": {
        "summary": "Create/Edit External wiki integration",
        "description": "Set External wiki integration for a project.",
        "operationId": "create/editExternalWikiIntegration",
        "parameters": [
          {
            "name": "external_wiki_url",
            "in": "query",
            "description": "The URL of the external wiki",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/external-wiki": {
      "delete": {
        "summary": "Disable External wiki integration",
        "description": "Disable the External wiki integration for a project. Integration settings are preserved.",
        "operationId": "disableExternalWikiIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/external-wiki": {
      "get": {
        "summary": "Get External wiki integration settings",
        "description": "Get External wiki integration settings for a project.",
        "operationId": "getExternalWikiIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/flowdock": {
      "put": {
        "summary": "Create/Edit Flowdock integration",
        "description": "Set Flowdock integration for a project.",
        "operationId": "create/editFlowdockIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Flowdock Git source token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/flowdock": {
      "delete": {
        "summary": "Disable Flowdock integration",
        "description": "Disable the Flowdock integration for a project. Integration settings are preserved.",
        "operationId": "disableFlowdockIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/flowdock": {
      "get": {
        "summary": "Get Flowdock integration settings",
        "description": "Get Flowdock integration settings for a project.",
        "operationId": "getFlowdockIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/github": {
      "put": {
        "summary": "Create/Edit GitHub integration",
        "description": "Set GitHub integration for a project.",
        "operationId": "create/editGithubIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "GitHub API token with repo:status OAuth scope",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repository_url",
            "in": "query",
            "description": "GitHub repository URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "static_context",
            "in": "query",
            "description": "Append instance name instead of branch to status check name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/github": {
      "delete": {
        "summary": "Disable GitHub integration",
        "description": "Disable the GitHub integration for a project. Integration settings are preserved.",
        "operationId": "disableGithubIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/github": {
      "get": {
        "summary": "Get GitHub integration settings",
        "description": "Get GitHub integration settings for a project.",
        "operationId": "getGithubIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/hangouts-chat": {
      "put": {
        "summary": "Create/Edit Hangouts Chat integration",
        "description": "Set Hangouts Chat integration for a project.",
        "operationId": "create/editHangoutsChatIntegration",
        "parameters": [
          {
            "name": "webhook",
            "in": "query",
            "description": "The Hangouts Chat webhook. For example, https://chat.googleapis.com/v1/spaces....",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_broken_pipelines",
            "in": "query",
            "description": "Send notifications for broken pipelines",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_default_branch",
            "in": "query",
            "description": "DEPRECATED: This parameter has been replaced with branches_to_be_notified",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branches_to_be_notified",
            "in": "query",
            "description": "Branches to send notifications for. Valid options are “all”, “default”, “protected”, and “default_and_protected”. The default value is “default”",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_events",
            "in": "query",
            "description": "Enable notifications for issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_issues_events",
            "in": "query",
            "description": "Enable notifications for confidential issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_events",
            "in": "query",
            "description": "Enable notifications for note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_note_events",
            "in": "query",
            "description": "Enable notifications for confidential note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_events",
            "in": "query",
            "description": "Enable notifications for pipeline events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wiki_page_events",
            "in": "query",
            "description": "Enable notifications for wiki page events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/hangouts-chat": {
      "delete": {
        "summary": "Disable Hangouts Chat integration",
        "description": "Disable the Hangouts Chat integration for a project. Integration settings are preserved.",
        "operationId": "disableHangoutsChatIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/hangouts-chat": {
      "get": {
        "summary": "Get Hangouts Chat integration settings",
        "description": "Get Hangouts Chat integration settings for a project.",
        "operationId": "getHangoutsChatIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/irker": {
      "put": {
        "summary": "Create/Edit Irker (IRC gateway) integration",
        "description": "Set Irker (IRC gateway) integration for a project.",
        "operationId": "create/editIrker(ircGateway)Integration",
        "parameters": [
          {
            "name": "recipients",
            "in": "query",
            "description": "Recipients/channels separated by whitespaces",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "default_irc_uri",
            "in": "query",
            "description": "irc://irc.network.net:6697/",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "server_host",
            "in": "query",
            "description": "localhost",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "server_port",
            "in": "query",
            "description": "6659",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "colorize_messages",
            "in": "query",
            "description": "Colorize messages",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/irker": {
      "delete": {
        "summary": "Disable Irker (IRC gateway) integration",
        "description": "Disable the Irker (IRC gateway) integration for a project. Integration settings are preserved.",
        "operationId": "disableIrker(ircGateway)Integration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/irker": {
      "get": {
        "summary": "Get Irker (IRC gateway) integration settings",
        "description": "Get Irker (IRC gateway) integration settings for a project.",
        "operationId": "getIrker(ircGateway)IntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jira": {
      "get": {
        "summary": "Get Jira integration settings",
        "description": "Get Jira integration settings for a project.",
        "operationId": "getJiraIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jira": {
      "put": {
        "summary": "Create/Edit Jira integration",
        "description": "Set Jira integration for a project.",
        "operationId": "create/editJiraIntegration",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "description": "The URL to the Jira project which is being linked to this GitLab project. For example, https://jira.example.com.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api_url",
            "in": "query",
            "description": "The base URL to the Jira instance API. Web URL value is used if not set. For example, https://jira-api.example.com.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "The username of the user created to be used with GitLab/Jira.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of the user created to be used with GitLab/Jira.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Activates or deactivates the integration. Defaults to false (deactivated).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jira_issue_transition_automatic",
            "in": "query",
            "description": "Enable automatic issue transitions. Takes precedence over jira_issue_transition_id if enabled. Defaults to false",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jira_issue_transition_id",
            "in": "query",
            "description": "The ID of one or more transitions for custom issue transitions. Ignored if jira_issue_transition_automatic is enabled. Defaults to a blank string, which disables custom transitions.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit_events",
            "in": "query",
            "description": "Enable notifications for commit events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment_on_event_enabled",
            "in": "query",
            "description": "Enable comments inside Jira issues on each GitLab event (commit / merge request)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jira": {
      "delete": {
        "summary": "Disable Jira integration",
        "description": "Disable the Jira integration for a project. Integration settings are preserved.",
        "operationId": "disableJiraIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/slack-slash-commands": {
      "get": {
        "summary": "Get Slack Slash Command integration settings",
        "description": "Get Slack Slash Command integration settings for a project.",
        "operationId": "getSlackSlashCommandIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "push_events": {
                      "type": "boolean"
                    },
                    "issues_events": {
                      "type": "boolean"
                    },
                    "confidential_issues_events": {
                      "type": "boolean"
                    },
                    "merge_requests_events": {
                      "type": "boolean"
                    },
                    "tag_push_events": {
                      "type": "boolean"
                    },
                    "note_events": {
                      "type": "boolean"
                    },
                    "job_events": {
                      "type": "boolean"
                    },
                    "pipeline_events": {
                      "type": "boolean"
                    },
                    "comment_on_event_enabled": {
                      "type": "boolean"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/slack-slash-commands": {
      "put": {
        "summary": "Create/Edit Slack Slash Commands integration",
        "description": "Set Slack Slash Command for a project.",
        "operationId": "create/editSlackSlashCommandsIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The Slack token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/slack-slash-commands": {
      "delete": {
        "summary": "Disable Slack Slash Command integration",
        "description": "Disable the Slack Slash Command integration for a project. Integration settings are preserved.",
        "operationId": "disableSlackSlashCommandIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mattermost-slash-commands": {
      "get": {
        "summary": "Get Mattermost Slash Command integration settings",
        "description": "Get Mattermost Slash Command integration settings for a project.",
        "operationId": "getMattermostSlashCommandIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mattermost-slash-commands": {
      "put": {
        "summary": "Create/Edit Mattermost Slash Command integration",
        "description": "Set Mattermost Slash Command for a project.",
        "operationId": "create/editMattermostSlashCommandIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The Mattermost token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "The username to use to post the message",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mattermost-slash-commands": {
      "delete": {
        "summary": "Disable Mattermost Slash Command integration",
        "description": "Disable the Mattermost Slash Command integration for a project. Integration settings are preserved.",
        "operationId": "disableMattermostSlashCommandIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/packagist": {
      "put": {
        "summary": "Create/Edit Packagist integration",
        "description": "Set Packagist integration for a project.",
        "operationId": "create/editPackagistIntegration",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The username of a Packagist account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "API token to the Packagist server",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "server",
            "in": "query",
            "description": "URL of the Packagist server. Leave blank for default: https://packagist.org",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/packagist": {
      "delete": {
        "summary": "Disable Packagist integration",
        "description": "Disable the Packagist integration for a project. Integration settings are preserved.",
        "operationId": "disablePackagistIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/packagist": {
      "get": {
        "summary": "Get Packagist integration settings",
        "description": "Get Packagist integration settings for a project.",
        "operationId": "getPackagistIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pipelines-email": {
      "put": {
        "summary": "Create/Edit Pipeline-Emails integration",
        "description": "Set Pipeline-Emails integration for a project.",
        "operationId": "create/editPipeline-emailsIntegration",
        "parameters": [
          {
            "name": "recipients",
            "in": "query",
            "description": "Comma-separated list of recipient email addresses",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "add_pusher",
            "in": "query",
            "description": "Add pusher to recipients list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_broken_pipelines",
            "in": "query",
            "description": "Notify only broken pipelines",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branches_to_be_notified",
            "in": "query",
            "description": "Branches to send notifications for. Valid options are “all”, “default”, “protected”, and “default_and_protected. The default value is “default”",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_default_branch",
            "in": "query",
            "description": "Send notifications only for the default branch (introduced in GitLab 12.0)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_events",
            "in": "query",
            "description": "Enable notifications for pipeline events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pipelines-email": {
      "delete": {
        "summary": "Disable Pipeline-Emails integration",
        "description": "Disable the Pipeline-Emails integration for a project. Integration settings are preserved.",
        "operationId": "disablePipeline-emailsIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pipelines-email": {
      "get": {
        "summary": "Get Pipeline-Emails integration settings",
        "description": "Get Pipeline-Emails integration settings for a project.",
        "operationId": "getPipeline-emailsIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pivotaltracker": {
      "put": {
        "summary": "Create/Edit Pivotal Tracker integration",
        "description": "Set Pivotal Tracker integration for a project.",
        "operationId": "create/editPivotalTrackerIntegration",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The Pivotal Tracker token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "restrict_to_branch",
            "in": "query",
            "description": "Comma-separated list of branches to automatically inspect. Leave blank to include all branches.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pivotaltracker": {
      "delete": {
        "summary": "Disable Pivotal Tracker integration",
        "description": "Disable the Pivotal Tracker integration for a project. Integration settings are preserved.",
        "operationId": "disablePivotalTrackerIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pivotaltracker": {
      "get": {
        "summary": "Get Pivotal Tracker integration settings",
        "description": "Get Pivotal Tracker integration settings for a project.",
        "operationId": "getPivotalTrackerIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/prometheus": {
      "put": {
        "summary": "Create/Edit Prometheus integration",
        "description": "Set Prometheus integration for a project.",
        "operationId": "create/editPrometheusIntegration",
        "parameters": [
          {
            "name": "api_url",
            "in": "query",
            "description": "Prometheus API Base URL. For example, http://prometheus.example.com/.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "google_iap_audience_client_id",
            "in": "query",
            "description": "Client ID of the IAP secured resource (looks like IAP_CLIENT_ID.apps.googleusercontent.com)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "google_iap_service_account_json",
            "in": "query",
            "description": "credentials.json file for your service account, like { “type”: “service_account”, “project_id”: … }",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/prometheus": {
      "delete": {
        "summary": "Disable Prometheus integration",
        "description": "Disable the Prometheus integration for a project. Integration settings are preserved.",
        "operationId": "disablePrometheusIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/prometheus": {
      "get": {
        "summary": "Get Prometheus integration settings",
        "description": "Get Prometheus integration settings for a project.",
        "operationId": "getPrometheusIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pushover": {
      "put": {
        "summary": "Create/Edit Pushover integration",
        "description": "Set Pushover integration for a project.",
        "operationId": "create/editPushoverIntegration",
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "description": "Your application key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_key",
            "in": "query",
            "description": "Your user key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "The priority",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "device",
            "in": "query",
            "description": "Leave blank for all active devices",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sound",
            "in": "query",
            "description": "The sound of the notification",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pushover": {
      "delete": {
        "summary": "Disable Pushover integration",
        "description": "Disable the Pushover integration for a project. Integration settings are preserved.",
        "operationId": "disablePushoverIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/pushover": {
      "get": {
        "summary": "Get Pushover integration settings",
        "description": "Get Pushover integration settings for a project.",
        "operationId": "getPushoverIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/redmine": {
      "put": {
        "summary": "Create/Edit Redmine integration",
        "description": "Set Redmine integration for a project.",
        "operationId": "create/editRedmineIntegration",
        "parameters": [
          {
            "name": "new_issue_url",
            "in": "query",
            "description": "New Issue URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_url",
            "in": "query",
            "description": "Project URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_url",
            "in": "query",
            "description": "Issue URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/redmine": {
      "delete": {
        "summary": "Disable Redmine integration",
        "description": "Disable the Redmine integration for a project. Integration settings are preserved.",
        "operationId": "disableRedmineIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/redmine": {
      "get": {
        "summary": "Get Redmine integration settings",
        "description": "Get Redmine integration settings for a project.",
        "operationId": "getRedmineIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/slack": {
      "put": {
        "summary": "Create/Edit Slack integration",
        "description": "Set Slack integration for a project.",
        "operationId": "create/editSlackIntegration",
        "parameters": [
          {
            "name": "webhook",
            "in": "query",
            "description": "https://hooks.slack.com/services/...",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "Default channel to use if others are not configured",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_broken_pipelines",
            "in": "query",
            "description": "Send notifications for broken pipelines",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_default_branch",
            "in": "query",
            "description": "DEPRECATED: This parameter has been replaced with branches_to_be_notified",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branches_to_be_notified",
            "in": "query",
            "description": "Branches to send notifications for. Valid options are “all”, “default”, “protected”, and “default_and_protected”. The default value is “default”",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit_events",
            "in": "query",
            "description": "Enable notifications for commit events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_issue_channel",
            "in": "query",
            "description": "The name of the channel to receive confidential issues events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_issues_events",
            "in": "query",
            "description": "Enable notifications for confidential issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_note_channel",
            "in": "query",
            "description": "The name of the channel to receive confidential note events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_note_events",
            "in": "query",
            "description": "Enable notifications for confidential note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_channel",
            "in": "query",
            "description": "The name of the channel to receive deployment events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deployment_events",
            "in": "query",
            "description": "Enable notifications for deployment events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_channel",
            "in": "query",
            "description": "The name of the channel to receive issues events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_events",
            "in": "query",
            "description": "Enable notifications for issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "job_events",
            "in": "query",
            "description": "Enable notifications for job events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_request_channel",
            "in": "query",
            "description": "The name of the channel to receive merge request events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_channel",
            "in": "query",
            "description": "The name of the channel to receive note events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_events",
            "in": "query",
            "description": "Enable notifications for note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_channel",
            "in": "query",
            "description": "The name of the channel to receive pipeline events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_events",
            "in": "query",
            "description": "Enable notifications for pipeline events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_channel",
            "in": "query",
            "description": "The name of the channel to receive push events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_channel",
            "in": "query",
            "description": "The name of the channel to receive tag push events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wiki_page_channel",
            "in": "query",
            "description": "The name of the channel to receive wiki page events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wiki_page_events",
            "in": "query",
            "description": "Enable notifications for wiki page events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/slack": {
      "delete": {
        "summary": "Disable Slack integration",
        "description": "Disable the Slack integration for a project. Integration settings are preserved.",
        "operationId": "disableSlackIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/slack": {
      "get": {
        "summary": "Get Slack integration settings",
        "description": "Get Slack integration settings for a project.",
        "operationId": "getSlackIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/microsoft-teams": {
      "put": {
        "summary": "Create/Edit Microsoft Teams integration",
        "description": "Set Microsoft Teams integration for a project.",
        "operationId": "create/editMicrosoftTeamsIntegration",
        "parameters": [
          {
            "name": "webhook",
            "in": "query",
            "description": "The Microsoft Teams webhook. For example, https://outlook.office.com/webhook/...",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_broken_pipelines",
            "in": "query",
            "description": "Send notifications for broken pipelines",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_default_branch",
            "in": "query",
            "description": "DEPRECATED: This parameter has been replaced with branches_to_be_notified",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branches_to_be_notified",
            "in": "query",
            "description": "Branches to send notifications for. Valid options are “all”, “default”, “protected”, and “default_and_protected”. The default value is “default”",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_events",
            "in": "query",
            "description": "Enable notifications for issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_issues_events",
            "in": "query",
            "description": "Enable notifications for confidential issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_events",
            "in": "query",
            "description": "Enable notifications for note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_note_events",
            "in": "query",
            "description": "Enable notifications for confidential note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_events",
            "in": "query",
            "description": "Enable notifications for pipeline events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wiki_page_events",
            "in": "query",
            "description": "Enable notifications for wiki page events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/microsoft-teams": {
      "delete": {
        "summary": "Disable Microsoft Teams integration",
        "description": "Disable the Microsoft Teams integration for a project. Integration settings are preserved.",
        "operationId": "disableMicrosoftTeamsIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/microsoft-teams": {
      "get": {
        "summary": "Get Microsoft Teams integration settings",
        "description": "Get Microsoft Teams integration settings for a project.",
        "operationId": "getMicrosoftTeamsIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mattermost": {
      "put": {
        "summary": "Create/Edit Mattermost notifications integration",
        "description": "Set Mattermost notifications integration for a project.",
        "operationId": "create/editMattermostNotificationsIntegration",
        "parameters": [
          {
            "name": "webhook",
            "in": "query",
            "description": "The Mattermost webhook. For example, http://mattermost_host/hooks/...",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "Default channel to use if others are not configured",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_broken_pipelines",
            "in": "query",
            "description": "Send notifications for broken pipelines",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notify_only_default_branch",
            "in": "query",
            "description": "DEPRECATED: This parameter has been replaced with branches_to_be_notified",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branches_to_be_notified",
            "in": "query",
            "description": "Branches to send notifications for. Valid options are “all”, “default”, “protected”, and “default_and_protected”. The default value is “default”",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issues_events",
            "in": "query",
            "description": "Enable notifications for issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_issues_events",
            "in": "query",
            "description": "Enable notifications for confidential issue events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_events",
            "in": "query",
            "description": "Enable notifications for note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_note_events",
            "in": "query",
            "description": "Enable notifications for confidential note events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_events",
            "in": "query",
            "description": "Enable notifications for pipeline events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wiki_page_events",
            "in": "query",
            "description": "Enable notifications for wiki page events",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_channel",
            "in": "query",
            "description": "The name of the channel to receive push events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issue_channel",
            "in": "query",
            "description": "The name of the channel to receive issues events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_issue_channel",
            "in": "query",
            "description": "The name of the channel to receive confidential issues events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_request_channel",
            "in": "query",
            "description": "The name of the channel to receive merge request events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note_channel",
            "in": "query",
            "description": "The name of the channel to receive note events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential_note_channel",
            "in": "query",
            "description": "The name of the channel to receive confidential note events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_channel",
            "in": "query",
            "description": "The name of the channel to receive tag push events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline_channel",
            "in": "query",
            "description": "The name of the channel to receive pipeline events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wiki_page_channel",
            "in": "query",
            "description": "The name of the channel to receive wiki page events notifications",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mattermost": {
      "delete": {
        "summary": "Disable Mattermost notifications integration",
        "description": "Disable the Mattermost notifications integration for a project. Integration settings are preserved.",
        "operationId": "disableMattermostNotificationsIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mattermost": {
      "get": {
        "summary": "Get Mattermost notifications integration settings",
        "description": "Get Mattermost notifications integration settings for a project.",
        "operationId": "getMattermostNotificationsIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/teamcity": {
      "put": {
        "summary": "Create/Edit JetBrains TeamCity CI integration",
        "description": "Set JetBrains TeamCity CI integration for a project.",
        "operationId": "create/editJetbrainsTeamcityCiIntegration",
        "parameters": [
          {
            "name": "teamcity_url",
            "in": "query",
            "description": "TeamCity root URL. For example, https://teamcity.example.com",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enable_ssl_verification",
            "in": "query",
            "description": "Enable SSL verification. Defaults to true (enabled).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "build_type",
            "in": "query",
            "description": "Build configuration ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "A user with permissions to trigger a manual build",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password of the user",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/teamcity": {
      "delete": {
        "summary": "Disable JetBrains TeamCity CI integration",
        "description": "Disable the JetBrains TeamCity CI integration for a project. Integration settings are preserved.",
        "operationId": "disableJetbrainsTeamcityCiIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/teamcity": {
      "get": {
        "summary": "Get JetBrains TeamCity CI integration settings",
        "description": "Get JetBrains TeamCity CI integration settings for a project.",
        "operationId": "getJetbrainsTeamcityCiIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jenkins": {
      "put": {
        "summary": "Create/Edit Jenkins CI integration",
        "description": "Set Jenkins CI integration for a project.",
        "operationId": "create/editJenkinsCiIntegration",
        "parameters": [
          {
            "name": "jenkins_url",
            "in": "query",
            "description": "Jenkins URL like http://jenkins.example.com.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enable_ssl_verification",
            "in": "query",
            "description": "Enable SSL verification. Defaults to true (enabled).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "description": "The URL-friendly project name. Example: my_project_name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username for authentication with the Jenkins server, if authentication is required by the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password for authentication with the Jenkins server, if authentication is required by the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests_events",
            "in": "query",
            "description": "Enable notifications for merge request events.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag_push_events",
            "in": "query",
            "description": "Enable notifications for tag push events.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jenkins": {
      "delete": {
        "summary": "Disable Jenkins CI integration",
        "description": "Disable the Jenkins CI integration for a project. Integration settings are preserved.",
        "operationId": "disableJenkinsCiIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jenkins": {
      "get": {
        "summary": "Get Jenkins CI integration settings",
        "description": "Get Jenkins CI integration settings for a project.",
        "operationId": "getJenkinsCiIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jenkins-deprecated": {
      "put": {
        "summary": "Create/Edit Jenkins CI (Deprecated) integration",
        "description": "Set Jenkins CI (Deprecated) integration for a project.",
        "operationId": "create/editJenkinsCi(deprecated)Integration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jenkins-deprecated": {
      "delete": {
        "summary": "Disable Jenkins CI (Deprecated) integration",
        "description": "Disable the Jenkins CI (Deprecated) integration for a project. Integration settings are preserved.",
        "operationId": "disableJenkinsCi(deprecated)Integration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/jenkins-deprecated": {
      "get": {
        "summary": "Get Jenkins CI (Deprecated) integration settings",
        "description": "Get Jenkins CI (Deprecated) integration settings for a project.",
        "operationId": "getJenkinsCi(deprecated)IntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mock-ci": {
      "put": {
        "summary": "Create/Edit MockCI integration",
        "description": "Set MockCI integration for a project.",
        "operationId": "create/editMockciIntegration",
        "parameters": [
          {
            "name": "mock_service_url",
            "in": "query",
            "description": "http://localhost:4004",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enable_ssl_verification",
            "in": "query",
            "description": "Enable SSL verification. Defaults to true (enabled).",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mock-ci": {
      "delete": {
        "summary": "Disable MockCI integration",
        "description": "Disable the MockCI integration for a project. Integration settings are preserved.",
        "operationId": "disableMockciIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/mock-ci": {
      "get": {
        "summary": "Get MockCI integration settings",
        "description": "Get MockCI integration settings for a project.",
        "operationId": "getMockciIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/youtrack": {
      "put": {
        "summary": "Create/Edit YouTrack integration",
        "description": "Set YouTrack integration for a project.",
        "operationId": "create/editYoutrackIntegration",
        "parameters": [
          {
            "name": "issues_url",
            "in": "query",
            "description": "Issue URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_url",
            "in": "query",
            "description": "Project URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "push_events",
            "in": "query",
            "description": "Enable notifications for push events",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/youtrack": {
      "delete": {
        "summary": "Disable YouTrack integration",
        "description": "Disable the YouTrack integration for a project. Integration settings are preserved.",
        "operationId": "disableYoutrackIntegration",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/projects/{id}/integrations/youtrack": {
      "get": {
        "summary": "Get YouTrack integration settings",
        "description": "Get YouTrack integration settings for a project.",
        "operationId": "getYoutrackIntegrationSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
]