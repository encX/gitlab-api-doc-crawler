[
  {
    "/groups/{id}/epics": {
      "get": {
        "summary": "List epics for a group",
        "description": "Gets all epics of the requested group and its subgroups.",
        "operationId": "listEpicsForAGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "iid": {
                        "type": "integer"
                      },
                      "group_id": {
                        "type": "integer"
                      },
                      "parent_id": {
                        "type": "integer"
                      },
                      "parent_iid": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "confidential": {
                        "type": "string"
                      },
                      "web_url": {
                        "type": "string"
                      },
                      "reference": {
                        "type": "string"
                      },
                      "references": {
                        "type": "object",
                        "properties": {
                          "short": {
                            "type": "string"
                          },
                          "relative": {
                            "type": "string"
                          },
                          "full": {
                            "type": "string"
                          }
                        }
                      },
                      "author": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "avatar_url": {
                            "type": "string"
                          },
                          "web_url": {
                            "type": "string"
                          }
                        }
                      },
                      "start_date": {
                        "type": "string"
                      },
                      "start_date_is_fixed": {
                        "type": "boolean"
                      },
                      "start_date_fixed": {
                        "type": "string"
                      },
                      "start_date_from_milestones": {
                        "type": "string"
                      },
                      "start_date_from_inherited_source": {
                        "type": "string"
                      },
                      "end_date": {
                        "type": "string"
                      },
                      "due_date": {
                        "type": "string"
                      },
                      "due_date_is_fixed": {
                        "type": "boolean"
                      },
                      "due_date_fixed": {
                        "type": "string"
                      },
                      "due_date_from_milestones": {
                        "type": "string"
                      },
                      "due_date_from_inherited_source": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "closed_at": {
                        "type": "string"
                      },
                      "labels": {
                        "type": "array",
                        "items": {}
                      },
                      "upvotes": {
                        "type": "integer"
                      },
                      "downvotes": {
                        "type": "integer"
                      },
                      "color": {
                        "type": "string"
                      },
                      "_links": {
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string"
                          },
                          "epic_issues": {
                            "type": "string"
                          },
                          "group": {
                            "type": "string"
                          },
                          "parent": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/groups/{id}/epics/{epic_iid}": {
      "get": {
        "summary": "Single epic",
        "description": "Gets a single epic",
        "operationId": "singleEpic",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID or URL-encoded path of the group owned by the authenticated user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "epic_iid",
            "in": "path",
            "description": "The internal ID of the epic.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "iid": {
                      "type": "integer"
                    },
                    "group_id": {
                      "type": "integer"
                    },
                    "parent_id": {
                      "type": "string"
                    },
                    "parent_iid": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "web_url": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "references": {
                      "type": "object",
                      "properties": {
                        "short": {
                          "type": "string"
                        },
                        "relative": {
                          "type": "string"
                        },
                        "full": {
                          "type": "string"
                        }
                      }
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "avatar_url": {
                          "type": "string"
                        },
                        "web_url": {
                          "type": "string"
                        }
                      }
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "start_date_is_fixed": {
                      "type": "boolean"
                    },
                    "start_date_fixed": {
                      "type": "string"
                    },
                    "start_date_from_milestones": {
                      "type": "string"
                    },
                    "start_date_from_inherited_source": {
                      "type": "string"
                    },
                    "end_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "due_date_is_fixed": {
                      "type": "boolean"
                    },
                    "due_date_fixed": {
                      "type": "string"
                    },
                    "due_date_from_milestones": {
                      "type": "string"
                    },
                    "due_date_from_inherited_source": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "closed_at": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "array",
                      "items": {}
                    },
                    "upvotes": {
                      "type": "integer"
                    },
                    "downvotes": {
                      "type": "integer"
                    },
                    "color": {
                      "type": "string"
                    },
                    "subscribed": {
                      "type": "boolean"
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string"
                        },
                        "epic_issues": {
                          "type": "string"
                        },
                        "group": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/groups/{id}/epics": {
      "post": {
        "summary": "New epic",
        "description": "Creates a new epic.",
        "operationId": "newEpic",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID or URL-encoded path of the group owned by the authenticated user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title of the epic",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "The comma-separated list of labels",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of the epic. Limited to 1,048,576 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "The color of the epic. Introduced in GitLab 14.8, behind a feature flag named epic_highlight_color (disabled by default)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential",
            "in": "query",
            "description": "Whether the epic should be confidential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "When the epic was created. Date time string, ISO 8601 formatted, for example 2016-03-11T03:45:40Z . Requires administrator or project/group owner privileges (available in GitLab 13.5 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date_is_fixed",
            "in": "query",
            "description": "Whether start date should be sourced from start_date_fixed or from milestones (in GitLab 11.3 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date_fixed",
            "in": "query",
            "description": "The fixed start date of an epic (in GitLab 11.3 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "due_date_is_fixed",
            "in": "query",
            "description": "Whether due date should be sourced from due_date_fixed or from milestones (in GitLab 11.3 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "due_date_fixed",
            "in": "query",
            "description": "The fixed due date of an epic (in GitLab 11.3 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "description": "The ID of a parent epic (in GitLab 11.11 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "iid": {
                      "type": "integer"
                    },
                    "group_id": {
                      "type": "integer"
                    },
                    "parent_id": {
                      "type": "integer"
                    },
                    "parent_iid": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "confidential": {
                      "type": "string"
                    },
                    "web_url": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "references": {
                      "type": "object",
                      "properties": {
                        "short": {
                          "type": "string"
                        },
                        "relative": {
                          "type": "string"
                        },
                        "full": {
                          "type": "string"
                        }
                      }
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "avatar_url": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "web_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        }
                      }
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "start_date_is_fixed": {
                      "type": "boolean"
                    },
                    "start_date_fixed": {
                      "type": "string"
                    },
                    "start_date_from_milestones": {
                      "type": "string"
                    },
                    "start_date_from_inherited_source": {
                      "type": "string"
                    },
                    "end_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "due_date_is_fixed": {
                      "type": "boolean"
                    },
                    "due_date_fixed": {
                      "type": "string"
                    },
                    "due_date_from_milestones": {
                      "type": "string"
                    },
                    "due_date_from_inherited_source": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "closed_at": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "array",
                      "items": {}
                    },
                    "upvotes": {
                      "type": "integer"
                    },
                    "downvotes": {
                      "type": "integer"
                    },
                    "color": {
                      "type": "string"
                    },
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string"
                        },
                        "epic_issues": {
                          "type": "string"
                        },
                        "group": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/groups/{id}/epics/{epic_iid}": {
      "put": {
        "summary": "Update epic",
        "description": "Updates an epic.",
        "operationId": "updateEpic",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID or URL-encoded path of the group owned by the authenticated user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "epic_iid",
            "in": "path",
            "description": "The internal ID of the epic",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "add_labels",
            "in": "query",
            "description": "Comma-separated label names to add to an issue.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidential",
            "in": "query",
            "description": "Whether the epic should be confidential",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of an epic. Limited to 1,048,576 characters.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "due_date_fixed",
            "in": "query",
            "description": "The fixed due date of an epic (in GitLab 11.3 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "due_date_is_fixed",
            "in": "query",
            "description": "Whether due date should be sourced from due_date_fixed or from milestones (in GitLab 11.3 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Comma-separated label names for an issue. Set to an empty string to unassign all labels.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "description": "The ID of a parent epic. Available in GitLab 14.6 and later",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remove_labels",
            "in": "query",
            "description": "Comma-separated label names to remove from an issue.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date_fixed",
            "in": "query",
            "description": "The fixed start date of an epic (in GitLab 11.3 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date_is_fixed",
            "in": "query",
            "description": "Whether start date should be sourced from start_date_fixed or from milestones (in GitLab 11.3 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state_event",
            "in": "query",
            "description": "State event for an epic. Set close to close the epic and reopen to reopen it (in GitLab 11.4 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title of an epic",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "When the epic was updated. Date time string, ISO 8601 formatted, for example 2016-03-11T03:45:40Z . Requires administrator or project/group owner privileges (available in GitLab 13.5 and later)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "The color of the epic. Introduced in GitLab 14.8, behind a feature flag named epic_highlight_color (disabled by default)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "iid": {
                      "type": "integer"
                    },
                    "group_id": {
                      "type": "integer"
                    },
                    "parent_id": {
                      "type": "integer"
                    },
                    "parent_iid": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "confidential": {
                      "type": "string"
                    },
                    "web_url": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "references": {
                      "type": "object",
                      "properties": {
                        "short": {
                          "type": "string"
                        },
                        "relative": {
                          "type": "string"
                        },
                        "full": {
                          "type": "string"
                        }
                      }
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "avatar_url": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "web_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        }
                      }
                    },
                    "start_date": {
                      "type": "string"
                    },
                    "start_date_is_fixed": {
                      "type": "boolean"
                    },
                    "start_date_fixed": {
                      "type": "string"
                    },
                    "start_date_from_milestones": {
                      "type": "string"
                    },
                    "start_date_from_inherited_source": {
                      "type": "string"
                    },
                    "end_date": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string"
                    },
                    "due_date_is_fixed": {
                      "type": "boolean"
                    },
                    "due_date_fixed": {
                      "type": "string"
                    },
                    "due_date_from_milestones": {
                      "type": "string"
                    },
                    "due_date_from_inherited_source": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "closed_at": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "array",
                      "items": {}
                    },
                    "upvotes": {
                      "type": "integer"
                    },
                    "downvotes": {
                      "type": "integer"
                    },
                    "color": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/groups/{id}/epics/{epic_iid}": {
      "delete": {
        "summary": "Delete epic",
        "description": "Deletes an epic",
        "operationId": "deleteEpic",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID or URL-encoded path of the group owned by the authenticated user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "epic_iid",
            "in": "path",
            "description": "The internal ID of the epic.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/groups/{id}/epics/{epic_iid}/todo": {
      "post": {
        "summary": "Create a to-do item",
        "description": "Manually creates a to-do item for the current user on an epic. If there already exists a to-do item for the user on that epic, status code 304 is returned.",
        "operationId": "createATo-doItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID or URL-encoded path of the group owned by the authenticated user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "epic_iid",
            "in": "path",
            "description": "The internal ID of a group’s epic",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "group": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "full_path": {
                          "type": "string"
                        },
                        "parent_id": {
                          "type": "string"
                        }
                      }
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "state": {
                          "type": "string"
                        },
                        "avatar_url": {
                          "type": "string"
                        },
                        "web_url": {
                          "type": "string"
                        }
                      }
                    },
                    "action_name": {
                      "type": "string"
                    },
                    "target_type": {
                      "type": "string"
                    },
                    "target": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "iid": {
                          "type": "integer"
                        },
                        "group_id": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "author": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "avatar_url": {
                              "type": "string"
                            },
                            "web_url": {
                              "type": "string"
                            }
                          }
                        },
                        "web_url": {
                          "type": "string"
                        },
                        "reference": {
                          "type": "string"
                        },
                        "references": {
                          "type": "object",
                          "properties": {
                            "short": {
                              "type": "string"
                            },
                            "relative": {
                              "type": "string"
                            },
                            "full": {
                              "type": "string"
                            }
                          }
                        },
                        "start_date": {
                          "type": "string"
                        },
                        "end_date": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "closed_at": {
                          "type": "string"
                        }
                      }
                    },
                    "target_url": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
]