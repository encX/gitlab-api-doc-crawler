[
  {
    "/users": {
      "get": {
        "summary": "For normal users",
        "description": "You can also search for users by name, username or public email by using ?search=. For example. /users?search=John.",
        "operationId": "forNormalUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "username": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "avatar_url": {
                        "type": "string"
                      },
                      "web_url": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users": {
      "get": {
        "summary": "For admins",
        "description": "Users on GitLab Premium or higher also see the group_saml provider option and provisioned_by_group_id parameter:",
        "operationId": "forAdmins",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Return users ordered by id, name, username, created_at, or updated_at fields. Default is id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Return users sorted in asc or desc order. Default is desc",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "two_factor",
            "in": "query",
            "description": "Filter users by Two-factor authentication. Filter values are enabled or disabled. By default it returns all users",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "without_projects",
            "in": "query",
            "description": "Filter users without projects. Default is false, which means that all users are returned, with and without projects.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "admins",
            "in": "query",
            "description": "Return only administrators. Default is false",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "saml_provider_id",
            "in": "query",
            "description": "Return only users created by the specified SAML provider ID. If not included, it returns all users.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "username": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "avatar_url": {
                        "type": "string"
                      },
                      "web_url": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "is_admin": {
                        "type": "boolean"
                      },
                      "bio": {
                        "type": "string"
                      },
                      "location": {
                        "type": "string"
                      },
                      "skype": {
                        "type": "string"
                      },
                      "linkedin": {
                        "type": "string"
                      },
                      "twitter": {
                        "type": "string"
                      },
                      "website_url": {
                        "type": "string"
                      },
                      "organization": {
                        "type": "string"
                      },
                      "job_title": {
                        "type": "string"
                      },
                      "last_sign_in_at": {
                        "type": "string"
                      },
                      "confirmed_at": {
                        "type": "string"
                      },
                      "theme_id": {
                        "type": "integer"
                      },
                      "last_activity_on": {
                        "type": "string"
                      },
                      "color_scheme_id": {
                        "type": "integer"
                      },
                      "projects_limit": {
                        "type": "integer"
                      },
                      "current_sign_in_at": {
                        "type": "string"
                      },
                      "note": {
                        "type": "string"
                      },
                      "identities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "provider": {
                              "type": "string"
                            },
                            "extern_uid": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "can_create_group": {
                        "type": "boolean"
                      },
                      "can_create_project": {
                        "type": "boolean"
                      },
                      "two_factor_enabled": {
                        "type": "boolean"
                      },
                      "external": {
                        "type": "boolean"
                      },
                      "private_profile": {
                        "type": "boolean"
                      },
                      "current_sign_in_ip": {
                        "type": "string"
                      },
                      "last_sign_in_ip": {
                        "type": "string"
                      },
                      "namespace_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}": {
      "get": {
        "summary": "For user",
        "description": "",
        "operationId": "forUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of a user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "web_url": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string"
                    },
                    "bot": {
                      "type": "boolean"
                    },
                    "location": {
                      "type": "string"
                    },
                    "public_email": {
                      "type": "string"
                    },
                    "skype": {
                      "type": "string"
                    },
                    "linkedin": {
                      "type": "string"
                    },
                    "twitter": {
                      "type": "string"
                    },
                    "website_url": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "job_title": {
                      "type": "string"
                    },
                    "followers": {
                      "type": "integer"
                    },
                    "following": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}": {
      "get": {
        "summary": "For admin",
        "description": "Users on GitLab.com Premium or higher also see the group_saml option and provisioned_by_group_id parameter:",
        "operationId": "forAdmin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of a user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "shared_runners_minutes_limit": {
                      "type": "integer"
                    },
                    "extra_shared_runners_minutes_limit": {
                      "type": "integer"
                    },
                    "identities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string"
                          },
                          "extern_uid": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "provisioned_by_group_id": {
                      "type": "integer"
                    },
                    "is_auditor": {
                      "type": "boolean"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "web_url": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "is_admin": {
                      "type": "boolean"
                    },
                    "bio": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "public_email": {
                      "type": "string"
                    },
                    "skype": {
                      "type": "string"
                    },
                    "linkedin": {
                      "type": "string"
                    },
                    "twitter": {
                      "type": "string"
                    },
                    "website_url": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "job_title": {
                      "type": "string"
                    },
                    "last_sign_in_at": {
                      "type": "string"
                    },
                    "confirmed_at": {
                      "type": "string"
                    },
                    "theme_id": {
                      "type": "integer"
                    },
                    "last_activity_on": {
                      "type": "string"
                    },
                    "color_scheme_id": {
                      "type": "integer"
                    },
                    "projects_limit": {
                      "type": "integer"
                    },
                    "current_sign_in_at": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "can_create_group": {
                      "type": "boolean"
                    },
                    "can_create_project": {
                      "type": "boolean"
                    },
                    "two_factor_enabled": {
                      "type": "boolean"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "private_profile": {
                      "type": "boolean"
                    },
                    "commit_email": {
                      "type": "string"
                    },
                    "current_sign_in_ip": {
                      "type": "string"
                    },
                    "last_sign_in_ip": {
                      "type": "string"
                    },
                    "plan": {
                      "type": "string"
                    },
                    "trial": {
                      "type": "boolean"
                    },
                    "sign_in_count": {
                      "type": "integer"
                    },
                    "namespace_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users": {
      "post": {
        "summary": "User creation",
        "description": "Creates a new user. Note only administrators can create new users. Either password, reset_password, or force_random_password must be specified. If reset_password and force_random_password are both false, then password is required.",
        "operationId": "userCreation",
        "parameters": [
          {
            "name": "admin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avatar",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bio",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "can_create_group",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color_scheme_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extern_uid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extra_shared_runners_minutes_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force_random_password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id_for_saml",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "private_profile",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projects_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reset_password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shared_runners_minutes_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip_confirmation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skype",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "theme_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "twitter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_diffs_file_by_file",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website_url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}": {
      "put": {
        "summary": "User modification",
        "description": "Modifies an existing user. Only administrators can change attributes of a user.",
        "operationId": "userModification",
        "parameters": [
          {
            "name": "admin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avatar",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bio",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "can_create_group",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color_scheme_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extern_uid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extra_shared_runners_minutes_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "group_id_for_saml",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "note",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "private_profile",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projects_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shared_runners_minutes_limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip_reconfirmation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skype",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "theme_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "twitter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_diffs_file_by_file",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website_url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/identities/:provider": {
      "delete": {
        "summary": "Delete authentication identity from user",
        "description": "Deletes a user’s authentication identity using the provider name associated with that identity. Available only for administrators.",
        "operationId": "deleteAuthenticationIdentityFromUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of a user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "provider",
            "in": "path",
            "description": "External provider name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}": {
      "delete": {
        "summary": "User deletion",
        "description": "Deletes a user. Available only for administrators. This returns a 204 No Content status code if the operation was successfully, 404 if the resource was not found or 409 if the user cannot be soft deleted.",
        "operationId": "userDeletion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of a user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "hard_delete",
            "in": "query",
            "description": "If true, contributions that would usually be moved to Ghost User are deleted instead, as well as groups owned solely by this user.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user": {
      "get": {
        "summary": "List current user (for normal users)",
        "description": "Gets currently authenticated user.",
        "operationId": "listCurrentUser(forNormalUsers)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "web_url": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "public_email": {
                      "type": "string"
                    },
                    "skype": {
                      "type": "string"
                    },
                    "linkedin": {
                      "type": "string"
                    },
                    "twitter": {
                      "type": "string"
                    },
                    "website_url": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "last_sign_in_at": {
                      "type": "string"
                    },
                    "confirmed_at": {
                      "type": "string"
                    },
                    "theme_id": {
                      "type": "integer"
                    },
                    "last_activity_on": {
                      "type": "string"
                    },
                    "color_scheme_id": {
                      "type": "integer"
                    },
                    "projects_limit": {
                      "type": "integer"
                    },
                    "current_sign_in_at": {
                      "type": "string"
                    },
                    "identities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string"
                          },
                          "extern_uid": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "can_create_group": {
                      "type": "boolean"
                    },
                    "can_create_project": {
                      "type": "boolean"
                    },
                    "two_factor_enabled": {
                      "type": "boolean"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "private_profile": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user": {
      "get": {
        "summary": "List current user (for admins)",
        "description": "",
        "operationId": "listCurrentUser(forAdmins)",
        "parameters": [
          {
            "name": "sudo",
            "in": "query",
            "description": "the ID of a user to make the call in their place",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "web_url": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "is_admin": {
                      "type": "boolean"
                    },
                    "bio": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "public_email": {
                      "type": "string"
                    },
                    "skype": {
                      "type": "string"
                    },
                    "linkedin": {
                      "type": "string"
                    },
                    "twitter": {
                      "type": "string"
                    },
                    "website_url": {
                      "type": "string"
                    },
                    "organization": {
                      "type": "string"
                    },
                    "job_title": {
                      "type": "string"
                    },
                    "last_sign_in_at": {
                      "type": "string"
                    },
                    "confirmed_at": {
                      "type": "string"
                    },
                    "theme_id": {
                      "type": "integer"
                    },
                    "last_activity_on": {
                      "type": "string"
                    },
                    "color_scheme_id": {
                      "type": "integer"
                    },
                    "projects_limit": {
                      "type": "integer"
                    },
                    "current_sign_in_at": {
                      "type": "string"
                    },
                    "identities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string"
                          },
                          "extern_uid": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "can_create_group": {
                      "type": "boolean"
                    },
                    "can_create_project": {
                      "type": "boolean"
                    },
                    "two_factor_enabled": {
                      "type": "boolean"
                    },
                    "external": {
                      "type": "boolean"
                    },
                    "private_profile": {
                      "type": "boolean"
                    },
                    "commit_email": {
                      "type": "string"
                    },
                    "current_sign_in_ip": {
                      "type": "string"
                    },
                    "last_sign_in_ip": {
                      "type": "string"
                    },
                    "namespace_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/status": {
      "get": {
        "summary": "User status",
        "description": "Get the status of the currently signed in user.",
        "operationId": "userStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emoji": {
                      "type": "string"
                    },
                    "availability": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "message_html": {
                      "type": "string"
                    },
                    "clear_status_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id_or_username}/status": {
      "get": {
        "summary": "Get the status of a user",
        "description": "Get the status of a user. This endpoint can be accessed without authentication.",
        "operationId": "getTheStatusOfAUser",
        "parameters": [
          {
            "name": "id_or_username",
            "in": "path",
            "description": "The ID or username of the user to get a status of",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emoji": {
                      "type": "string"
                    },
                    "availability": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "message_html": {
                      "type": "string"
                    },
                    "clear_status_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/status": {
      "put": {
        "summary": "Set user status",
        "description": "Set the status of the current user.",
        "operationId": "setUserStatus",
        "parameters": [
          {
            "name": "emoji",
            "in": "query",
            "description": "The name of the emoji to use as status. If omitted speech_balloon is used. Emoji name can be one of the specified names in the Gemojione index.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "in": "query",
            "description": "The message to set as a status. It can also contain emoji codes.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clear_status_after",
            "in": "query",
            "description": "Automatically clean up the status after a given time interval, allowed values: 30_minutes, 3_hours, 8_hours, 1_day, 3_days, 7_days, 30_days",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emoji": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "message_html": {
                      "type": "string"
                    },
                    "clear_status_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/preferences": {
      "get": {
        "summary": "Get user preferences",
        "description": "Get a list of currently authenticated user’s preferences.",
        "operationId": "getUserPreferences",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "view_diffs_file_by_file": {
                      "type": "boolean"
                    },
                    "show_whitespace_in_diffs": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/preferences": {
      "put": {
        "summary": "User preference modification",
        "description": "Update the current user’s preferences.",
        "operationId": "userPreferenceModification",
        "parameters": [
          {
            "name": "view_diffs_file_by_file",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "show_whitespace_in_diffs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "view_diffs_file_by_file": {
                      "type": "boolean"
                    },
                    "show_whitespace_in_diffs": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/follow": {
      "post": {
        "summary": "Follow and unfollow users",
        "description": "Follow a user.",
        "operationId": "followAndUnfollowUsers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to follow",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "username": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "web_url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/followers": {
      "get": {
        "summary": "Followers and following",
        "description": "Get the followers of a user.",
        "operationId": "followersAndFollowing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to follow",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "avatar_url": {
                        "type": "string"
                      },
                      "web_url": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user_counts": {
      "get": {
        "summary": "User counts",
        "description": "Get the counts (same as in top right menu) of the currently signed in user.",
        "operationId": "userCounts",
        "parameters": [
          {
            "name": "assigned_issues",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assigned_merge_requests",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_requests",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "review_requested_merge_requests",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "todos",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "merge_requests": {
                      "type": "integer"
                    },
                    "assigned_issues": {
                      "type": "integer"
                    },
                    "assigned_merge_requests": {
                      "type": "integer"
                    },
                    "review_requested_merge_requests": {
                      "type": "integer"
                    },
                    "todos": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/keys": {
      "get": {
        "summary": "List SSH keys",
        "description": "Get a list of currently authenticated user’s SSH keys.",
        "operationId": "listSshKeys",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id_or_username}/keys": {
      "get": {
        "summary": "List SSH keys for user",
        "description": "Get a list of a specified user’s SSH keys.",
        "operationId": "listSshKeysForUser",
        "parameters": [
          {
            "name": "id_or_username",
            "in": "path",
            "description": "The ID or username of the user to get the SSH keys for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/keys/{key_id}": {
      "get": {
        "summary": "Single SSH key",
        "description": "Get a single key.",
        "operationId": "singleSshKey",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "description": "The ID of an SSH key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/keys/:key_id": {
      "get": {
        "summary": "Single SSH key for given user",
        "description": "Get a single key for a given user.",
        "operationId": "singleSshKeyForGivenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "description": "SSH key ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/keys": {
      "post": {
        "summary": "Add SSH key",
        "description": "Creates a new key owned by the currently authenticated user.",
        "operationId": "addSshKey",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "new SSH key’s title",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "new SSH key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expires_at",
            "in": "query",
            "description": "The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "fingerprint": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "key": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/keys": {
      "post": {
        "summary": "Add SSH key for user",
        "description": "Create new key owned by specified user. Available only for administrator.",
        "operationId": "addSshKeyForUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "new SSH key’s title",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "new SSH key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expires_at",
            "in": "query",
            "description": "The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/keys/{key_id}": {
      "delete": {
        "summary": "Delete SSH key for current user",
        "description": "Deletes key owned by currently authenticated user. This returns a 204 No Content status code if the operation was successfully or 404 if the resource was not found.",
        "operationId": "deleteSshKeyForCurrentUser",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "description": "SSH key ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/keys/:key_id": {
      "delete": {
        "summary": "Delete SSH key for given user",
        "description": "Deletes key owned by a specified user. Available only for administrator.",
        "operationId": "deleteSshKeyForGivenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "description": "SSH key ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/gpg_keys": {
      "get": {
        "summary": "List all GPG keys",
        "description": "Get a list of currently authenticated user’s GPG keys.",
        "operationId": "listAllGpgKeys",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "key": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/gpg_keys/{key_id}": {
      "get": {
        "summary": "Get a specific GPG key",
        "description": "Get a specific GPG key of currently authenticated user.",
        "operationId": "getASpecificGpgKey",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "description": "The ID of the GPG key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "key": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/gpg_keys": {
      "post": {
        "summary": "Add a GPG key",
        "description": "Creates a new GPG key owned by the currently authenticated user.",
        "operationId": "addAGpgKey",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "The new GPG key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "key": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/gpg_keys/{key_id}": {
      "delete": {
        "summary": "Delete a GPG key",
        "description": "Delete a GPG key owned by currently authenticated user.",
        "operationId": "deleteAGpgKey",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "description": "The ID of the GPG key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/gpg_keys": {
      "get": {
        "summary": "List all GPG keys for given user",
        "description": "Get a list of a specified user’s GPG keys. This endpoint can be accessed without authentication.",
        "operationId": "listAllGpgKeysForGivenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "key": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/gpg_keys/:key_id": {
      "get": {
        "summary": "Get a specific GPG key for a given user",
        "description": "Get a specific GPG key for a given user. Introduced in GitLab 13.5, this endpoint can be accessed without administrator authentication.",
        "operationId": "getASpecificGpgKeyForAGivenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "description": "The ID of the GPG key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "key": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/gpg_keys": {
      "post": {
        "summary": "Add a GPG key for a given user",
        "description": "Create new GPG key owned by the specified user. Available only for administrator.",
        "operationId": "addAGpgKeyForAGivenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "key_id",
            "in": "query",
            "description": "The ID of the GPG key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "key": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/gpg_keys/:key_id": {
      "delete": {
        "summary": "Delete a GPG key for a given user",
        "description": "Delete a GPG key owned by a specified user. Available only for administrator.",
        "operationId": "deleteAGpgKeyForAGivenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "description": "The ID of the GPG key",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/emails": {
      "get": {
        "summary": "List emails",
        "description": "Get a list of currently authenticated user’s emails.",
        "operationId": "listEmails",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "email": {
                        "type": "string"
                      },
                      "confirmed_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/emails": {
      "get": {
        "summary": "List emails for user",
        "description": "Get a list of a specified user’s emails. Available only for administrator",
        "operationId": "listEmailsForUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/emails/{email_id}": {
      "get": {
        "summary": "Single email",
        "description": "Get a single email.",
        "operationId": "singleEmail",
        "parameters": [
          {
            "name": "email_id",
            "in": "path",
            "description": "Email ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmed_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/emails": {
      "post": {
        "summary": "Add email",
        "description": "Creates a new email owned by the currently authenticated user.",
        "operationId": "addEmail",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Email address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmed_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/emails": {
      "post": {
        "summary": "Add email for user",
        "description": "Create new email owned by specified user. Available only for administrator",
        "operationId": "addEmailForUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip_confirmation",
            "in": "query",
            "description": "Skip confirmation and assume email is verified - true or false (default)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/emails/{email_id}": {
      "delete": {
        "summary": "Delete email for current user",
        "description": "Deletes email owned by currently authenticated user. This returns a 204 No Content status code if the operation was successfully or 404 if the resource was not found.",
        "operationId": "deleteEmailForCurrentUser",
        "parameters": [
          {
            "name": "email_id",
            "in": "path",
            "description": "Email ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/emails/:email_id": {
      "delete": {
        "summary": "Delete email for given user",
        "description": "Deletes email owned by a specified user. Available only for administrator.",
        "operationId": "deleteEmailForGivenUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "email_id",
            "in": "path",
            "description": "Email ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/block": {
      "post": {
        "summary": "Block user",
        "description": "Blocks the specified user. Available only for administrator.",
        "operationId": "blockUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/unblock": {
      "post": {
        "summary": "Unblock user",
        "description": "Unblocks the specified user. Available only for administrator.",
        "operationId": "unblockUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/deactivate": {
      "post": {
        "summary": "Deactivate user",
        "description": "Deactivates the specified user. Available only for administrator.",
        "operationId": "deactivateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/activate": {
      "post": {
        "summary": "Activate user",
        "description": "Activates the specified user. Available only for administrator.",
        "operationId": "activateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/ban": {
      "post": {
        "summary": "Ban user",
        "description": "Bans the specified user. Available only for administrator.",
        "operationId": "banUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/unban": {
      "post": {
        "summary": "Unban user",
        "description": "Unbans the specified user. Available only for administrator.",
        "operationId": "unbanUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{user_id}/impersonation_tokens": {
      "get": {
        "summary": "Get all impersonation tokens of a user",
        "description": "Requires administrator access.",
        "operationId": "getAllImpersonationTokensOfAUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "filter tokens based on state (all, active, inactive)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "user_id": {
                        "type": "integer"
                      },
                      "scopes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "revoked": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "impersonation": {
                        "type": "boolean"
                      },
                      "expires_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/approve": {
      "post": {
        "summary": "Approve user",
        "description": "Approves the specified user. Available only for administrators.",
        "operationId": "approveUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/reject": {
      "post": {
        "summary": "Reject user",
        "description": "Rejects specified user that is pending approval. Available only for administrators.",
        "operationId": "rejectUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{user_id}/impersonation_tokens/:impersonation_token_id": {
      "get": {
        "summary": "Get an impersonation token of a user",
        "description": "It shows a user’s impersonation token.",
        "operationId": "getAnImpersonationTokenOfAUser",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "impersonation_token_id",
            "in": "path",
            "description": "The ID of the impersonation token",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "revoked": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "impersonation": {
                      "type": "boolean"
                    },
                    "expires_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{user_id}/impersonation_tokens": {
      "post": {
        "summary": "Create an impersonation token",
        "description": "Requires administrator access. Token values are returned once. Make sure you save it because you can’t access it again.",
        "operationId": "createAnImpersonationToken",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the impersonation token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expires_at",
            "in": "query",
            "description": "The expiration date of the impersonation token in ISO format (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "The array of scopes of the impersonation token (api, read_user)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "revoked": {
                      "type": "boolean"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "token": {
                      "type": "string"
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "impersonation": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{user_id}/impersonation_tokens/:impersonation_token_id": {
      "delete": {
        "summary": "Revoke an impersonation token",
        "description": "Requires administrator access.",
        "operationId": "revokeAnImpersonationToken",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "impersonation_token_id",
            "in": "path",
            "description": "The ID of the impersonation token",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{user_id}/personal_access_tokens": {
      "post": {
        "summary": "Create a personal access token",
        "description": "Use this API to create a new personal access token. Token values are returned once so, make sure you save it as you can’t access it again. This API can only be used by GitLab administrators.",
        "operationId": "createAPersonalAccessToken",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the personal access token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expires_at",
            "in": "query",
            "description": "The expiration date of the personal access token in ISO format (YYYY-MM-DD)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "The array of scopes of the personal access token (api, read_user, read_api, read_repository, write_repository)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "revoked": {
                      "type": "boolean"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "scopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "expires_at": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/user/activities": {
      "get": {
        "summary": "Get user activities (admin only)",
        "description": "Get the last activity date for all users, sorted from oldest to newest.",
        "operationId": "getUserActivities(adminOnly)",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Date string in the format YEAR-MONTH-DAY. For example, 2016-03-11. Defaults to 6 months ago.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "last_activity_on": {
                        "type": "string"
                      },
                      "last_activity_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "/users/{id}/memberships": {
      "get": {
        "summary": "User memberships (admin only)",
        "description": "Lists all projects and groups a user is a member of. This endpoint is available for administrators only. It returns the source_id, source_name, source_type and access_level of a membership. Source can be of type Namespace (representing a group) or Project. The response represents only direct memberships. Inherited memberships, for example in subgroups, are not included. Access levels are represented by an integer value. For more details, read about the meaning of access level values.",
        "operationId": "userMemberships(adminOnly)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of a specified user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter memberships by type. Can be either Project or Namespace",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "source_id": {
                        "type": "integer"
                      },
                      "source_name": {
                        "type": "string"
                      },
                      "source_type": {
                        "type": "string"
                      },
                      "access_level": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
]