openapi: 3.0.2
info:
  title: 'GitLabKit: REST API / members'
  version: '1.0'
paths:
  '/groups/{id}/members':
    get:
      summary: List all members of a group or project
      description: >-
        Gets a list of group or project members viewable by the authenticated user. Returns only direct members and not
        inherited members through ancestors groups.
      operationId: listAllMembersOfAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: A query string to search for members
          required: false
          schema:
            type: string
        - name: user_ids
          in: query
          description: Filter the results on the given user IDs
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllMembersOfAGroupOrProjectResponse'
      tags:
        - members
    post:
      summary: Add a member to a group or project
      description: Adds a member to a group or project.
      operationId: addAMemberToAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAMemberToAGroupOrProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAMemberToAGroupOrProjectRequest'
      tags:
        - members
  '/groups/{id}/members/all':
    get:
      summary: List all members of a group or project including inherited and invited members
      description: >-
        Gets a list of group or project members viewable by the authenticated user, including inherited members, invited
        users, and permissions through ancestor groups.
      operationId: listAllMembersOfAGroupOrProjectIncludingInheritedAndInvitedMembers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: A query string to search for members
          required: false
          schema:
            type: string
        - name: user_ids
          in: query
          description: Filter the results on the given user IDs
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: 'Filter results by member state, one of awaiting or active'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllMembersOfAGroupOrProjectResponse'
      tags:
        - members
  '/groups/{id}/members/{user_id}':
    get:
      summary: Get a member of a group or project
      description: >-
        Gets a member of a group or project. Returns only direct members and not inherited members through ancestor
        groups.
      operationId: getAMemberOfAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAMemberOfAGroupOrProjectResponse'
      tags:
        - members
    put:
      summary: Edit a member of a group or project
      description: Updates a member of a group or project.
      operationId: editAMemberOfAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAMemberToAGroupOrProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editAMemberOfAGroupOrProjectRequest'
      tags:
        - members
    delete:
      summary: Remove a member from a group or project
      description: Removes a user from a group or project where the user has been explicitly assigned a role.
      operationId: removeAMemberFromAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
        - name: skip_subresources
          in: query
          description: >-
            Whether the deletion of direct memberships of the removed member in subgroups and projects should be
            skipped. Default is false.
          required: false
          schema:
            type: string
        - name: unassign_issuables
          in: query
          description: >-
            Whether the removed member should be unassigned from any issues or merge requests inside a given group or
            project. Default is false.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - members
  '/groups/{id}/members/all/{user_id}':
    get:
      summary: 'Get a member of a group or project, including inherited and invited members'
      description: >-
        Gets a member of a group or project, including members inherited or invited through ancestor groups. See the
        corresponding endpoint to list all inherited members for details.
      operationId: 'getAMemberOfAGroupOrProject,IncludingInheritedAndInvitedMembers'
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAMemberOfAGroupOrProjectResponse'
      tags:
        - members
  '/groups/{id}/billable_members':
    get:
      summary: List all billable members of a group
      description: Gets a list of group members that count as billable. The list includes members in subgroups and projects.
      operationId: listAllBillableMembersOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: 'A query string to search for group members by name, username, or public email.'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: A query string containing parameters that specify the sort attribute and order. See supported values below.
          required: false
          schema:
            type: string
        - name: include_awaiting_members
          in: query
          description: Determines if awaiting members are included.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllBillableMembersOfAGroupResponse'
      tags:
        - members
  '/groups/{id}/billable_members/{user_id}/memberships':
    get:
      summary: List memberships for a billable member of a group
      description: Gets a list of memberships for a billable member of a group.
      operationId: listMembershipsForABillableMemberOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the billable member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMembershipsForABillableMemberOfAGroupResponse'
      tags:
        - members
  '/groups/{id}/billable_members/{user_id}':
    delete:
      summary: Remove a billable member from a group
      description: Removes a billable member from a group and its subgroups and projects.
      operationId: removeABillableMemberFromAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - members
  '/groups/{id}/members/{user_id}/override':
    post:
      summary: Set override flag for a member of a group
      description: >-
        By default, the access level of LDAP group members is set to the value specified by LDAP through Group Sync. You
        can allow access level overrides by calling this endpoint.
      operationId: setOverrideFlagForAMemberOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setOverrideFlagForAMemberOfAGroupResponse'
      tags:
        - members
    delete:
      summary: Remove override for a member of a group
      description: >-
        Sets the override flag to false and allows LDAP Group Sync to reset the access level to the LDAP-prescribed
        value.
      operationId: removeOverrideForAMemberOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setOverrideFlagForAMemberOfAGroupResponse'
      tags:
        - members
  '/groups/{id}/members/{member_id}/approve':
    put:
      summary: Approve a member for a group
      description: Approves a pending user for a group and its subgroups and projects.
      operationId: approveAMemberForAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the root group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: member_id
          in: path
          description: The ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - members
  '/groups/{id}/members/approve_all':
    post:
      summary: Approve all pending members for a group
      description: Approves all pending users for a group and its subgroups and projects.
      operationId: approveAllPendingMembersForAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the root group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - members
  '/groups/{id}/pending_members':
    get:
      summary: List pending members of a group and its subgroups and projects
      description: >-
        For a group and its subgroups and projects, get a list of all members in an awaiting state and those who are
        invited but do not have a GitLab account.
      operationId: listPendingMembersOfAGroupAndItsSubgroupsAndProjects
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPendingMembersOfAGroupAndItsSubgroupsAndProjectsResponse'
      tags:
        - members
components:
  schemas:
    listAllMembersOfAGroupOrProjectResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          username:
            type: string
          name:
            type: string
          state:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          created_at:
            type: string
          created_by:
            type: object
            properties:
              id:
                type: integer
              username:
                type: string
              name:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          expires_at:
            type: string
          access_level:
            type: integer
          group_saml_identity:
            type: string
          membership_state:
            type: string
    getAMemberOfAGroupOrProjectResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        access_level:
          type: integer
        email:
          type: string
        created_at:
          type: string
        created_by:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            name:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        expires_at:
          type: string
        group_saml_identity:
          type: string
        membership_state:
          type: string
    listAllBillableMembersOfAGroupResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          username:
            type: string
          name:
            type: string
          state:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          last_activity_on:
            type: string
          membership_type:
            type: string
          removable:
            type: boolean
          created_at:
            type: string
    listMembershipsForABillableMemberOfAGroupResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          source_id:
            type: integer
          source_full_name:
            type: string
          source_members_url:
            type: string
          created_at:
            type: string
          expires_at:
            type: string
          access_level:
            type: object
            properties:
              string_value:
                type: string
              integer_value:
                type: integer
    addAMemberToAGroupOrProjectRequest:
      type: object
      properties:
        user_id:
          oneOf:
            - type: integer
            - type: string
        access_level:
          type: integer
        expires_at:
          type: string
        invite_source:
          type: string
        tasks_to_be_done:
          type: array
          items:
            type: string
        tasks_project_id:
          type: integer
      required:
        - user_id
        - access_level
    addAMemberToAGroupOrProjectResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        created_at:
          type: string
        created_by:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            name:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        expires_at:
          type: string
        access_level:
          type: integer
        email:
          type: string
        group_saml_identity:
          type: string
    editAMemberOfAGroupOrProjectRequest:
      type: object
      properties:
        access_level:
          type: integer
        expires_at:
          type: string
      required:
        - access_level
    setOverrideFlagForAMemberOfAGroupResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        created_at:
          type: string
        created_by:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            name:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        expires_at:
          type: string
        access_level:
          type: integer
        email:
          type: string
        override:
          type: boolean
    listPendingMembersOfAGroupAndItsSubgroupsAndProjectsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          username:
            type: string
          email:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          approved:
            type: boolean
          invited:
            type: boolean
