openapi: 3.0.2
info:
  title: 'GitLabKit: REST API / container_registry'
  version: '1.0'
paths:
  '/projects/{id}/':
    put:
      summary: Change the visibility of the Container Registry
      description: This controls who can view the Container Registry.
      operationId: changeTheVisibilityOfTheContainerRegistry
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project accessible by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeTheVisibilityOfTheContainerRegistryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeTheVisibilityOfTheContainerRegistryRequest'
      tags:
        - container_registry
  '/projects/{id}/registry/repositories':
    get:
      summary: Within a project
      description: Get a list of registry repositories in a project.
      operationId: withinAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: 'If the parameter is included as true, each repository includes an array of "tags" in the response.'
          required: false
          schema:
            type: string
        - name: tags_count
          in: query
          description: >-
            If the parameter is included as true, each repository includes "tags_count" in the response (Introduced in
            GitLab 13.1).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withinAProjectResponse'
      tags:
        - container_registry
  '/groups/{id}/registry/repositories':
    get:
      summary: Within a group
      description: Get a list of registry repositories in a group.
      operationId: withinAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: 'If the parameter is included as true, each repository includes an array of "tags" in the response.'
          required: false
          schema:
            type: string
        - name: tags_count
          in: query
          description: >-
            If the parameter is included as true, each repository includes "tags_count" in the response (Introduced in
            GitLab 13.1).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withinAGroupResponse'
      tags:
        - container_registry
  '/registry/repositories/{id}':
    get:
      summary: Get details of a single repository
      description: Get details of a registry repository.
      operationId: getDetailsOfASingleRepository
      parameters:
        - name: id
          in: path
          description: The ID of the registry repository accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: 'If the parameter is included as true, the response includes an array of "tags".'
          required: false
          schema:
            type: string
        - name: tags_count
          in: query
          description: 'If the parameter is included as true, the response includes "tags_count".'
          required: false
          schema:
            type: string
        - name: size
          in: query
          description: >-
            If the parameter is included as true, the response includes "size". This is the deduplicated size of all
            images within the repository. Deduplication eliminates extra copies of identical data. For example, if you
            upload the same image twice, the Container Registry stores only one copy. This field is only available on
            GitLab.com for repositories created after 2021-11-04.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDetailsOfASingleRepositoryResponse'
      tags:
        - container_registry
  '/projects/{id}/registry/repositories/{repository_id}':
    delete:
      summary: Delete registry repository
      description: Delete a repository in registry.
      operationId: deleteRegistryRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - container_registry
  '/projects/{id}/registry/repositories/{repository_id}/tags':
    get:
      summary: Within a project
      description: Get a list of tags for given registry repository.
      operationId: withinAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withinAProjectResponse'
      tags:
        - container_registry
    delete:
      summary: Delete registry repository tags in bulk
      description: Delete registry repository tags in bulk based on given criteria.
      operationId: deleteRegistryRepositoryTagsInBulk
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
        - name: name_regex
          in: query
          description: >-
            The re2 regex of the name to delete. To delete all tags specify .*. Note: name_regex is deprecated in favor
            of name_regex_delete. This field is validated.
          required: false
          schema:
            type: string
        - name: name_regex_delete
          in: query
          description: The re2 regex of the name to delete. To delete all tags specify .*. This field is validated.
          required: true
          schema:
            type: string
        - name: name_regex_keep
          in: query
          description: >-
            The re2 regex of the name to keep. This value overrides any matches from name_regex_delete. This field is
            validated. Note: setting to .* results in a no-op.
          required: false
          schema:
            type: string
        - name: keep_n
          in: query
          description: The amount of latest tags of given name to keep.
          required: false
          schema:
            type: integer
        - name: older_than
          in: query
          description: 'Tags to delete that are older than the given time, written in human readable form 1h, 1d, 1month.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - container_registry
  '/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}':
    get:
      summary: Get details of a registry repository tag
      description: Get details of a registry repository tag.
      operationId: getDetailsOfARegistryRepositoryTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
        - name: tag_name
          in: path
          description: The name of tag.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDetailsOfARegistryRepositoryTagResponse'
      tags:
        - container_registry
    delete:
      summary: Delete a registry repository tag
      description: Delete a registry repository tag.
      operationId: deleteARegistryRepositoryTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
        - name: tag_name
          in: path
          description: The name of tag.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - container_registry
  /v2/_catalog:
    get:
      summary: Listing all container repositories
      description: 'To list all container repositories on your GitLab instance, admin credentials are required:'
      operationId: listingAllContainerRepositories
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - container_registry
components:
  schemas:
    changeTheVisibilityOfTheContainerRegistryRequest:
      type: object
      properties:
        container_registry_access_level:
          type: string
    changeTheVisibilityOfTheContainerRegistryResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        container_registry_access_level:
          type: string
    withinAProjectResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          path:
            type: string
          location:
            type: string
    withinAGroupResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          path:
            type: string
          project_id:
            type: integer
          location:
            type: string
          created_at:
            type: string
            format: date-time
          cleanup_policy_started_at:
            type: string
            format: date-time
          tags_count:
            type: integer
          tags:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                path:
                  type: string
                location:
                  type: string
    getDetailsOfASingleRepositoryResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        project_id:
          type: integer
        location:
          type: string
        created_at:
          type: string
          format: date-time
        cleanup_policy_started_at:
          type: string
          format: date-time
        tags_count:
          type: integer
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              path:
                type: string
              location:
                type: string
        size:
          type: integer
    getDetailsOfARegistryRepositoryTagResponse:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        location:
          type: string
        revision:
          type: string
        short_revision:
          type: string
        digest:
          type: string
        created_at:
          type: string
          format: date-time
        total_size:
          type: integer
