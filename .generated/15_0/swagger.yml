openapi: 3.0.2
info:
  title: 'GitLabKit: REST API'
  version: '1.0'
paths:
  '/groups/{id}/access_requests':
    get:
      summary: List access requests for a group or project
      description: Gets a list of access requests viewable by the authenticated user.
      operationId: listAccessRequestsForAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessRequestsForAGroupOrProjectResponse'
      tags:
        - access_requests
    post:
      summary: Request access to a group or project
      description: Requests access for the authenticated user to a group or project.
      operationId: requestAccessToAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestAccessToAGroupOrProjectResponse'
      tags:
        - access_requests
  '/groups/{id}/access_requests/{user_id}/approve':
    put:
      summary: Approve an access request
      description: Approves an access request for the given user.
      operationId: approveAnAccessRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the access requester
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/approveAnAccessRequestResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approveAnAccessRequestRequest'
      tags:
        - access_requests
  '/groups/{id}/access_requests/{user_id}':
    delete:
      summary: Deny an access request
      description: Denies an access request for the given user.
      operationId: denyAnAccessRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the access requester
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - access_requests
  '/admin/sidekiq/queues/{queue_name}':
    delete:
      summary: Sidekiq queues administration API
      description: Delete jobs from a Sidekiq queue that match the given metadata.
      operationId: sidekiqQueuesAdministrationApi
      parameters:
        - name: queue_name
          in: path
          description: The name of the queue to delete jobs from
          required: true
          schema:
            type: string
        - name: user
          in: query
          description: The username of the user who scheduled the jobs
          required: false
          schema:
            type: string
        - name: project
          in: query
          description: The full path of the project where the jobs were scheduled from
          required: false
          schema:
            type: string
        - name: root_namespace
          in: query
          description: The root namespace of the project
          required: false
          schema:
            type: string
        - name: subscription_plan
          in: query
          description: The subscription plan of the root namespace (GitLab.com only)
          required: false
          schema:
            type: string
        - name: caller_id
          in: query
          description: >-
            The endpoint or background job that schedule the job (for example: ProjectsController#create,
            /api/:version/projects/:id, PostReceive)
          required: false
          schema:
            type: string
        - name: feature_category
          in: query
          description: 'The feature category of the background job (for example: team_planning or code_review)'
          required: false
          schema:
            type: string
        - name: worker_class
          in: query
          description: 'The class of the background job worker (for example: PostReceive or MergeWorker)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sidekiqQueuesAdministrationApiResponse'
      tags:
        - admin_sidekiq_queues
  /application/appearance:
    get:
      summary: Get current appearance configuration
      description: List the current appearance configuration of the GitLab instance.
      operationId: getCurrentAppearanceConfiguration
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCurrentAppearanceConfigurationResponse'
      tags:
        - appearance
    put:
      summary: Change logo
      description: Upload a logo to your GitLab instance.
      operationId: changeLogo
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeLogoResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeLogoRequest'
      tags:
        - appearance
  /applications:
    post:
      summary: Create an application
      description: Create an application by posting a JSON payload.
      operationId: createAnApplication
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAnApplicationResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnApplicationRequest'
      tags:
        - applications
    get:
      summary: List all applications
      description: List all registered applications.
      operationId: listAllApplications
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllApplicationsResponse'
      tags:
        - applications
  '/applications/{id}':
    delete:
      summary: Delete an application
      description: Delete a specific application.
      operationId: deleteAnApplication
      parameters:
        - name: id
          in: path
          description: The ID of the application (not the application_id).
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - applications
  /audit_events:
    get:
      summary: Retrieve all instance audit events
      description: 'By default, GET requests return 20 results at a time because the API results are paginated.'
      operationId: retrieveAllInstanceAuditEvents
      parameters:
        - name: created_after
          in: query
          description: 'Return audit events created on or after the given time. Format: ISO 8601 (YYYY-MM-DDTHH:MM:SSZ)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return audit events created on or before the given time. Format: ISO 8601 (YYYY-MM-DDTHH:MM:SSZ)'
          required: false
          schema:
            type: string
        - name: entity_type
          in: query
          description: 'Return audit events for the given entity type. Valid values are: User, Group, or Project.'
          required: false
          schema:
            type: string
        - name: entity_id
          in: query
          description: Return audit events for the given entity ID. Requires entity_type attribute to be present.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllInstanceAuditEventsResponse'
      tags:
        - audit_events
  '/audit_events/{id}':
    get:
      summary: Retrieve single instance audit event
      description: ''
      operationId: retrieveSingleInstanceAuditEvent
      parameters:
        - name: id
          in: path
          description: The ID of the audit event
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveSingleInstanceAuditEventResponse'
      tags:
        - audit_events
  '/groups/{id}/audit_events':
    get:
      summary: Retrieve all group audit events
      description: 'By default, GET requests return 20 results at a time because the API results are paginated.'
      operationId: retrieveAllGroupAuditEvents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return group audit events created on or after the given time. Format: ISO 8601 (YYYY-MM-DDTHH:MM:SSZ)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return group audit events created on or before the given time. Format: ISO 8601 (YYYY-MM-DDTHH:MM:SSZ)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllInstanceAuditEventsResponse'
      tags:
        - audit_events
  '/groups/{id}/audit_events/{audit_event_id}':
    get:
      summary: Retrieve a specific group audit event
      description: Only available to group owners and administrators.
      operationId: retrieveASpecificGroupAuditEvent
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: audit_event_id
          in: path
          description: The ID of the audit event
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveSingleInstanceAuditEventResponse'
      tags:
        - audit_events
  '/projects/{id}/audit_events':
    get:
      summary: Retrieve all project audit events
      description: 'By default, GET requests return 20 results at a time because the API results are paginated.'
      operationId: retrieveAllProjectAuditEvents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return project audit events created on or after the given time. Format: ISO 8601 (YYYY-MM-DDTHH:MM:SSZ)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return project audit events created on or before the given time. Format: ISO 8601 (YYYY-MM-DDTHH:MM:SSZ)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllInstanceAuditEventsResponse'
      tags:
        - audit_events
  '/projects/{id}/audit_events/{audit_event_id}':
    get:
      summary: Retrieve a specific project audit event
      description: Only available to users with at least the Maintainer role for the project.
      operationId: retrieveASpecificProjectAuditEvent
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: audit_event_id
          in: path
          description: The ID of the audit event
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveSingleInstanceAuditEventResponse'
      tags:
        - audit_events
  /avatar:
    get:
      summary: Get a single avatar URL
      description: Get a single avatar URL for a user with the given email address.
      operationId: getASingleAvatarUrl
      parameters:
        - name: email
          in: query
          description: Public email address of the user.
          required: true
          schema:
            type: string
        - name: size
          in: query
          description: >-
            Single pixel dimension (because images are squares). Only used for avatar lookups at Gravatar or at the
            configured Libravatar server.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleAvatarUrlResponse'
      tags:
        - avatar
  '/projects/{id}/issues/{issue_iid}/award_emoji':
    get:
      summary: List an awardable’s award emojis
      description: Get a list of all award emojis for a specified awardable.
      operationId: listAnAwardableAwardEmojis
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid/merge_request_iid/snippet_id
          in: query
          description: 'ID (iid for merge requests/issues, id for snippets) of an awardable.'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAnAwardableAwardEmojisResponse'
      tags:
        - award_emoji
    post:
      summary: Award a new emoji
      description: Create an award emoji on the specified awardable.
      operationId: awardANewEmoji
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleAwardEmojiResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/awardANewEmojiRequest'
      tags:
        - award_emoji
  '/projects/{id}/issues/{issue_iid}/award_emoji/{award_id}':
    get:
      summary: Get single award emoji
      description: 'Get a single award emoji from an issue, snippet, or merge request.'
      operationId: getSingleAwardEmoji
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid/merge_request_iid/snippet_id
          in: query
          description: 'ID (iid for merge requests/issues, id for snippets) of an awardable.'
          required: true
          schema:
            type: integer
        - name: award_id
          in: path
          description: ID of the award emoji.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleAwardEmojiResponse'
      tags:
        - award_emoji
    delete:
      summary: Delete an award emoji
      description: Sometimes it’s just not meant to be and you need to remove the award.
      operationId: deleteAnAwardEmoji
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid/merge_request_iid/snippet_id
          in: query
          description: 'ID (iid for merge requests/issues, id for snippets) of an awardable.'
          required: true
          schema:
            type: integer
        - name: award_id
          in: path
          description: ID of an award emoji.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - award_emoji
  '/projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji':
    get:
      summary: List a comment’s award emojis
      description: Get all award emojis for a comment (note).
      operationId: listACommentAwardEmojis
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: Internal ID of an issue.
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: ID of a comment (note).
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAnAwardableAwardEmojisResponse'
      tags:
        - award_emoji
    post:
      summary: Award a new emoji on a comment
      description: Create an award emoji on the specified comment (note).
      operationId: awardANewEmojiOnAComment
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: Internal ID of an issue.
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: ID of a comment (note).
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleAwardEmojiResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/awardANewEmojiOnACommentRequest'
      tags:
        - award_emoji
  '/projects/{id}/issues/{issue_iid}/notes/{note_id}/award_emoji/{award_id}':
    get:
      summary: Get an award emoji for a comment
      description: Get a single award emoji for a comment (note).
      operationId: getAnAwardEmojiForAComment
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: Internal ID of an issue.
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: ID of a comment (note).
          required: true
          schema:
            type: integer
        - name: award_id
          in: path
          description: ID of the award emoji.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleAwardEmojiResponse'
      tags:
        - award_emoji
    delete:
      summary: Delete an award emoji from a comment
      description: Sometimes it’s just not meant to be and you need to remove the award.
      operationId: deleteAnAwardEmojiFromAComment
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: Internal ID of an issue.
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: ID of a comment (note).
          required: true
          schema:
            type: integer
        - name: award_id
          in: path
          description: ID of an award_emoji.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - award_emoji
  '/projects/{id}/boards':
    get:
      summary: List project issue boards
      description: Lists project issue boards in the given project.
      operationId: listProjectIssueBoards
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueBoardsResponse'
      tags:
        - boards
    post:
      summary: Create an issue board
      description: Creates a project issue board.
      operationId: createAnIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAnIssueBoardResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnIssueBoardRequest'
      tags:
        - boards
  '/projects/{id}/boards/{board_id}':
    get:
      summary: Show a single issue board
      description: Get a single project issue board.
      operationId: showASingleIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showASingleIssueBoardResponse'
      tags:
        - boards
    put:
      summary: Update an issue board
      description: Updates a project issue board.
      operationId: updateAnIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAnIssueBoardResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAnIssueBoardRequest'
      tags:
        - boards
    delete:
      summary: Delete an issue board
      description: Deletes a project issue board.
      operationId: deleteAnIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - boards
  '/projects/{id}/boards/{board_id}/lists':
    get:
      summary: List board lists in a project issue board
      description: Get a list of the board’s lists. Does not include open and closed lists.
      operationId: listBoardListsInAProjectIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listBoardListsInAProjectIssueBoardResponse'
      tags:
        - boards
    post:
      summary: Create a board list
      description: Creates a new issue board list.
      operationId: createABoardList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showASingleBoardListResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createABoardListRequest'
      tags:
        - boards
  '/projects/{id}/boards/{board_id}/lists/{list_id}':
    get:
      summary: Show a single board list
      description: Get a single board list.
      operationId: showASingleBoardList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
        - name: list_id
          in: path
          description: The ID of a board’s list
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showASingleBoardListResponse'
      tags:
        - boards
    put:
      summary: Reorder a list in a board
      description: Updates an existing issue board list. This call is used to change list position.
      operationId: reorderAListInABoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
        - name: list_id
          in: path
          description: The ID of a board’s list
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showASingleBoardListResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reorderAListInABoardRequest'
      tags:
        - boards
    delete:
      summary: Delete a board list from a board
      description: Only for administrators and project owners. Deletes a board list.
      operationId: deleteABoardListFromABoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
        - name: list_id
          in: path
          description: The ID of a board’s list
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - boards
  '/projects/{id}/repository/branches':
    get:
      summary: List repository branches
      description: 'Get a list of repository branches from a project, sorted by name alphabetically.'
      operationId: listRepositoryBranches
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: >-
            Return list of branches containing the search string. You can use ^term and term$ to find branches that
            begin and end with term respectively.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRepositoryBranchesResponse'
      tags:
        - branches
    post:
      summary: Create repository branch
      description: Create a new branch in the repository.
      operationId: createRepositoryBranch
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleRepositoryBranchResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRepositoryBranchRequest'
      tags:
        - branches
  '/projects/{id}/repository/branches/{branch}':
    get:
      summary: Get single repository branch
      description: Get a single project repository branch.
      operationId: getSingleRepositoryBranch
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: branch
          in: path
          description: Name of the branch.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleRepositoryBranchResponse'
      tags:
        - branches
    delete:
      summary: Delete repository branch
      description: Delete a branch from the repository.
      operationId: deleteRepositoryBranch
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: branch
          in: path
          description: Name of the branch.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - branches
  '/projects/{id}/repository/merged_branches':
    delete:
      summary: Delete merged branches
      description: Deletes all branches that are merged into the project’s default branch.
      operationId: deleteMergedBranches
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - branches
  /broadcast_messages:
    get:
      summary: Get all broadcast messages
      description: List all broadcast messages.
      operationId: getAllBroadcastMessages
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllBroadcastMessagesResponse'
      tags:
        - broadcast_messages
    post:
      summary: Create a broadcast message
      description: Create a new broadcast message.
      operationId: createABroadcastMessage
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASpecificBroadcastMessageResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createABroadcastMessageRequest'
      tags:
        - broadcast_messages
  '/broadcast_messages/{id}':
    get:
      summary: Get a specific broadcast message
      description: Get a specific broadcast message.
      operationId: getASpecificBroadcastMessage
      parameters:
        - name: id
          in: path
          description: ID of broadcast message to retrieve.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASpecificBroadcastMessageResponse'
      tags:
        - broadcast_messages
    put:
      summary: Update a broadcast message
      description: Update an existing broadcast message.
      operationId: updateABroadcastMessage
      parameters:
        - name: id
          in: path
          description: ID of broadcast message to update.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASpecificBroadcastMessageResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createABroadcastMessageRequest'
      tags:
        - broadcast_messages
    delete:
      summary: Delete a broadcast message
      description: Delete a broadcast message.
      operationId: deleteABroadcastMessage
      parameters:
        - name: id
          in: path
          description: ID of broadcast message to delete.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - broadcast_messages
  '/projects/{id}/cluster_agents':
    get:
      summary: List the agents for a project
      description: Returns the list of agents registered for the project.
      operationId: listTheAgentsForAProject
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project maintained by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listTheAgentsForAProjectResponse'
      tags:
        - cluster_agents
    post:
      summary: Register an agent with a project
      description: Registers an agent to the project.
      operationId: registerAnAgentWithAProject
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project maintained by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDetailsAboutAnAgentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerAnAgentWithAProjectRequest'
      tags:
        - cluster_agents
  '/projects/{id}/cluster_agents/{agent_id}':
    get:
      summary: Get details about an agent
      description: Gets a single agent details.
      operationId: getDetailsAboutAnAgent
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project maintained by the authenticated user
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: ID of the agent
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDetailsAboutAnAgentResponse'
      tags:
        - cluster_agents
    delete:
      summary: Delete a registered agent
      description: Deletes an existing agent registration.
      operationId: deleteARegisteredAgent
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project maintained by the authenticated user
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: ID of the agent
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - cluster_agents
  '/projects/{id}/cluster_agents/{agent_id}/tokens':
    get:
      summary: List tokens for an agent
      description: Returns a list of tokens for an agent.
      operationId: listTokensForAnAgent
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project maintained by the authenticated user.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: ID of the agent.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listTokensForAnAgentResponse'
      tags:
        - cluster_agents
    post:
      summary: Create an agent token
      description: Creates a new token for an agent.
      operationId: createAnAgentToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project maintained by the authenticated user.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: ID of the agent.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAnAgentTokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnAgentTokenRequest'
      tags:
        - cluster_agents
  '/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}':
    get:
      summary: Get a single agent token
      description: Gets a single agent token.
      operationId: getASingleAgentToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project maintained by the authenticated user.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: ID of the agent.
          required: true
          schema:
            type: integer
        - name: token_id
          in: path
          description: ID of the token.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleAgentTokenResponse'
      tags:
        - cluster_agents
    delete:
      summary: Revoke an agent token
      description: Revokes an agent token.
      operationId: revokeAnAgentToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project maintained by the authenticated user.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: ID of the agent.
          required: true
          schema:
            type: integer
        - name: token_id
          in: path
          description: ID of the token.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - cluster_agents
  '/projects/{id}/repository/commits':
    get:
      summary: List repository commits
      description: Get a list of repository commits in a project.
      operationId: listRepositoryCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: ref_name
          in: query
          description: 'The name of a repository branch, tag or revision range, or if not given the default branch'
          required: false
          schema:
            type: string
        - name: since
          in: query
          description: 'Only commits after or on this date are returned in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
        - name: until
          in: query
          description: 'Only commits before or on this date are returned in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ'
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: The file path
          required: false
          schema:
            type: string
        - name: all
          in: query
          description: Retrieve every commit from the repository
          required: false
          schema:
            type: string
        - name: with_stats
          in: query
          description: Stats about each commit are added to the response
          required: false
          schema:
            type: string
        - name: first_parent
          in: query
          description: Follow only the first parent commit upon seeing a merge commit
          required: false
          schema:
            type: string
        - name: order
          in: query
          description: >-
            List commits in order. Possible values: default, topo. Defaults to default, the commits are shown in reverse
            chronological order.
          required: false
          schema:
            type: string
        - name: trailers
          in: query
          description: Parse and include Git trailers for every commit
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRepositoryCommitsResponse'
      tags:
        - commits
    post:
      summary: Create a commit with multiple files and actions
      description: Create a commit by posting a JSON payload
      operationId: createACommitWithMultipleFilesAndActions
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createACommitWithMultipleFilesAndActionsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createACommitWithMultipleFilesAndActionsRequest'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}':
    get:
      summary: Get a single commit
      description: Get a specific commit identified by the commit hash or name of a branch or tag.
      operationId: getASingleCommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash or name of a repository branch or tag
          required: true
          schema:
            type: string
        - name: stats
          in: query
          description: Include commit stats. Default is true
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleCommitResponse'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/refs':
    get:
      summary: Get references a commit is pushed to
      description: ''
      operationId: getReferencesACommitIsPushedTo
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: 'The scope of commits. Possible values branch, tag, all. Default is all.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReferencesACommitIsPushedToResponse'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/cherry_pick':
    post:
      summary: Cherry-pick a commit
      description: Cherry-picks a commit to a given branch.
      operationId: cherryPickACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cherryPickACommitResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cherryPickACommitRequest'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/revert':
    post:
      summary: Revert a commit
      description: Reverts a commit in a given branch.
      operationId: revertACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: Commit SHA to revert
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cherryPickACommitResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/revertACommitRequest'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/diff':
    get:
      summary: Get the diff of a commit
      description: Get the diff of a commit in a project.
      operationId: getTheDiffOfACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash or name of a repository branch or tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTheDiffOfACommitResponse'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/comments':
    get:
      summary: Get the comments of a commit
      description: Get the comments of a commit in a project.
      operationId: getTheCommentsOfACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash or name of a repository branch or tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTheCommentsOfACommitResponse'
      tags:
        - commits
    post:
      summary: Post comment to commit
      description: Adds a comment to a commit.
      operationId: postCommentToCommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit SHA or name of a repository branch or tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postCommentToCommitResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postCommentToCommitRequest'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/discussions':
    get:
      summary: Get the discussions of a commit
      description: Get the discussions of a commit in a project.
      operationId: getTheDiscussionsOfACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash or name of a repository branch or tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTheDiscussionsOfACommitResponse'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/statuses':
    get:
      summary: List the statuses of a commit
      description: ''
      operationId: listTheStatusesOfACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit SHA
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: 'The name of a repository branch or tag or, if not given, the default branch'
          required: false
          schema:
            type: string
        - name: stage
          in: query
          description: 'Filter by build stage, for example, test'
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: 'Filter by job name, for example, bundler:audit'
          required: false
          schema:
            type: string
        - name: all
          in: query
          description: 'Return all statuses, not only the latest ones'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listTheStatusesOfACommitResponse'
      tags:
        - commits
  '/projects/{id}/statuses/{sha}':
    post:
      summary: Post the build status to a commit
      description: Adds or updates a build status of a commit.
      operationId: postTheBuildStatusToACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit SHA
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postTheBuildStatusToACommitResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTheBuildStatusToACommitRequest'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/merge_requests':
    get:
      summary: List merge requests associated with a commit
      description: Get a list of merge requests related to the specified commit.
      operationId: listMergeRequestsAssociatedWithACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit SHA
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMergeRequestsAssociatedWithACommitResponse'
      tags:
        - commits
  '/projects/{id}/repository/commits/{sha}/signature':
    get:
      summary: Get GPG signature of a commit
      description: 'Get the GPG signature from a commit, if it is signed. For unsigned commits, it results in a 404 response.'
      operationId: getGpgSignatureOfACommit
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The commit hash or name of a repository branch or tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGpgSignatureOfACommitResponse'
      tags:
        - commits
  '/projects/{id}/':
    put:
      summary: Change the visibility of the Container Registry
      description: This controls who can view the Container Registry.
      operationId: changeTheVisibilityOfTheContainerRegistry
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project accessible by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeTheVisibilityOfTheContainerRegistryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeTheVisibilityOfTheContainerRegistryRequest'
      tags:
        - container_registry
  '/projects/{id}/registry/repositories':
    get:
      summary: Within a project
      description: Get a list of registry repositories in a project.
      operationId: withinAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: 'If the parameter is included as true, each repository includes an array of "tags" in the response.'
          required: false
          schema:
            type: string
        - name: tags_count
          in: query
          description: >-
            If the parameter is included as true, each repository includes "tags_count" in the response (Introduced in
            GitLab 13.1).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withinAProjectResponse'
      tags:
        - container_registry
  '/groups/{id}/registry/repositories':
    get:
      summary: Within a group
      description: Get a list of registry repositories in a group.
      operationId: withinAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group accessible by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withinAGroupResponse'
      tags:
        - container_registry
  '/registry/repositories/{id}':
    get:
      summary: Get details of a single repository
      description: Get details of a registry repository.
      operationId: getDetailsOfASingleRepository
      parameters:
        - name: id
          in: path
          description: The ID of the registry repository accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: tags
          in: query
          description: 'If the parameter is included as true, the response includes an array of "tags".'
          required: false
          schema:
            type: string
        - name: tags_count
          in: query
          description: 'If the parameter is included as true, the response includes "tags_count".'
          required: false
          schema:
            type: string
        - name: size
          in: query
          description: >-
            If the parameter is included as true, the response includes "size". This is the deduplicated size of all
            images within the repository. Deduplication eliminates extra copies of identical data. For example, if you
            upload the same image twice, the Container Registry stores only one copy. This field is only available on
            GitLab.com for repositories created after 2021-11-04.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDetailsOfASingleRepositoryResponse'
      tags:
        - container_registry
  '/projects/{id}/registry/repositories/{repository_id}':
    delete:
      summary: Delete registry repository
      description: Delete a repository in registry.
      operationId: deleteRegistryRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - container_registry
  '/projects/{id}/registry/repositories/{repository_id}/tags':
    get:
      summary: Within a project
      description: Get a list of tags for given registry repository.
      operationId: withinAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withinAProjectResponse'
      tags:
        - container_registry
    delete:
      summary: Delete registry repository tags in bulk
      description: Delete registry repository tags in bulk based on given criteria.
      operationId: deleteRegistryRepositoryTagsInBulk
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
        - name: name_regex
          in: query
          description: >-
            The re2 regex of the name to delete. To delete all tags specify .*. Note: name_regex is deprecated in favor
            of name_regex_delete. This field is validated.
          required: false
          schema:
            type: string
        - name: name_regex_delete
          in: query
          description: The re2 regex of the name to delete. To delete all tags specify .*. This field is validated.
          required: true
          schema:
            type: string
        - name: name_regex_keep
          in: query
          description: >-
            The re2 regex of the name to keep. This value overrides any matches from name_regex_delete. This field is
            validated. Note: setting to .* results in a no-op.
          required: false
          schema:
            type: string
        - name: keep_n
          in: query
          description: The amount of latest tags of given name to keep.
          required: false
          schema:
            type: integer
        - name: older_than
          in: query
          description: 'Tags to delete that are older than the given time, written in human readable form 1h, 1d, 1month.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - container_registry
  '/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}':
    get:
      summary: Get details of a registry repository tag
      description: Get details of a registry repository tag.
      operationId: getDetailsOfARegistryRepositoryTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project accessible by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
        - name: tag_name
          in: path
          description: The name of tag.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDetailsOfARegistryRepositoryTagResponse'
      tags:
        - container_registry
    delete:
      summary: Delete a registry repository tag
      description: Delete a registry repository tag.
      operationId: deleteARegistryRepositoryTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: repository_id
          in: path
          description: The ID of registry repository.
          required: true
          schema:
            type: integer
        - name: tag_name
          in: path
          description: The name of tag.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - container_registry
  /v2/_catalog:
    get:
      summary: Listing all container repositories
      description: 'To list all container repositories on your GitLab instance, administrator credentials are required:'
      operationId: listingAllContainerRepositories
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - container_registry
  '/users/{id}/custom_attributes':
    get:
      summary: List custom attributes
      description: Get all custom attributes on a resource.
      operationId: listCustomAttributes
      parameters:
        - name: id
          in: path
          description: The ID of a resource
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listCustomAttributesResponse'
      tags:
        - custom_attributes
  '/users/{id}/custom_attributes/{key}':
    get:
      summary: Single custom attribute
      description: Get a single custom attribute on a resource.
      operationId: singleCustomAttribute
      parameters:
        - name: id
          in: path
          description: The ID of a resource
          required: true
          schema:
            type: integer
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleCustomAttributeResponse'
      tags:
        - custom_attributes
    put:
      summary: Set custom attribute
      description: 'Set a custom attribute on a resource. The attribute is updated if it already exists, or newly created otherwise.'
      operationId: setCustomAttribute
      parameters:
        - name: id
          in: path
          description: The ID of a resource
          required: true
          schema:
            type: integer
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleCustomAttributeResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setCustomAttributeRequest'
      tags:
        - custom_attributes
    delete:
      summary: Delete custom attribute
      description: Delete a custom attribute on a resource.
      operationId: deleteCustomAttribute
      parameters:
        - name: id
          in: path
          description: The ID of a resource
          required: true
          schema:
            type: integer
        - name: key
          in: path
          description: The key of the custom attribute
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - custom_attributes
  '/projects/{id}/dependencies':
    get:
      summary: List project dependencies
      description: >-
        Get a list of project dependencies. This API partially mirroring Dependency List feature. This list can be
        generated only for languages and package managers supported by Gemnasium.
      operationId: listProjectDependencies
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: package_manager
          in: query
          description: >-
            Returns dependencies belonging to specified package manager. Valid values: bundler, composer, conan, go,
            gradle, maven, npm, nuget, pip, pipenv, yarn, sbt, or setuptools.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectDependenciesResponse'
      tags:
        - dependencies
  /deploy_keys:
    get:
      summary: List all deploy keys
      description: >-
        Get a list of all deploy keys across all projects of the GitLab instance. This endpoint requires administrator
        access and is not available on GitLab.com.
      operationId: listAllDeployKeys
      parameters:
        - name: public
          in: query
          description: Only return deploy keys that are public. Defaults to false.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllDeployKeysResponse'
      tags:
        - deploy_keys
  '/projects/{id}/deploy_keys':
    get:
      summary: List project deploy keys
      description: Get a list of a project’s deploy keys.
      operationId: listProjectDeployKeys
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectDeployKeysResponse'
      tags:
        - deploy_keys
    post:
      summary: Add deploy key
      description: Creates a new deploy key for a project.
      operationId: addDeployKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleDeployKeyResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addDeployKeyRequest'
      tags:
        - deploy_keys
  '/projects/{id}/deploy_keys/{key_id}':
    get:
      summary: Get a single deploy key
      description: Get a single key.
      operationId: getASingleDeployKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          description: The ID of the deploy key
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleDeployKeyResponse'
      tags:
        - deploy_keys
    put:
      summary: Update deploy key
      description: Updates a deploy key for a project.
      operationId: updateDeployKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleDeployKeyResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateDeployKeyRequest'
      tags:
        - deploy_keys
    delete:
      summary: Delete deploy key
      description: >-
        Removes a deploy key from the project. If the deploy key is used only for this project, it’s deleted from the
        system.
      operationId: deleteDeployKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          description: The ID of the deploy key
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - deploy_keys
  /deploy_tokens:
    get:
      summary: List all deploy tokens
      description: Get a list of all deploy tokens across the GitLab instance. This endpoint requires administrator access.
      operationId: listAllDeployTokens
      parameters:
        - name: active
          in: query
          description: Limit by active status.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllDeployTokensResponse'
      tags:
        - deploy_tokens
  '/projects/{id}/deploy_tokens':
    get:
      summary: List project deploy tokens
      description: Get a list of a project’s deploy tokens.
      operationId: listProjectDeployTokens
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: active
          in: query
          description: Limit by active status.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllDeployTokensResponse'
      tags:
        - deploy_tokens
    post:
      summary: Create a project deploy token
      description: Creates a new deploy token for a project.
      operationId: createAProjectDeployToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAProjectDeployTokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAProjectDeployTokenRequest'
      tags:
        - deploy_tokens
  '/projects/{id}/deploy_tokens/{token_id}':
    get:
      summary: Get a project deploy token
      description: Get a single project’s deploy token by ID.
      operationId: getAProjectDeployToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: ID of the deploy token
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAProjectDeployTokenResponse'
      tags:
        - deploy_tokens
    delete:
      summary: Delete a project deploy token
      description: Removes a deploy token from the project.
      operationId: deleteAProjectDeployToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: ID of the deploy token
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - deploy_tokens
  '/groups/{id}/deploy_tokens':
    get:
      summary: List group deploy tokens
      description: Get a list of a group’s deploy tokens
      operationId: listGroupDeployTokens
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: active
          in: query
          description: Limit by active status.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllDeployTokensResponse'
      tags:
        - deploy_tokens
    post:
      summary: Create a group deploy token
      description: Creates a new deploy token for a group.
      operationId: createAGroupDeployToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAProjectDeployTokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAProjectDeployTokenRequest'
      tags:
        - deploy_tokens
  '/groups/{id}/deploy_tokens/{token_id}':
    get:
      summary: Get a group deploy token
      description: Get a single group’s deploy token by ID.
      operationId: getAGroupDeployToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: ID of the deploy token
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAProjectDeployTokenResponse'
      tags:
        - deploy_tokens
    delete:
      summary: Delete a group deploy token
      description: Removes a deploy token from the group.
      operationId: deleteAGroupDeployToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: ID of the deploy token
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - deploy_tokens
  '/projects/{id}/deployments':
    get:
      summary: List project deployments
      description: Get a list of deployments in a project.
      operationId: listProjectDeployments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: 'Return deployments ordered by either one of id, iid, created_at, updated_at or ref fields. Default is id.'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return deployments sorted in asc or desc order. Default is asc.
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return deployments updated after the specified date. Expected in ISO 8601 format (2019-03-15T08:00:00Z).'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return deployments updated before the specified date. Expected in ISO 8601 format (2019-03-15T08:00:00Z).'
          required: false
          schema:
            type: string
        - name: environment
          in: query
          description: The name of the environment to filter deployments by.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: 'The status to filter deployments by. One of created, running, success, failed, canceled, blocked.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectDeploymentsResponse'
      tags:
        - deployments
    post:
      summary: Create a deployment
      description: >-
        Deployments created by users on GitLab Premium or higher include the approvals and pending_approval_count
        properties:
      operationId: createADeployment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createADeploymentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createADeploymentRequest'
      tags:
        - deployments
  '/projects/{id}/deployments/{deployment_id}':
    get:
      summary: Get a specific deployment
      description: >-
        When the unified approval setting is configured, deployments created by users on GitLab Premium or higher
        include the approvals and pending_approval_count properties:
      operationId: getASpecificDeployment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: deployment_id
          in: path
          description: The ID of the deployment
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASpecificDeploymentResponse'
      tags:
        - deployments
    put:
      summary: Update a deployment
      description: >-
        Deployments created by users on GitLab Premium or higher include the approvals and pending_approval_count
        properties:
      operationId: updateADeployment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: deployment_id
          in: path
          description: The ID of the deployment to update.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createADeploymentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateADeploymentRequest'
      tags:
        - deployments
  '/projects/{id}/deployments/{deployment_id}/merge_requests':
    get:
      summary: List of merge requests associated with a deployment
      description: 'This API retrieves the list of merge requests shipped with a given deployment:'
      operationId: listOfMergeRequestsAssociatedWithADeployment
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - deployments
  '/projects/{id}/deployments/{deployment_id}/approval':
    post:
      summary: Approve or reject a blocked deployment
      description: See Deployment Approvals for more information about this feature.
      operationId: approveOrRejectABlockedDeployment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: deployment_id
          in: path
          description: The ID of the deployment.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/approveOrRejectABlockedDeploymentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approveOrRejectABlockedDeploymentRequest'
      tags:
        - deployments
  '/projects/{id}/issues/{issue_iid}/discussions':
    get:
      summary: List project issue discussion items
      description: Gets a list of all discussion items for a single issue.
      operationId: listProjectIssueDiscussionItems
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueDiscussionItemsResponse'
      tags:
        - discussions
    post:
      summary: Create new issue thread
      description: >-
        Creates a new thread to a single project issue. This is similar to creating a note but other comments (replies)
        can be added to it later.
      operationId: createNewIssueThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewIssueThreadRequest'
      tags:
        - discussions
  '/projects/{id}/issues/{issue_iid}/discussions/{discussion_id}':
    get:
      summary: Get single issue discussion item
      description: Returns a single discussion item for a specific project issue
      operationId: getSingleIssueDiscussionItem
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a discussion item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/projects/{id}/issues/{issue_iid}/discussions/{discussion_id}/notes':
    post:
      summary: Add note to existing issue thread
      description: Adds a new note to the thread. This can also create a thread from a single comment.
      operationId: addNoteToExistingIssueThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNoteToExistingIssueThreadRequest'
      tags:
        - discussions
  '/projects/{id}/issues/{issue_iid}/discussions/{discussion_id}/notes/{note_id}':
    put:
      summary: Modify existing issue thread note
      description: Modify existing thread note of an issue.
      operationId: modifyExistingIssueThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a thread note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingIssueThreadNoteRequest'
      tags:
        - discussions
    delete:
      summary: Delete an issue thread note
      description: Deletes an existing thread note of an issue.
      operationId: deleteAnIssueThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a discussion
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a discussion note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/projects/{id}/snippets/{snippet_id}/discussions':
    get:
      summary: List project snippet discussion items
      description: Gets a list of all discussion items for a single snippet.
      operationId: listProjectSnippetDiscussionItems
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of an snippet
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueDiscussionItemsResponse'
      tags:
        - discussions
    post:
      summary: Create new snippet thread
      description: >-
        Creates a new thread to a single project snippet. This is similar to creating a note but other comments
        (replies) can be added to it later.
      operationId: createNewSnippetThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of an snippet
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewIssueThreadRequest'
      tags:
        - discussions
  '/projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}':
    get:
      summary: Get single snippet discussion item
      description: Returns a single discussion item for a specific project snippet
      operationId: getSingleSnippetDiscussionItem
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of an snippet
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a discussion item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}/notes':
    post:
      summary: Add note to existing snippet thread
      description: Adds a new note to the thread.
      operationId: addNoteToExistingSnippetThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of an snippet
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNoteToExistingIssueThreadRequest'
      tags:
        - discussions
  '/projects/{id}/snippets/{snippet_id}/discussions/{discussion_id}/notes/{note_id}':
    put:
      summary: Modify existing snippet thread note
      description: Modify existing thread note of a snippet.
      operationId: modifyExistingSnippetThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of an snippet
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a thread note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingIssueThreadNoteRequest'
      tags:
        - discussions
    delete:
      summary: Delete a snippet thread note
      description: Deletes an existing thread note of a snippet.
      operationId: deleteASnippetThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of an snippet
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a discussion
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a discussion note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/groups/{id}/epics/{epic_id}/discussions':
    get:
      summary: List group epic discussion items
      description: Gets a list of all discussion items for a single epic.
      operationId: listGroupEpicDiscussionItems
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueDiscussionItemsResponse'
      tags:
        - discussions
    post:
      summary: Create new epic thread
      description: >-
        Creates a new thread to a single group epic. This is similar to creating a note but other comments (replies) can
        be added to it later.
      operationId: createNewEpicThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewIssueThreadRequest'
      tags:
        - discussions
  '/groups/{id}/epics/{epic_id}/discussions/{discussion_id}':
    get:
      summary: Get single epic discussion item
      description: Returns a single discussion item for a specific group epic
      operationId: getSingleEpicDiscussionItem
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a discussion item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/groups/{id}/epics/{epic_id}/discussions/{discussion_id}/notes':
    post:
      summary: Add note to existing epic thread
      description: Adds a new note to the thread. This can also create a thread from a single comment.
      operationId: addNoteToExistingEpicThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNoteToExistingIssueThreadRequest'
      tags:
        - discussions
  '/groups/{id}/epics/{epic_id}/discussions/{discussion_id}/notes/{note_id}':
    put:
      summary: Modify existing epic thread note
      description: Modify existing thread note of an epic.
      operationId: modifyExistingEpicThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a thread note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingIssueThreadNoteRequest'
      tags:
        - discussions
    delete:
      summary: Delete an epic thread note
      description: Deletes an existing thread note of an epic.
      operationId: deleteAnEpicThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a thread note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/projects/{id}/merge_requests/{merge_request_iid}/discussions':
    get:
      summary: List project merge request discussion items
      description: Gets a list of all discussion items for a single merge request.
      operationId: listProjectMergeRequestDiscussionItems
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueDiscussionItemsResponse'
      tags:
        - discussions
    post:
      summary: Create new merge request thread
      description: >-
        Creates a new thread to a single project merge request. This is similar to creating a note but other comments
        (replies) can be added to it later.
      operationId: createNewMergeRequestThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewMergeRequestThreadRequest'
      tags:
        - discussions
  '/projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}':
    get:
      summary: Get single merge request discussion item
      description: Returns a single discussion item for a specific project merge request
      operationId: getSingleMergeRequestDiscussionItem
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a discussion item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
    put:
      summary: Resolve a merge request thread
      description: Resolve or unresolve a thread of discussion in a merge request.
      operationId: resolveAMergeRequestThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resolveAMergeRequestThreadRequest'
      tags:
        - discussions
  '/projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}/notes':
    post:
      summary: Add note to existing merge request thread
      description: Adds a new note to the thread. This can also create a thread from a single comment.
      operationId: addNoteToExistingMergeRequestThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNoteToExistingIssueThreadRequest'
      tags:
        - discussions
  '/projects/{id}/merge_requests/{merge_request_iid}/discussions/{discussion_id}/notes/{note_id}':
    put:
      summary: Modify an existing merge request thread note
      description: Modify or resolve an existing thread note of a merge request.
      operationId: modifyAnExistingMergeRequestThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a thread note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyAnExistingMergeRequestThreadNoteRequest'
      tags:
        - discussions
    delete:
      summary: Delete a merge request thread note
      description: Deletes an existing thread note of a merge request.
      operationId: deleteAMergeRequestThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a thread note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/projects/{id}/commits/{commit_id}/discussions':
    get:
      summary: List project commit discussion items
      description: Gets a list of all discussion items for a single commit.
      operationId: listProjectCommitDiscussionItems
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: commit_id
          in: path
          description: The ID of a commit
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueDiscussionItemsResponse'
      tags:
        - discussions
    post:
      summary: Create new commit thread
      description: >-
        Creates a new thread to a single project commit. This is similar to creating a note but other comments (replies)
        can be added to it later.
      operationId: createNewCommitThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: commit_id
          in: path
          description: The SHA of a commit
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewCommitThreadRequest'
      tags:
        - discussions
  '/projects/{id}/commits/{commit_id}/discussions/{discussion_id}':
    get:
      summary: Get single commit discussion item
      description: Returns a single discussion item for a specific project commit
      operationId: getSingleCommitDiscussionItem
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: commit_id
          in: path
          description: The ID of a commit
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a discussion item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/projects/{id}/commits/{commit_id}/discussions/{discussion_id}/notes':
    post:
      summary: Add note to existing commit thread
      description: Adds a new note to the thread.
      operationId: addNoteToExistingCommitThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: commit_id
          in: path
          description: The ID of a commit
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNoteToExistingIssueThreadRequest'
      tags:
        - discussions
  '/projects/{id}/commits/{commit_id}/discussions/{discussion_id}/notes/{note_id}':
    put:
      summary: Modify an existing commit thread note
      description: Modify or resolve an existing thread note of a commit.
      operationId: modifyAnExistingCommitThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: commit_id
          in: path
          description: The ID of a commit
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a thread note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingIssueThreadNoteRequest'
      tags:
        - discussions
    delete:
      summary: Delete a commit thread note
      description: Deletes an existing thread note of a commit.
      operationId: deleteACommitThreadNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: commit_id
          in: path
          description: The ID of a commit
          required: true
          schema:
            type: integer
        - name: discussion_id
          in: path
          description: The ID of a thread
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a thread note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - discussions
  '/projects/{id}/environments':
    get:
      summary: List environments
      description: Get all environments for a given project.
      operationId: listEnvironments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Return the environment with this name. Mutually exclusive with search
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return list of environments matching the search criteria. Mutually exclusive with name
          required: false
          schema:
            type: string
        - name: states
          in: query
          description: >-
            List all environments that match a specific state. Accepted values: available or stopped. If no state value
            given, returns all environments.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEnvironmentsResponse'
      tags:
        - environments
    post:
      summary: Create a new environment
      description: Creates a new environment with the given name and external_url.
      operationId: createANewEnvironment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewEnvironmentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewEnvironmentRequest'
      tags:
        - environments
  '/projects/{id}/environments/{environment_id}':
    get:
      summary: Get a specific environment
      description: Example of response
      operationId: getASpecificEnvironment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: The ID of the environment
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASpecificEnvironmentResponse'
      tags:
        - environments
    put:
      summary: Edit an existing environment
      description: Updates an existing environment’s name and/or external_url.
      operationId: editAnExistingEnvironment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: The ID of the environment
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewEnvironmentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewEnvironmentRequest'
      tags:
        - environments
    delete:
      summary: Delete an environment
      description: 'It returns 204 if the environment was successfully deleted, and 404 if the environment does not exist.'
      operationId: deleteAnEnvironment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: The ID of the environment
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - environments
  '/projects/{id}/environments/review_apps':
    delete:
      summary: Delete multiple stopped review apps
      description: >-
        It schedules for deletion multiple environments that have already been stopped and are in the review app folder.
        The actual deletion is performed after 1 week from the time of execution.
      operationId: deleteMultipleStoppedReviewApps
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: before
          in: query
          description: >-
            The date before which environments can be deleted. Defaults to 30 days ago. Expected in ISO 8601 format
            (YYYY-MM-DDTHH:MM:SSZ).
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of environments to delete. Defaults to 100.
          required: false
          schema:
            type: integer
        - name: dry_run
          in: query
          description: >-
            Defaults to true for safety reasons. It performs a dry run where no actual deletion will be performed. Set
            to false to actually delete the environment.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteMultipleStoppedReviewAppsResponse'
      tags:
        - environments
  '/projects/{id}/environments/{environment_id}/stop':
    post:
      summary: Stop an environment
      description: 'It returns 200 if the environment was successfully stopped, and 404 if the environment does not exist.'
      operationId: stopAnEnvironment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: environment_id
          in: path
          description: The ID of the environment
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stopAnEnvironmentResponse'
      tags:
        - environments
  '/groups/{id}/epics/{epic_iid}/issues':
    get:
      summary: List issues for an epic
      description: Gets all issues that are assigned to an epic and the authenticated user has access to.
      operationId: listIssuesForAnEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIssuesForAnEpicResponse'
      tags:
        - epic_issues
  '/groups/{id}/epics/{epic_iid}/issues/{issue_id}':
    post:
      summary: Assign an issue to the epic
      description: >-
        Creates an epic - issue association. If the issue in question belongs to another epic it is unassigned from that
        epic.
      operationId: assignAnIssueToTheEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: string
        - name: issue_id
          in: path
          description: The ID of the issue.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignAnIssueToTheEpicResponse'
      tags:
        - epic_issues
  '/groups/{id}/epics/{epic_iid}/issues/{epic_issue_id}':
    delete:
      summary: Remove an issue from the epic
      description: Removes an epic - issue association.
      operationId: removeAnIssueFromTheEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: string
        - name: epic_issue_id
          in: path
          description: The ID of the issue - epic association.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignAnIssueToTheEpicResponse'
      tags:
        - epic_issues
    put:
      summary: Update epic - issue association
      description: Updates an epic - issue association.
      operationId: updateEpicIssueAssociation
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: string
        - name: epic_issue_id
          in: path
          description: The ID of the issue - epic association.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateEpicIssueAssociationResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateEpicIssueAssociationRequest'
      tags:
        - epic_issues
  '/groups/{id}/epics/{epic_iid}/epics':
    get:
      summary: List epics related to a given epic
      description: Gets all child epics of an epic.
      operationId: listEpicsRelatedToAGivenEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEpicsRelatedToAGivenEpicResponse'
      tags:
        - epic_links
    post:
      summary: Create and assign a child epic
      description: Creates a new epic and associates it with provided parent epic. The response is LinkedEpic object.
      operationId: createAndAssignAChildEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the (future parent) epic.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAndAssignAChildEpicResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAndAssignAChildEpicRequest'
      tags:
        - epic_links
  '/groups/{id}/epics/{epic_iid}/epics/{child_epic_id}':
    post:
      summary: Assign a child epic
      description: >-
        Creates an association between two epics, designating one as the parent epic and the other as the child epic. A
        parent epic can have multiple child epics. If the new child epic already belonged to another epic, it is
        unassigned from that previous parent.
      operationId: assignAChildEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: integer
        - name: child_epic_id
          in: path
          description: >-
            The global ID of the child epic. Internal ID can’t be used because they can conflict with epics from other
            groups.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignAChildEpicResponse'
      tags:
        - epic_links
    put:
      summary: Re-order a child epic
      description: ''
      operationId: reOrderAChildEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: integer
        - name: child_epic_id
          in: path
          description: >-
            The global ID of the child epic. Internal ID can’t be used because they can conflict with epics from other
            groups.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEpicsRelatedToAGivenEpicResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reOrderAChildEpicRequest'
      tags:
        - epic_links
    delete:
      summary: Unassign a child epic
      description: Unassigns a child epic from a parent epic.
      operationId: unassignAChildEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: integer
        - name: child_epic_id
          in: path
          description: >-
            The global ID of the child epic. Internal ID can’t be used because they can conflict with epics from other
            groups.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assignAChildEpicResponse'
      tags:
        - epic_links
  '/groups/{id}/epics':
    get:
      summary: List epics for a group
      description: Gets all epics of the requested group and its subgroups.
      operationId: listEpicsForAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: author_id
          in: query
          description: Return epics created by the given user id
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: Return epics created by the user with the given username. Available in GitLab 14.7 and later
          required: false
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Return epics matching a comma-separated list of labels names. Label names from the epic group or a parent
            group can be used
          required: false
          schema:
            type: string
        - name: with_labels_details
          in: query
          description: >-
            If true, response returns more details for each label in labels field: :name, :color, :description,
            :description_html, :text_color. Default is false. Available in GitLab 12.7 and later
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: 'Return epics ordered by created_at, updated_at, or title fields. Default is created_at'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return epics sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search epics against their title and description
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: 'Search epics against their state, possible filters: opened, closed and all, default: all'
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return epics created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return epics created on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return epics updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return epics updated on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: include_ancestor_groups
          in: query
          description: Include epics from the requested group’s ancestors. Default is false
          required: false
          schema:
            type: string
        - name: include_descendant_groups
          in: query
          description: Include epics from the requested group’s descendants. Default is true
          required: false
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: >-
            Return epics reacted by the authenticated user by the given emoji. None returns epics not given a reaction.
            Any returns epics given at least one reaction. Available in GitLab 13.0 and later
          required: false
          schema:
            type: string
        - name: not
          in: query
          description: >-
            Return epics that do not match the parameters supplied. Accepts: author_id, author_username (GitLab 14.7 and
            later) and labels. Available in GitLab 14.6 and later
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEpicsForAGroupResponse'
      tags:
        - epics
    post:
      summary: New epic
      description: Creates a new epic.
      operationId: newEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newEpicResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newEpicRequest'
      tags:
        - epics
  '/groups/{id}/epics/{epic_iid}':
    get:
      summary: Single epic
      description: Gets a single epic
      operationId: singleEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleEpicResponse'
      tags:
        - epics
    put:
      summary: Update epic
      description: Updates an epic.
      operationId: updateEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateEpicResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateEpicRequest'
      tags:
        - epics
    delete:
      summary: Delete epic
      description: Deletes an epic
      operationId: deleteEpic
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of the epic.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - epics
  '/groups/{id}/epics/{epic_iid}/todo':
    post:
      summary: Create a to-do item
      description: >-
        Manually creates a to-do item for the current user on an epic. If there already exists a to-do item for the user
        on that epic, status code 304 is returned.
      operationId: createAToDoItem
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: epic_iid
          in: path
          description: The internal ID of a group’s epic
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAToDoItemResponse'
      tags:
        - epics
  '/projects/{id}/error_tracking/settings':
    get:
      summary: Get Error Tracking settings
      description: ''
      operationId: getErrorTrackingSettings
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getErrorTrackingSettingsResponse'
      tags:
        - error_tracking
    patch:
      summary: Enable or disable the Error Tracking project settings
      description: >-
        The API allows you to enable or disable the Error Tracking settings for a project. Only for users with the
        Maintainer role for the project.
      operationId: enableOrDisableTheErrorTrackingProjectSettings
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getErrorTrackingSettingsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enableOrDisableTheErrorTrackingProjectSettingsRequest'
      tags:
        - error_tracking
  '/projects/{id}/error_tracking/client_keys':
    get:
      summary: List project client keys
      description: ''
      operationId: listProjectClientKeys
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectClientKeysResponse'
      tags:
        - error_tracking
    post:
      summary: Create a client key
      description: Creates a new client key for a project. The public key attribute is generated automatically.
      operationId: createAClientKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAClientKeyResponse'
      tags:
        - error_tracking
  '/projects/{id}/error_tracking/client_keys/{key_id}':
    delete:
      summary: Delete a client key
      description: Removes a client key from the project.
      operationId: deleteAClientKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          description: The ID of the client key.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - error_tracking
  /events:
    get:
      summary: List currently authenticated user’s events
      description: >-
        Get a list of events for the authenticated user. Scope read_user or api is required. Events associated with
        epics are not available using the API.
      operationId: listCurrentlyAuthenticatedUserEvents
      parameters:
        - name: action
          in: query
          description: Include only events of a particular action type
          required: false
          schema:
            type: string
        - name: target_type
          in: query
          description: Include only events of a particular target type
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: Include only events created before a particular date. View how to format dates.
          required: false
          schema:
            type: string
        - name: after
          in: query
          description: Include only events created after a particular date. View how to format dates.
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: Include all events across a user’s projects.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort events in asc or desc order by created_at. Default is desc.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listCurrentlyAuthenticatedUserEventsResponse'
      tags:
        - events
  '/users/{id}/events':
    get:
      summary: Get user contribution events
      description: >-
        Get the contribution events for the specified user, sorted from newest to oldest. Scope read_user or api is
        required. Events associated with epics are not available using API.
      operationId: getUserContributionEvents
      parameters:
        - name: id
          in: path
          description: The ID or Username of the user
          required: true
          schema:
            type: integer
        - name: action
          in: query
          description: Include only events of a particular action type
          required: false
          schema:
            type: string
        - name: target_type
          in: query
          description: Include only events of a particular target type
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: Include only events created before a particular date. View how to format dates.
          required: false
          schema:
            type: string
        - name: after
          in: query
          description: Include only events created after a particular date. View how to format dates.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort events in asc or desc order by created_at. Default is desc.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: The page of results to return. Defaults to 1.
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: The number of results per page. Defaults to 20.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserContributionEventsResponse'
      tags:
        - events
  '/projects/{project_id}/events':
    get:
      summary: List a Project’s visible events
      description: Get a list of visible events for a particular project.
      operationId: listAProjectVisibleEvents
      parameters:
        - name: project_id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: action
          in: query
          description: Include only events of a particular action type
          required: false
          schema:
            type: string
        - name: target_type
          in: query
          description: Include only events of a particular target type
          required: false
          schema:
            type: string
        - name: before
          in: query
          description: Include only events created before a particular date. View how to format dates.
          required: false
          schema:
            type: string
        - name: after
          in: query
          description: Include only events created after a particular date. View how to format dates.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort events in asc or desc order by created_at. Default is desc.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAProjectVisibleEventsResponse'
      tags:
        - events
  '/projects/{id}/feature_flags_user_lists':
    get:
      summary: List all feature flag user lists for a project
      description: Gets all feature flag user lists for the requested project.
      operationId: listAllFeatureFlagUserListsForAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Return user lists matching the search criteria.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllFeatureFlagUserListsForAProjectResponse'
      tags:
        - feature_flag_user_lists
    post:
      summary: Create a feature flag user list
      description: Creates a feature flag user list.
      operationId: createAFeatureFlagUserList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAFeatureFlagUserListResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAFeatureFlagUserListRequest'
      tags:
        - feature_flag_user_lists
  '/projects/{id}/feature_flags_user_lists/{iid}':
    get:
      summary: Get a feature flag user list
      description: Gets a feature flag user list.
      operationId: getAFeatureFlagUserList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: iid
          in: path
          description: The internal ID of the project’s feature flag user list.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAFeatureFlagUserListResponse'
      tags:
        - feature_flag_user_lists
    put:
      summary: Update a feature flag user list
      description: Updates a feature flag user list.
      operationId: updateAFeatureFlagUserList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: iid
          in: path
          description: The internal ID of the project’s feature flag user list.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAFeatureFlagUserListResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAFeatureFlagUserListRequest'
      tags:
        - feature_flag_user_lists
    delete:
      summary: Delete feature flag user list
      description: Deletes a feature flag user list.
      operationId: deleteFeatureFlagUserList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: iid
          in: path
          description: The internal ID of the project’s feature flag user list
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - feature_flag_user_lists
  '/projects/{id}/feature_flags':
    get:
      summary: List feature flags for a project
      description: Gets all feature flags of the requested project.
      operationId: listFeatureFlagsForAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: 'The condition of feature flags, one of: enabled, disabled.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFeatureFlagsForAProjectResponse'
      tags:
        - feature_flags
    post:
      summary: Create a feature flag
      description: Creates a new feature flag.
      operationId: createAFeatureFlag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleFeatureFlagResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAFeatureFlagRequest'
      tags:
        - feature_flags
  '/projects/{id}/feature_flags/{feature_flag_name}':
    get:
      summary: Get a single feature flag
      description: Gets a single feature flag.
      operationId: getASingleFeatureFlag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: feature_flag_name
          in: path
          description: The name of the feature flag.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleFeatureFlagResponse'
      tags:
        - feature_flags
    put:
      summary: Update a feature flag
      description: Updates a feature flag.
      operationId: updateAFeatureFlag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: feature_flag_name
          in: path
          description: The current name of the feature flag.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleFeatureFlagResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAFeatureFlagRequest'
      tags:
        - feature_flags
    delete:
      summary: Delete a feature flag
      description: Deletes a feature flag.
      operationId: deleteAFeatureFlag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: feature_flag_name
          in: path
          description: The name of the feature flag.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - feature_flags
  /features:
    get:
      summary: List all features
      description: 'Get a list of all persisted features, with its gate values.'
      operationId: listAllFeatures
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllFeaturesResponse'
      tags:
        - features
  /features/definitions:
    get:
      summary: List all feature definitions
      description: Get a list of all feature definitions.
      operationId: listAllFeatureDefinitions
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllFeatureDefinitionsResponse'
      tags:
        - features
  '/features/{name}':
    post:
      summary: Set or create a feature
      description: >-
        Set a feature’s gate value. If a feature with the given name doesn’t exist yet, it’s created. The value can be a
        boolean, or an integer to indicate percentage of time.
      operationId: setOrCreateAFeature
      parameters:
        - name: name
          in: path
          description: Name of the feature to create or update
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setOrCreateAFeatureResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOrCreateAFeatureRequest'
      tags:
        - features
    delete:
      summary: Delete a feature
      description: 'Removes a feature gate. Response is equal when the gate exists, or doesn’t.'
      operationId: deleteAFeature
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - features
  /features/my_user_feature:
    post:
      summary: Set percentage of actors rollout
      description: Rollout to percentage of actors.
      operationId: setPercentageOfActorsRollout
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setOrCreateAFeatureResponse'
      tags:
        - features
  '/projects/{id}/freeze_periods':
    get:
      summary: List Freeze Periods
      description: 'Paginated list of Freeze Periods, sorted by created_at in ascending order.'
      operationId: listFreezePeriods
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFreezePeriodsResponse'
      tags:
        - freeze_periods
    post:
      summary: Create a Freeze Period
      description: Create a Freeze Period.
      operationId: createAFreezePeriod
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAFreezePeriodByAFreeze_period_idResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAFreezePeriodRequest'
      tags:
        - freeze_periods
  '/projects/{id}/freeze_periods/{freeze_period_id}':
    get:
      summary: Get a Freeze Period by a freeze_period_id
      description: Get a Freeze Period for the given freeze_period_id.
      operationId: getAFreezePeriodByAFreeze_period_id
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: freeze_period_id
          in: path
          description: The database ID of the Freeze Period.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAFreezePeriodByAFreeze_period_idResponse'
      tags:
        - freeze_periods
    put:
      summary: Update a Freeze Period
      description: Update a Freeze Period for the given freeze_period_id.
      operationId: updateAFreezePeriod
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: freeze_period_id
          in: path
          description: The database ID of the Freeze Period.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAFreezePeriodByAFreeze_period_idResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAFreezePeriodRequest'
      tags:
        - freeze_periods
    delete:
      summary: Delete a Freeze Period
      description: Delete a Freeze Period for the given freeze_period_id.
      operationId: deleteAFreezePeriod
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: freeze_period_id
          in: path
          description: The database ID of the Freeze Period.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - freeze_periods
  /geo_nodes:
    post:
      summary: Create a new Geo node
      description: Creates a new Geo node.
      operationId: createANewGeoNode
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewGeoNodeResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewGeoNodeRequest'
      tags:
        - geo_nodes
    get:
      summary: Retrieve configuration about all Geo nodes
      description: ''
      operationId: retrieveConfigurationAboutAllGeoNodes
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveConfigurationAboutAllGeoNodesResponse'
      tags:
        - geo_nodes
  '/geo_nodes/{id}':
    get:
      summary: Retrieve configuration about a specific Geo node
      description: ''
      operationId: retrieveConfigurationAboutASpecificGeoNode
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveConfigurationAboutASpecificGeoNodeResponse'
      tags:
        - geo_nodes
    put:
      summary: Edit a Geo node
      description: Updates settings of an existing Geo node.
      operationId: editAGeoNode
      parameters:
        - name: id
          in: path
          description: The ID of the Geo node.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewGeoNodeResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editAGeoNodeRequest'
      tags:
        - geo_nodes
    delete:
      summary: Delete a Geo node
      description: Removes the Geo node.
      operationId: deleteAGeoNode
      parameters:
        - name: id
          in: path
          description: The ID of the Geo node.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - geo_nodes
  '/geo_nodes/{id}/repair':
    post:
      summary: Repair a Geo node
      description: To repair the OAuth authentication of a Geo node.
      operationId: repairAGeoNode
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repairAGeoNodeResponse'
      tags:
        - geo_nodes
  /geo_nodes/status:
    get:
      summary: Retrieve status about all Geo nodes
      description: ''
      operationId: retrieveStatusAboutAllGeoNodes
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveStatusAboutAllGeoNodesResponse'
      tags:
        - geo_nodes
  '/geo_nodes/{id}/status':
    get:
      summary: Retrieve status about a specific Geo node
      description: ''
      operationId: retrieveStatusAboutASpecificGeoNode
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveStatusAboutASpecificGeoNodeResponse'
      tags:
        - geo_nodes
  /geo_nodes/current/failures:
    get:
      summary: Retrieve project sync or verification failures that occurred on the current node
      description: This only works on a secondary node.
      operationId: retrieveProjectSyncOrVerificationFailuresThatOccurredOnTheCurrentNode
      parameters:
        - name: type
          in: query
          description: Type of failed objects (repository/wiki)
          required: false
          schema:
            type: string
        - name: failure_type
          in: query
          description: Type of failures (sync/checksum_mismatch/verification)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveProjectSyncOrVerificationFailuresThatOccurredOnTheCurrentNodeResponse'
      tags:
        - geo_nodes
  '/groups/{id}/access_tokens':
    get:
      summary: List group access tokens
      description: Get a list of group access tokens.
      operationId: listGroupAccessTokens
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupAccessTokensResponse'
      tags:
        - group_access_tokens
    post:
      summary: Create a group access token
      description: Create a group access token.
      operationId: createAGroupAccessToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAGroupAccessTokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAGroupAccessTokenRequest'
      tags:
        - group_access_tokens
  '/groups/{id}/access_tokens/{token_id}':
    get:
      summary: Get a group access token
      description: Get a group access token by ID.
      operationId: getAGroupAccessToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: ID of the group access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAGroupAccessTokenResponse'
      tags:
        - group_access_tokens
    delete:
      summary: Revoke a group access token
      description: Revoke a group access token.
      operationId: revokeAGroupAccessToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: ID of the group access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - group_access_tokens
  /analytics/group_activity/issues_count:
    get:
      summary: Get count of recently created issues for group
      description: ''
      operationId: getCountOfRecentlyCreatedIssuesForGroup
      parameters:
        - name: group_path
          in: query
          description: Group path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCountOfRecentlyCreatedIssuesForGroupResponse'
      tags:
        - group_activity_analytics
  /analytics/group_activity/merge_requests_count:
    get:
      summary: Get count of recently created merge requests for group
      description: ''
      operationId: getCountOfRecentlyCreatedMergeRequestsForGroup
      parameters:
        - name: group_path
          in: query
          description: Group path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCountOfRecentlyCreatedMergeRequestsForGroupResponse'
      tags:
        - group_activity_analytics
  /analytics/group_activity/new_members_count:
    get:
      summary: Get count of members recently added to group
      description: ''
      operationId: getCountOfMembersRecentlyAddedToGroup
      parameters:
        - name: group_path
          in: query
          description: Group path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCountOfMembersRecentlyAddedToGroupResponse'
      tags:
        - group_activity_analytics
  '/groups/{id}/badges':
    get:
      summary: List all badges of a group
      description: Gets a list of a group’s badges.
      operationId: listAllBadgesOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Name of the badges to return (case-sensitive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllBadgesOfAGroupResponse'
      tags:
        - group_badges
    post:
      summary: Add a badge to a group
      description: Adds a badge to a group.
      operationId: addABadgeToAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getABadgeOfAGroupResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addABadgeToAGroupRequest'
      tags:
        - group_badges
  '/groups/{id}/badges/{badge_id}':
    get:
      summary: Get a badge of a group
      description: Gets a badge of a group.
      operationId: getABadgeOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getABadgeOfAGroupResponse'
      tags:
        - group_badges
    put:
      summary: Edit a badge of a group
      description: Updates a badge of a group.
      operationId: editABadgeOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getABadgeOfAGroupResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addABadgeToAGroupRequest'
      tags:
        - group_badges
    delete:
      summary: Remove a badge from a group
      description: Removes a badge from a group.
      operationId: removeABadgeFromAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - group_badges
  '/groups/{id}/badges/render':
    get:
      summary: Preview a badge from a group
      description: Returns how the link_url and image_url final URLs would be after resolving the placeholder interpolation.
      operationId: previewABadgeFromAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: link_url
          in: query
          description: URL of the badge link
          required: true
          schema:
            type: string
        - name: image_url
          in: query
          description: URL of the badge image
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/previewABadgeFromAGroupResponse'
      tags:
        - group_badges
  '/groups/{id}/boards':
    get:
      summary: List all group issue boards in a group
      description: Lists issue boards in the given group.
      operationId: listAllGroupIssueBoardsInAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllGroupIssueBoardsInAGroupResponse'
      tags:
        - group_boards
    post:
      summary: Create a group issue board
      description: Creates a group issue board.
      operationId: createAGroupIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAGroupIssueBoardResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAGroupIssueBoardRequest'
      tags:
        - group_boards
  '/groups/{id}/boards/{board_id}':
    get:
      summary: Single group issue board
      description: Gets a single group issue board.
      operationId: singleGroupIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleGroupIssueBoardResponse'
      tags:
        - group_boards
    put:
      summary: Update a group issue board
      description: Updates a group issue board.
      operationId: updateAGroupIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAGroupIssueBoardResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAGroupIssueBoardRequest'
      tags:
        - group_boards
    delete:
      summary: Delete a group issue board
      description: Deletes a group issue board.
      operationId: deleteAGroupIssueBoard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - group_boards
  '/groups/{id}/boards/{board_id}/lists':
    get:
      summary: List group issue board lists
      description: Get a list of the board’s lists. Does not include open and closed lists
      operationId: listGroupIssueBoardLists
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupIssueBoardListsResponse'
      tags:
        - group_boards
    post:
      summary: New group issue board list
      description: Creates an issue board list.
      operationId: newGroupIssueBoardList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newGroupIssueBoardListResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newGroupIssueBoardListRequest'
      tags:
        - group_boards
  '/groups/{id}/boards/{board_id}/lists/{list_id}':
    get:
      summary: Single group issue board list
      description: Get a single board list.
      operationId: singleGroupIssueBoardList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
        - name: list_id
          in: path
          description: The ID of a board’s list
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleGroupIssueBoardListResponse'
      tags:
        - group_boards
    put:
      summary: Edit group issue board list
      description: Updates an existing issue board list. This call is used to change list position.
      operationId: editGroupIssueBoardList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
        - name: list_id
          in: path
          description: The ID of a board’s list
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleGroupIssueBoardListResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editGroupIssueBoardListRequest'
      tags:
        - group_boards
    delete:
      summary: Delete a group issue board list
      description: Only for administrators and group owners. Deletes the board list in question.
      operationId: deleteAGroupIssueBoardList
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: board_id
          in: path
          description: The ID of a board
          required: true
          schema:
            type: integer
        - name: list_id
          in: path
          description: The ID of a board’s list
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - group_boards
  '/groups/{id}/iterations':
    get:
      summary: List group iterations
      description: Returns a list of group iterations.
      operationId: listGroupIterations
      parameters:
        - name: state
          in: query
          description: >-
            ‘Return opened, upcoming, current (previously started), closed, or all iterations. Filtering by started
            state is deprecated starting with 14.1, please use current instead.’
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return only iterations with a title matching the provided string.
          required: false
          schema:
            type: string
        - name: include_ancestors
          in: query
          description: Include iterations from parent group and its ancestors. Defaults to true.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupIterationsResponse'
      tags:
        - group_iterations
  '/groups/{id}/labels':
    get:
      summary: List group labels
      description: Get all labels for a given group.
      operationId: listGroupLabels
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: with_counts
          in: query
          description: Whether or not to include issue and merge request counts. Defaults to false. (Introduced in GitLab 12.2)
          required: false
          schema:
            type: string
        - name: include_ancestor_groups
          in: query
          description: Include ancestor groups. Defaults to true.
          required: false
          schema:
            type: string
        - name: include_descendant_groups
          in: query
          description: Include descendant groups. Defaults to false. Introduced in GitLab 13.6
          required: false
          schema:
            type: string
        - name: only_group_labels
          in: query
          description: Toggle to include only group labels or also project labels. Defaults to true. Introduced in GitLab 13.6
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Keyword to filter labels by. Introduced in GitLab 13.6
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupLabelsResponse'
      tags:
        - group_labels
    post:
      summary: Create a new group label
      description: Create a new group label for a given group.
      operationId: createANewGroupLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleGroupLabelResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewGroupLabelRequest'
      tags:
        - group_labels
  '/groups/{id}/labels/{label_id}':
    get:
      summary: Get a single group label
      description: Get a single label for a given group.
      operationId: getASingleGroupLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a group’s label.
          required: true
          schema:
            type: string
        - name: include_ancestor_groups
          in: query
          description: Include ancestor groups. Defaults to true.
          required: false
          schema:
            type: string
        - name: include_descendant_groups
          in: query
          description: Include descendant groups. Defaults to false. Introduced in GitLab 13.6
          required: false
          schema:
            type: string
        - name: only_group_labels
          in: query
          description: Toggle to include only group labels or also project labels. Defaults to true. Introduced in GitLab 13.6
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleGroupLabelResponse'
      tags:
        - group_labels
    put:
      summary: Update a group label
      description: 'Updates an existing group label. At least one parameter is required, to update the group label.'
      operationId: updateAGroupLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a group’s label.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleGroupLabelResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAGroupLabelRequest'
      tags:
        - group_labels
    delete:
      summary: Delete a group label
      description: Deletes a group label with a given name.
      operationId: deleteAGroupLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a group’s label.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - group_labels
  '/groups/{id}/labels/{label_id}/subscribe':
    post:
      summary: Subscribe to a group label
      description: >-
        Subscribes the authenticated user to a group label to receive notifications. If the user is already subscribed
        to the label, the status code 304 is returned.
      operationId: subscribeToAGroupLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a group’s label.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleGroupLabelResponse'
      tags:
        - group_labels
  '/groups/{id}/labels/{label_id}/unsubscribe':
    post:
      summary: Unsubscribe from a group label
      description: >-
        Unsubscribes the authenticated user from a group label to not receive notifications from it. If the user is not
        subscribed to the label, the status code 304 is returned.
      operationId: unsubscribeFromAGroupLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a group’s label.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleGroupLabelResponse'
      tags:
        - group_labels
  '/groups/{id}/variables':
    get:
      summary: List group variables
      description: Get list of a group’s variables.
      operationId: listGroupVariables
      parameters:
        - name: id
          in: path
          description: The ID of a group or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupVariablesResponse'
      tags:
        - group_level_variables
    post:
      summary: Create variable
      description: Create a new variable.
      operationId: createVariable
      parameters:
        - name: id
          in: path
          description: The ID of a group or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showVariableDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/showVariableDetailsResponse'
      tags:
        - group_level_variables
  '/groups/{id}/variables/{key}':
    get:
      summary: Show variable details
      description: Get the details of a group’s specific variable.
      operationId: showVariableDetails
      parameters:
        - name: id
          in: path
          description: The ID of a group or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showVariableDetailsResponse'
      tags:
        - group_level_variables
    put:
      summary: Update variable
      description: Update a group’s variable.
      operationId: updateVariable
      parameters:
        - name: id
          in: path
          description: The ID of a group or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showVariableDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateVariableRequest'
      tags:
        - group_level_variables
    delete:
      summary: Remove variable
      description: Remove a group’s variable.
      operationId: removeVariable
      parameters:
        - name: id
          in: path
          description: The ID of a group or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - group_level_variables
  '/groups/{id}/milestones':
    get:
      summary: List group milestones
      description: Returns a list of group milestones.
      operationId: listGroupMilestones
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: 'iids[]'
          in: query
          description: 'Return only the milestones having the given iid (Note: ignored if include_parent_milestones is set as true)'
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: Return only active or closed milestones
          required: false
          schema:
            type: string
        - name: title
          in: query
          description: Return only the milestones having the given title
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return only milestones with a title or description matching the provided string
          required: false
          schema:
            type: string
        - name: include_parent_milestones
          in: query
          description: Include milestones from parent group and its ancestors. Introduced in GitLab 13.4
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupMilestonesResponse'
      tags:
        - group_milestones
    post:
      summary: Create new milestone
      description: Creates a new group milestone.
      operationId: createNewMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewMilestoneRequest'
      tags:
        - group_milestones
  '/groups/{id}/milestones/{milestone_id}':
    get:
      summary: Get single milestone
      description: Gets a single group milestone.
      operationId: getSingleMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the group milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - group_milestones
    put:
      summary: Edit milestone
      description: Updates an existing group milestone.
      operationId: editMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of a group milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editMilestoneRequest'
      tags:
        - group_milestones
    delete:
      summary: Delete group milestone
      description: Only for users with the Developer role in the group.
      operationId: deleteGroupMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the group’s milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - group_milestones
  '/groups/{id}/milestones/{milestone_id}/issues':
    get:
      summary: Get all issues assigned to a single milestone
      description: Gets all issues assigned to a single group milestone.
      operationId: getAllIssuesAssignedToASingleMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of a group milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - group_milestones
  '/groups/{id}/milestones/{milestone_id}/merge_requests':
    get:
      summary: Get all merge requests assigned to a single milestone
      description: Gets all merge requests assigned to a single group milestone.
      operationId: getAllMergeRequestsAssignedToASingleMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of a group milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - group_milestones
  '/groups/{id}/milestones/{milestone_id}/burndown_events':
    get:
      summary: Get all burndown chart events for a single milestone
      description: Get all burndown chart events for a single milestone.
      operationId: getAllBurndownChartEventsForASingleMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of a group milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - group_milestones
  '/groups/{id}/releases':
    get:
      summary: List group releases
      description: Returns a list of group releases.
      operationId: listGroupReleases
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: The direction of the order. Either desc (default) for descending order or asc for ascending order.
          required: false
          schema:
            type: string
        - name: simple
          in: query
          description: Return only limited fields for each release.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupReleasesResponse'
      tags:
        - group_releases
  /group_repository_storage_moves:
    get:
      summary: Retrieve all group repository storage moves
      description: 'By default, GET requests return 20 results at a time, because the API results are paginated.'
      operationId: retrieveAllGroupRepositoryStorageMoves
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllGroupRepositoryStorageMovesResponse'
      tags:
        - group_repository_storage_moves
    post:
      summary: Schedule repository storage moves for all groups on a storage shard
      description: Schedules repository storage moves for each group repository stored on the source storage shard.
      operationId: scheduleRepositoryStorageMovesForAllGroupsOnAStorageShard
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduleRepositoryStorageMovesForAllGroupsOnAStorageShardResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleRepositoryStorageMovesForAllGroupsOnAStorageShardRequest'
      tags:
        - group_repository_storage_moves
  '/groups/{group_id}/repository_storage_moves':
    get:
      summary: Retrieve all repository storage moves for a single group
      description: 'To retrieve all the repository storage moves for a single group you can use the following endpoint:'
      operationId: retrieveAllRepositoryStorageMovesForASingleGroup
      parameters:
        - name: group_id
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllGroupRepositoryStorageMovesResponse'
      tags:
        - group_repository_storage_moves
    post:
      summary: Schedule a repository storage move for a group
      description: 'Supported attributes:'
      operationId: scheduleARepositoryStorageMoveForAGroup
      parameters:
        - name: group_id
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleGroupRepositoryStorageMoveResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleARepositoryStorageMoveForAGroupRequest'
      tags:
        - group_repository_storage_moves
  '/group_repository_storage_moves/{repository_storage_id}':
    get:
      summary: Get a single group repository storage move
      description: >-
        To retrieve a single repository storage move throughout all the existing repository storage moves, you can use
        the following endpoint:
      operationId: getASingleGroupRepositoryStorageMove
      parameters:
        - name: repository_storage_id
          in: path
          description: ID of the group repository storage move.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleGroupRepositoryStorageMoveResponse'
      tags:
        - group_repository_storage_moves
  '/groups/{group_id}/repository_storage_moves/{repository_storage_id}':
    get:
      summary: Get a single repository storage move for a group
      description: >-
        Given a group, you can retrieve a specific repository storage move for that group, through the following
        endpoint:
      operationId: getASingleRepositoryStorageMoveForAGroup
      parameters:
        - name: group_id
          in: path
          description: ID of the group.
          required: true
          schema:
            type: integer
        - name: repository_storage_id
          in: path
          description: ID of the group repository storage move.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleGroupRepositoryStorageMoveResponse'
      tags:
        - group_repository_storage_moves
  '/groups/{id}/wikis':
    get:
      summary: List wiki pages
      description: List all wiki pages for a given group.
      operationId: listWikiPages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: with_content
          in: query
          description: Include pages’ content
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listWikiPagesResponse'
      tags:
        - group_wikis
  '/groups/{id}/wikis/{slug}':
    get:
      summary: Get a wiki page
      description: Get a wiki page for a given group.
      operationId: getAWikiPage
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: 'URL-encoded slug (a unique string) of the wiki page, such as dir%2Fpage_name'
          required: true
          schema:
            type: string
        - name: render_html
          in: query
          description: Return the rendered HTML of the wiki page
          required: false
          schema:
            type: string
        - name: version
          in: query
          description: Wiki page version sha
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAWikiPageResponse'
      tags:
        - group_wikis
    put:
      summary: Edit an existing wiki page
      description: Update an existing wiki page. At least one parameter is required to update the wiki page.
      operationId: editAnExistingWikiPage
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: URL encoded slug (a unique string) of the wiki page. Ex. dir%2Fpage_name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAWikiPageResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewWikiPageRequest'
      tags:
        - group_wikis
    delete:
      summary: Delete a wiki page
      description: Delete a wiki page with a given slug.
      operationId: deleteAWikiPage
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: slug
          in: path
          description: 'URL-encoded slug (a unique string) of the wiki page, such as dir%2Fpage_name'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - group_wikis
  '/projects/{id}/wikis':
    post:
      summary: Create a new wiki page
      description: 'Create a new wiki page for the given repository with the given title, slug, and content.'
      operationId: createANewWikiPage
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAWikiPageResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewWikiPageRequest'
      tags:
        - group_wikis
  '/groups/{id}/wikis/attachments':
    post:
      summary: Upload an attachment to the wiki repository
      description: >-
        Upload a file to the attachment folder inside the wiki’s repository. The attachment folder is the uploads
        folder.
      operationId: uploadAnAttachmentToTheWikiRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadAnAttachmentToTheWikiRepositoryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadAnAttachmentToTheWikiRepositoryRequest'
      tags:
        - group_wikis
  /groups:
    get:
      summary: Search for group
      description: Get all groups that match your string in their name or path.
      operationId: searchForGroup
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchForGroupResponse'
      tags:
        - groups
    post:
      summary: New group
      description: Creates a new project group. Available only for users who can create groups.
      operationId: newGroup
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newGroupRequest'
      tags:
        - groups
  '/groups/{id}/subgroups':
    get:
      summary: List a group’s subgroups
      description: >-
        Get a list of visible direct subgroups in this group. When accessed without authentication, only public groups
        are returned.
      operationId: listAGroupSubgroups
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group of the immediate parent group
          required: true
          schema:
            type: string
        - name: skip_groups
          in: query
          description: Skip the group IDs passed
          required: false
          schema:
            type: string
        - name: all_available
          in: query
          description: >-
            Show all the groups you have access to (defaults to false for authenticated users, true for administrators);
            Attributes owned and min_access_level have precedence
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: >-
            Return the list of authorized groups matching the search criteria. Only subgroup short paths are searched
            (not full paths)
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: 'Order groups by name, path or id. Default is name'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Order groups in asc or desc order. Default is asc
          required: false
          schema:
            type: string
        - name: statistics
          in: query
          description: Include group statistics (administrators only)
          required: false
          schema:
            type: string
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response (administrators only)
          required: false
          schema:
            type: string
        - name: owned
          in: query
          description: Limit to groups explicitly owned by the current user
          required: false
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit to groups where current user has at least this access level
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAGroupSubgroupsResponse'
      tags:
        - groups
  '/groups/{id}/descendant_groups':
    get:
      summary: List a group’s descendant groups
      description: >-
        Get a list of visible descendant groups of this group. When accessed without authentication, only public groups
        are returned.
      operationId: listAGroupDescendantGroups
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group of the immediate parent group
          required: true
          schema:
            type: string
        - name: skip_groups
          in: query
          description: Skip the group IDs passed
          required: false
          schema:
            type: string
        - name: all_available
          in: query
          description: >-
            Show all the groups you have access to (defaults to false for authenticated users, true for administrators).
            Attributes owned and min_access_level have precedence
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: >-
            Return the list of authorized groups matching the search criteria. Only descendant group short paths are
            searched (not full paths)
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: 'Order groups by name, path, or id. Default is name'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Order groups in asc or desc order. Default is asc
          required: false
          schema:
            type: string
        - name: statistics
          in: query
          description: Include group statistics (administrators only)
          required: false
          schema:
            type: string
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response (administrators only)
          required: false
          schema:
            type: string
        - name: owned
          in: query
          description: Limit to groups explicitly owned by the current user
          required: false
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit to groups where current user has at least this access level
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAGroupSubgroupsResponse'
      tags:
        - groups
  '/groups/{id}/projects':
    get:
      summary: List a group’s projects
      description: 'Get a list of projects in this group. When accessed without authentication, only public projects are returned.'
      operationId: listAGroupProjects
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: archived
          in: query
          description: Limit by archived status
          required: false
          schema:
            type: string
        - name: visibility
          in: query
          description: 'Limit by visibility public, internal, or private'
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Return projects ordered by id, name, path, created_at, updated_at, similarity (1), or last_activity_at
            fields. Default is created_at
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return projects sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return list of authorized projects matching the search criteria
          required: false
          schema:
            type: string
        - name: simple
          in: query
          description: 'Return only the ID, URL, name, and path of each project'
          required: false
          schema:
            type: string
        - name: owned
          in: query
          description: Limit by projects owned by the current user
          required: false
          schema:
            type: string
        - name: starred
          in: query
          description: Limit by projects starred by the current user
          required: false
          schema:
            type: string
        - name: with_issues_enabled
          in: query
          description: Limit by projects with issues feature enabled. Default is false
          required: false
          schema:
            type: string
        - name: with_merge_requests_enabled
          in: query
          description: Limit by projects with merge requests feature enabled. Default is false
          required: false
          schema:
            type: string
        - name: with_shared
          in: query
          description: Include projects shared to this group. Default is true
          required: false
          schema:
            type: string
        - name: include_subgroups
          in: query
          description: Include projects in subgroups of this group. Default is false
          required: false
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit to projects where current user has at least this access level
          required: false
          schema:
            type: integer
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response (administrators only)
          required: false
          schema:
            type: string
        - name: with_security_reports
          in: query
          description: >-
            Return only projects that have security reports artifacts present in any of their builds. This means
            “projects with security reports enabled”. Default is false
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAGroupProjectsResponse'
      tags:
        - groups
  '/groups/{id}/projects/shared':
    get:
      summary: List a group’s shared projects
      description: >-
        Get a list of projects shared to this group. When accessed without authentication, only public shared projects
        are returned.
      operationId: listAGroupSharedProjects
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: archived
          in: query
          description: Limit by archived status
          required: false
          schema:
            type: string
        - name: visibility
          in: query
          description: 'Limit by visibility public, internal, or private'
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. Default is
            created_at
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return projects sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return list of authorized projects matching the search criteria
          required: false
          schema:
            type: string
        - name: simple
          in: query
          description: 'Return only the ID, URL, name, and path of each project'
          required: false
          schema:
            type: string
        - name: starred
          in: query
          description: Limit by projects starred by the current user
          required: false
          schema:
            type: string
        - name: with_issues_enabled
          in: query
          description: Limit by projects with issues feature enabled. Default is false
          required: false
          schema:
            type: string
        - name: with_merge_requests_enabled
          in: query
          description: Limit by projects with merge requests feature enabled. Default is false
          required: false
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit to projects where current user has at least this access level
          required: false
          schema:
            type: integer
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response (administrators only)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAGroupSharedProjectsResponse'
      tags:
        - groups
  '/groups/{id}':
    get:
      summary: Details of a group
      description: >-
        Get all details of a group. This endpoint can be accessed without authentication if the group is publicly
        accessible. In case the user that requests is an administrator if the group is publicly accessible. With
        authentication, it returns the runners_token for the group too, if the user is an administrator or group owner.
      operationId: detailsOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response (administrators only).
          required: false
          schema:
            type: string
        - name: with_projects
          in: query
          description: >-
            Include details from projects that belong to the specified group (defaults to true). (Deprecated, scheduled
            for removal in API v5. To get the details of all projects within a group, use the list a group’s projects
            endpoint.)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailsOfAGroupResponse'
      tags:
        - groups
    put:
      summary: Update group
      description: Updates the project group. Only available to group owners and administrators.
      operationId: updateGroup
      parameters:
        - name: id
          in: path
          description: The ID of the group.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateGroupResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateGroupRequest'
      tags:
        - groups
    delete:
      summary: Remove group
      description: Only available to group owners and administrators.
      operationId: removeGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/avatar':
    get:
      summary: Download a Group avatar
      description: Get a group avatar. This endpoint can be accessed without authentication if the group is publicly accessible.
      operationId: downloadAGroupAvatar
      parameters:
        - name: id
          in: path
          description: ID of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/projects/{project_id}':
    post:
      summary: Transfer project to group
      description: >-
        Transfer a project to the Group namespace. Available only to instance administrators, although an alternative
        API endpoint is available which does not require administrator access on the instance. Transferring projects may
        fail when tagged packages exist in the project’s repository.
      operationId: transferProjectToGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the target group
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/transfer':
    post:
      summary: Transfer a group to a new parent group / Turn a subgroup to a top-level group
      description: >-
        Transfer a group to a new parent group or turn a subgroup to a top-level group. Available to administrators and
        users:
      operationId: transferAGroupToANewParentGroupTurnASubgroupToATopLevelGroup
      parameters:
        - name: id
          in: path
          description: ID of the group to transfer.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferAGroupToANewParentGroupTurnASubgroupToATopLevelGroupRequest'
      tags:
        - groups
  '/groups/{id}/restore':
    post:
      summary: Restore group marked for deletion
      description: Restores a group marked for deletion.
      operationId: restoreGroupMarkedForDeletion
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/provisioned_users':
    get:
      summary: List provisioned users
      description: Get a list of users provisioned by a given group. Does not include users provisioned by subgroups.
      operationId: listProvisionedUsers
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: username
          in: query
          description: Return single user with a specific username
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: 'Search users by name, email, username'
          required: false
          schema:
            type: string
        - name: active
          in: query
          description: Return only active users
          required: false
          schema:
            type: string
        - name: blocked
          in: query
          description: Return only blocked users
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: Return users created after the specified time
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: Return users created before the specified time
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProvisionedUsersResponse'
      tags:
        - groups
  '/groups/{id}/hooks':
    get:
      summary: List group hooks
      description: Get a list of group hooks
      operationId: listGroupHooks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
    post:
      summary: Add group hook
      description: Adds a hook to a specified group.
      operationId: addGroupHook
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addGroupHookRequest'
      tags:
        - groups
  '/groups/{id}/hooks/{hook_id}':
    get:
      summary: Get group hook
      description: Get a specific hook for a group.
      operationId: getGroupHook
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: hook_id
          in: path
          description: The ID of a group hook
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupHookResponse'
      tags:
        - groups
    put:
      summary: Edit group hook
      description: Edits a hook for a specified group.
      operationId: editGroupHook
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: hook_id
          in: path
          description: The ID of the group hook
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addGroupHookRequest'
      tags:
        - groups
    delete:
      summary: Delete group hook
      description: >-
        Removes a hook from a group. This is an idempotent method and can be called multiple times. Either the hook is
        available or not.
      operationId: deleteGroupHook
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: hook_id
          in: path
          description: The ID of the group hook.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/ldap_sync':
    post:
      summary: Sync group with LDAP
      description: Syncs the group with its linked LDAP group. Only available to group owners and administrators.
      operationId: syncGroupWithLdap
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/ldap_group_links':
    get:
      summary: List LDAP group links
      description: Lists LDAP group links.
      operationId: listLdapGroupLinks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
    post:
      summary: Add LDAP group link with CN or filter
      description: >-
        Adds an LDAP group link using a CN or filter. Adding a group link by filter is only supported in the Premium
        tier and above.
      operationId: addLdapGroupLinkWithCnOrFilter
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addLdapGroupLinkWithCnOrFilterRequest'
      tags:
        - groups
    delete:
      summary: Delete LDAP group link with CN or filter
      description: >-
        Deletes an LDAP group link using a CN or filter. Deleting by filter is only supported in the Premium tier and
        above.
      operationId: deleteLdapGroupLinkWithCnOrFilter
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: cn
          in: query
          description: The CN of an LDAP group
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: The LDAP filter for the group
          required: false
          schema:
            type: string
        - name: provider
          in: query
          description: LDAP provider for the LDAP group link
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/ldap_group_links/{cn}':
    delete:
      summary: Delete LDAP group link
      description: Deletes an LDAP group link. Deprecated. Scheduled for removal in a future release.
      operationId: deleteLdapGroupLink
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: cn
          in: path
          description: The CN of an LDAP group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/share':
    post:
      summary: Create a link to share a group with another group
      description: Share group with another group. Returns 200 and the group details on success.
      operationId: createALinkToShareAGroupWithAnotherGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createALinkToShareAGroupWithAnotherGroupRequest'
      tags:
        - groups
  '/groups/{id}/share/{group_id}':
    delete:
      summary: Delete link sharing group with another group
      description: Unshare the group from another group. Returns 204 and no content on success.
      operationId: deleteLinkSharingGroupWithAnotherGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: group_id
          in: path
          description: The ID of the group to share with
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  '/groups/{id}/push_rule':
    get:
      summary: Get group push rules
      description: Get the push rules of a group.
      operationId: getGroupPushRules
      parameters:
        - name: id
          in: path
          description: The ID of the group or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupPushRulesResponse'
      tags:
        - groups
    post:
      summary: Add group push rule
      description: Adds push rules to the specified group.
      operationId: addGroupPushRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addGroupPushRuleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addGroupPushRuleRequest'
      tags:
        - groups
    put:
      summary: Edit group push rule
      description: Edit push rules for a specified group.
      operationId: editGroupPushRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addGroupPushRuleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addGroupPushRuleRequest'
      tags:
        - groups
    delete:
      summary: Delete group push rule
      description: Deletes the push rules of a group.
      operationId: deleteGroupPushRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - groups
  /import/github:
    post:
      summary: Import repository from GitHub
      description: Import your projects from GitHub to GitLab via the API.
      operationId: importRepositoryFromGithub
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importRepositoryFromGithubResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importRepositoryFromGithubRequest'
      tags:
        - import
  /import/bitbucket_server:
    post:
      summary: Import repository from Bitbucket Server
      description: Import your projects from Bitbucket Server to GitLab via the API.
      operationId: importRepositoryFromBitbucketServer
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importRepositoryFromBitbucketServerRequest'
      tags:
        - import
  /admin/clusters:
    get:
      summary: List instance clusters
      description: Returns a list of instance clusters.
      operationId: listInstanceClusters
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listInstanceClustersResponse'
      tags:
        - instance_clusters
  '/admin/clusters/{cluster_id}':
    get:
      summary: Get a single instance cluster
      description: Returns a single instance cluster.
      operationId: getASingleInstanceCluster
      parameters:
        - name: cluster_id
          in: path
          description: The ID of the cluster
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleInstanceClusterResponse'
      tags:
        - instance_clusters
    put:
      summary: Edit instance cluster
      description: Updates an existing instance cluster.
      operationId: editInstanceCluster
      parameters:
        - name: cluster_id
          in: path
          description: The ID of the cluster
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editInstanceClusterResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editInstanceClusterRequest'
      tags:
        - instance_clusters
    delete:
      summary: Delete instance cluster
      description: >-
        Deletes an existing instance cluster. Does not remove existing resources within the connected Kubernetes
        cluster.
      operationId: deleteInstanceCluster
      parameters:
        - name: cluster_id
          in: path
          description: The ID of the cluster
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - instance_clusters
  /admin/clusters/add:
    post:
      summary: Add existing instance cluster
      description: Adds an existing Kubernetes instance cluster.
      operationId: addExistingInstanceCluster
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleInstanceClusterResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addExistingInstanceClusterRequest'
      tags:
        - instance_clusters
  /admin/ci/variables:
    get:
      summary: List all instance variables
      description: Get the list of all instance-level variables.
      operationId: listAllInstanceVariables
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllInstanceVariablesResponse'
      tags:
        - instance_level_ci_variables
    post:
      summary: Create instance variable
      description: Create a new instance-level variable.
      operationId: createInstanceVariable
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showInstanceVariableDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/showInstanceVariableDetailsResponse'
      tags:
        - instance_level_ci_variables
  '/admin/ci/variables/{key}':
    get:
      summary: Show instance variable details
      description: Get the details of a specific instance-level variable.
      operationId: showInstanceVariableDetails
      parameters:
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showInstanceVariableDetailsResponse'
      tags:
        - instance_level_ci_variables
    put:
      summary: Update instance variable
      description: Update an instance-level variable.
      operationId: updateInstanceVariable
      parameters:
        - name: key
          in: path
          description: The key of a variable.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showInstanceVariableDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateInstanceVariableRequest'
      tags:
        - instance_level_ci_variables
    delete:
      summary: Remove instance variable
      description: Remove an instance-level variable.
      operationId: removeInstanceVariable
      parameters:
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - instance_level_ci_variables
  '/projects/{id}/integrations':
    get:
      summary: List all active integrations
      description: Get a list of all active project integrations.
      operationId: listAllActiveIntegrations
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllActiveIntegrationsResponse'
      tags:
        - integrations
  '/projects/{id}/integrations/asana':
    put:
      summary: Create/Edit Asana integration
      description: Set Asana integration for a project.
      operationId: createEditAsanaIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditAsanaIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Asana integration
      description: Disable the Asana integration for a project. Integration settings are preserved.
      operationId: disableAsanaIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Asana integration settings
      description: Get Asana integration settings for a project.
      operationId: getAsanaIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/assembla':
    put:
      summary: Create/Edit Assembla integration
      description: Set Assembla integration for a project.
      operationId: createEditAssemblaIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditAssemblaIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Assembla integration
      description: Disable the Assembla integration for a project. Integration settings are preserved.
      operationId: disableAssemblaIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Assembla integration settings
      description: Get Assembla integration settings for a project.
      operationId: getAssemblaIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/bamboo':
    put:
      summary: Create/Edit Atlassian Bamboo CI integration
      description: Set Atlassian Bamboo CI integration for a project.
      operationId: createEditAtlassianBambooCiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditAtlassianBambooCiIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Atlassian Bamboo CI integration
      description: Disable the Atlassian Bamboo CI integration for a project. Integration settings are preserved.
      operationId: disableAtlassianBambooCiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Atlassian Bamboo CI integration settings
      description: Get Atlassian Bamboo CI integration settings for a project.
      operationId: getAtlassianBambooCiIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/bugzilla':
    put:
      summary: Create/Edit Bugzilla integration
      description: Set Bugzilla integration for a project.
      operationId: createEditBugzillaIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditBugzillaIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Bugzilla integration
      description: Disable the Bugzilla integration for a project. Integration settings are preserved.
      operationId: disableBugzillaIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Bugzilla integration settings
      description: Get Bugzilla integration settings for a project.
      operationId: getBugzillaIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/buildkite':
    put:
      summary: Create/Edit Buildkite integration
      description: Set Buildkite integration for a project.
      operationId: createEditBuildkiteIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditBuildkiteIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Buildkite integration
      description: Disable the Buildkite integration for a project. Integration settings are preserved.
      operationId: disableBuildkiteIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Buildkite integration settings
      description: Get Buildkite integration settings for a project.
      operationId: getBuildkiteIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/campfire':
    put:
      summary: Create/Edit Campfire integration
      description: Set Campfire integration for a project.
      operationId: createEditCampfireIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditCampfireIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Campfire integration
      description: Disable the Campfire integration for a project. Integration settings are preserved.
      operationId: disableCampfireIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Campfire integration settings
      description: Get Campfire integration settings for a project.
      operationId: getCampfireIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/datadog':
    put:
      summary: Create/Edit Datadog integration
      description: Set Datadog integration for a project.
      operationId: createEditDatadogIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditDatadogIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Datadog integration
      description: Disable the Datadog integration for a project. Integration settings are preserved.
      operationId: disableDatadogIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Datadog integration settings
      description: Get Datadog integration settings for a project.
      operationId: getDatadogIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/unify-circuit':
    put:
      summary: Create/Edit Unify Circuit integration
      description: Set Unify Circuit integration for a project.
      operationId: createEditUnifyCircuitIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditUnifyCircuitIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Unify Circuit integration
      description: Disable the Unify Circuit integration for a project. Integration settings are preserved.
      operationId: disableUnifyCircuitIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Unify Circuit integration settings
      description: Get Unify Circuit integration settings for a project.
      operationId: getUnifyCircuitIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/webex-teams':
    put:
      summary: Create/Edit Webex Teams integration
      description: Set Webex Teams integration for a project.
      operationId: createEditWebexTeamsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditUnifyCircuitIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Webex Teams integration
      description: Disable the Webex Teams integration for a project. Integration settings are preserved.
      operationId: disableWebexTeamsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Webex Teams integration settings
      description: Get Webex Teams integration settings for a project.
      operationId: getWebexTeamsIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/custom-issue-tracker':
    put:
      summary: Create/Edit Custom Issue Tracker integration
      description: Set Custom Issue Tracker integration for a project.
      operationId: createEditCustomIssueTrackerIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditBugzillaIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Custom Issue Tracker integration
      description: Disable the Custom Issue Tracker integration for a project. Integration settings are preserved.
      operationId: disableCustomIssueTrackerIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Custom Issue Tracker integration settings
      description: Get Custom Issue Tracker integration settings for a project.
      operationId: getCustomIssueTrackerIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/discord':
    put:
      summary: Create/Edit Discord integration
      description: Set Discord integration for a project.
      operationId: createEditDiscordIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditDiscordIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Discord integration
      description: Disable the Discord integration for a project. Integration settings are preserved.
      operationId: disableDiscordIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Discord integration settings
      description: Get Discord integration settings for a project.
      operationId: getDiscordIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/drone-ci':
    put:
      summary: Create/Edit Drone CI integration
      description: Set Drone CI integration for a project.
      operationId: createEditDroneCiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditDroneCiIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Drone CI integration
      description: Disable the Drone CI integration for a project. Integration settings are preserved.
      operationId: disableDroneCiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Drone CI integration settings
      description: Get Drone CI integration settings for a project.
      operationId: getDroneCiIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/emails-on-push':
    put:
      summary: Create/Edit Emails on Push integration
      description: Set Emails on Push integration for a project.
      operationId: createEditEmailsOnPushIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditEmailsOnPushIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Emails on Push integration
      description: Disable the Emails on Push integration for a project. Integration settings are preserved.
      operationId: disableEmailsOnPushIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Emails on Push integration settings
      description: Get Emails on Push integration settings for a project.
      operationId: getEmailsOnPushIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/ewm':
    put:
      summary: Create/Edit EWM integration
      description: Set EWM integration for a project.
      operationId: createEditEwmIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditBugzillaIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable EWM integration
      description: Disable the EWM integration for a project. Integration settings are preserved.
      operationId: disableEwmIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get EWM integration settings
      description: Get EWM integration settings for a project.
      operationId: getEwmIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/confluence':
    put:
      summary: Create/Edit Confluence integration
      description: Set Confluence integration for a project.
      operationId: createEditConfluenceIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditConfluenceIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Confluence integration
      description: Disable the Confluence integration for a project. Integration settings are preserved.
      operationId: disableConfluenceIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Confluence integration settings
      description: Get Confluence integration settings for a project.
      operationId: getConfluenceIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/external-wiki':
    put:
      summary: Create/Edit External wiki integration
      description: Set External wiki integration for a project.
      operationId: createEditExternalWikiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditExternalWikiIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable External wiki integration
      description: Disable the External wiki integration for a project. Integration settings are preserved.
      operationId: disableExternalWikiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get External wiki integration settings
      description: Get External wiki integration settings for a project.
      operationId: getExternalWikiIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/flowdock':
    put:
      summary: Create/Edit Flowdock integration
      description: Set Flowdock integration for a project.
      operationId: createEditFlowdockIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditFlowdockIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Flowdock integration
      description: Disable the Flowdock integration for a project. Integration settings are preserved.
      operationId: disableFlowdockIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Flowdock integration settings
      description: Get Flowdock integration settings for a project.
      operationId: getFlowdockIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/github':
    put:
      summary: Create/Edit GitHub integration
      description: Set GitHub integration for a project.
      operationId: createEditGithubIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditGithubIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable GitHub integration
      description: Disable the GitHub integration for a project. Integration settings are preserved.
      operationId: disableGithubIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get GitHub integration settings
      description: Get GitHub integration settings for a project.
      operationId: getGithubIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/hangouts-chat':
    put:
      summary: Create/Edit Hangouts Chat integration
      description: Set Hangouts Chat integration for a project.
      operationId: createEditHangoutsChatIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditHangoutsChatIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Hangouts Chat integration
      description: Disable the Hangouts Chat integration for a project. Integration settings are preserved.
      operationId: disableHangoutsChatIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Hangouts Chat integration settings
      description: Get Hangouts Chat integration settings for a project.
      operationId: getHangoutsChatIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/irker':
    put:
      summary: Create/Edit Irker (IRC gateway) integration
      description: Set Irker (IRC gateway) integration for a project.
      operationId: createEditIrkerIrcGatewayIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditIrkerIrcGatewayIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Irker (IRC gateway) integration
      description: Disable the Irker (IRC gateway) integration for a project. Integration settings are preserved.
      operationId: disableIrkerIrcGatewayIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Irker (IRC gateway) integration settings
      description: Get Irker (IRC gateway) integration settings for a project.
      operationId: getIrkerIrcGatewayIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/jira':
    get:
      summary: Get Jira integration settings
      description: Get Jira integration settings for a project.
      operationId: getJiraIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    put:
      summary: Create/Edit Jira integration
      description: Set Jira integration for a project.
      operationId: createEditJiraIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditJiraIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Jira integration
      description: Disable the Jira integration for a project. Integration settings are preserved.
      operationId: disableJiraIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/slack-slash-commands':
    get:
      summary: Get Slack Slash Command integration settings
      description: Get Slack Slash Command integration settings for a project.
      operationId: getSlackSlashCommandIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSlackSlashCommandIntegrationSettingsResponse'
      tags:
        - integrations
    put:
      summary: Create/Edit Slack Slash Commands integration
      description: Set Slack Slash Command for a project.
      operationId: createEditSlackSlashCommandsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditFlowdockIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Slack Slash Command integration
      description: Disable the Slack Slash Command integration for a project. Integration settings are preserved.
      operationId: disableSlackSlashCommandIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/mattermost-slash-commands':
    get:
      summary: Get Mattermost Slash Command integration settings
      description: Get Mattermost Slash Command integration settings for a project.
      operationId: getMattermostSlashCommandIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    put:
      summary: Create/Edit Mattermost Slash Command integration
      description: Set Mattermost Slash Command for a project.
      operationId: createEditMattermostSlashCommandIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditMattermostSlashCommandIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Mattermost Slash Command integration
      description: Disable the Mattermost Slash Command integration for a project. Integration settings are preserved.
      operationId: disableMattermostSlashCommandIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/packagist':
    put:
      summary: Create/Edit Packagist integration
      description: Set Packagist integration for a project.
      operationId: createEditPackagistIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditPackagistIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Packagist integration
      description: Disable the Packagist integration for a project. Integration settings are preserved.
      operationId: disablePackagistIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Packagist integration settings
      description: Get Packagist integration settings for a project.
      operationId: getPackagistIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/pipelines-email':
    put:
      summary: Create/Edit Pipeline-Emails integration
      description: Set Pipeline-Emails integration for a project.
      operationId: createEditPipelineEmailsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditPipelineEmailsIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Pipeline-Emails integration
      description: Disable the Pipeline-Emails integration for a project. Integration settings are preserved.
      operationId: disablePipelineEmailsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Pipeline-Emails integration settings
      description: Get Pipeline-Emails integration settings for a project.
      operationId: getPipelineEmailsIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/pivotaltracker':
    put:
      summary: Create/Edit Pivotal Tracker integration
      description: Set Pivotal Tracker integration for a project.
      operationId: createEditPivotalTrackerIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditPivotalTrackerIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Pivotal Tracker integration
      description: Disable the Pivotal Tracker integration for a project. Integration settings are preserved.
      operationId: disablePivotalTrackerIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Pivotal Tracker integration settings
      description: Get Pivotal Tracker integration settings for a project.
      operationId: getPivotalTrackerIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/prometheus':
    put:
      summary: Create/Edit Prometheus integration
      description: Set Prometheus integration for a project.
      operationId: createEditPrometheusIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditPrometheusIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Prometheus integration
      description: Disable the Prometheus integration for a project. Integration settings are preserved.
      operationId: disablePrometheusIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Prometheus integration settings
      description: Get Prometheus integration settings for a project.
      operationId: getPrometheusIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/pushover':
    put:
      summary: Create/Edit Pushover integration
      description: Set Pushover integration for a project.
      operationId: createEditPushoverIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditPushoverIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Pushover integration
      description: Disable the Pushover integration for a project. Integration settings are preserved.
      operationId: disablePushoverIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Pushover integration settings
      description: Get Pushover integration settings for a project.
      operationId: getPushoverIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/redmine':
    put:
      summary: Create/Edit Redmine integration
      description: Set Redmine integration for a project.
      operationId: createEditRedmineIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditBugzillaIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Redmine integration
      description: Disable the Redmine integration for a project. Integration settings are preserved.
      operationId: disableRedmineIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Redmine integration settings
      description: Get Redmine integration settings for a project.
      operationId: getRedmineIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/slack':
    put:
      summary: Create/Edit Slack integration
      description: Set Slack integration for a project.
      operationId: createEditSlackIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditSlackIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Slack integration
      description: Disable the Slack integration for a project. Integration settings are preserved.
      operationId: disableSlackIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Slack integration settings
      description: Get Slack integration settings for a project.
      operationId: getSlackIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/microsoft-teams':
    put:
      summary: Create/Edit Microsoft Teams integration
      description: Set Microsoft Teams integration for a project.
      operationId: createEditMicrosoftTeamsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditHangoutsChatIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Microsoft Teams integration
      description: Disable the Microsoft Teams integration for a project. Integration settings are preserved.
      operationId: disableMicrosoftTeamsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Microsoft Teams integration settings
      description: Get Microsoft Teams integration settings for a project.
      operationId: getMicrosoftTeamsIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/mattermost':
    put:
      summary: Create/Edit Mattermost notifications integration
      description: Set Mattermost notifications integration for a project.
      operationId: createEditMattermostNotificationsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditMattermostNotificationsIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Mattermost notifications integration
      description: Disable the Mattermost notifications integration for a project. Integration settings are preserved.
      operationId: disableMattermostNotificationsIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Mattermost notifications integration settings
      description: Get Mattermost notifications integration settings for a project.
      operationId: getMattermostNotificationsIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/teamcity':
    put:
      summary: Create/Edit JetBrains TeamCity CI integration
      description: Set JetBrains TeamCity CI integration for a project.
      operationId: createEditJetbrainsTeamcityCiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditJetbrainsTeamcityCiIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable JetBrains TeamCity CI integration
      description: Disable the JetBrains TeamCity CI integration for a project. Integration settings are preserved.
      operationId: disableJetbrainsTeamcityCiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get JetBrains TeamCity CI integration settings
      description: Get JetBrains TeamCity CI integration settings for a project.
      operationId: getJetbrainsTeamcityCiIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/jenkins':
    put:
      summary: Create/Edit Jenkins CI integration
      description: Set Jenkins CI integration for a project.
      operationId: createEditJenkinsCiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditJenkinsCiIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable Jenkins CI integration
      description: Disable the Jenkins CI integration for a project. Integration settings are preserved.
      operationId: disableJenkinsCiIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Jenkins CI integration settings
      description: Get Jenkins CI integration settings for a project.
      operationId: getJenkinsCiIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/jenkins-deprecated':
    put:
      summary: Create/Edit Jenkins CI (Deprecated) integration
      description: Set Jenkins CI (Deprecated) integration for a project.
      operationId: createEditJenkinsCiDeprecatedIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    delete:
      summary: Disable Jenkins CI (Deprecated) integration
      description: Disable the Jenkins CI (Deprecated) integration for a project. Integration settings are preserved.
      operationId: disableJenkinsCiDeprecatedIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get Jenkins CI (Deprecated) integration settings
      description: Get Jenkins CI (Deprecated) integration settings for a project.
      operationId: getJenkinsCiDeprecatedIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/mock-ci':
    put:
      summary: Create/Edit MockCI integration
      description: Set MockCI integration for a project.
      operationId: createEditMockciIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditMockciIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable MockCI integration
      description: Disable the MockCI integration for a project. Integration settings are preserved.
      operationId: disableMockciIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get MockCI integration settings
      description: Get MockCI integration settings for a project.
      operationId: getMockciIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/projects/{id}/integrations/youtrack':
    put:
      summary: Create/Edit YouTrack integration
      description: Set YouTrack integration for a project.
      operationId: createEditYoutrackIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEditYoutrackIntegrationRequest'
      tags:
        - integrations
    delete:
      summary: Disable YouTrack integration
      description: Disable the YouTrack integration for a project. Integration settings are preserved.
      operationId: disableYoutrackIntegration
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
    get:
      summary: Get YouTrack integration settings
      description: Get YouTrack integration settings for a project.
      operationId: getYoutrackIntegrationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - integrations
  '/groups/{id}/invitations':
    post:
      summary: Add a member to a group or project
      description: Adds a new member. You can specify a user ID or invite a user by email.
      operationId: addAMemberToAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAMemberToAGroupOrProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAMemberToAGroupOrProjectRequest'
      tags:
        - invitations
    get:
      summary: List all invitations pending for a group or project
      description: >-
        Gets a list of invited group or project members viewable by the authenticated user. Returns invitations to
        direct members only, and not through inherited ancestors’ groups.
      operationId: listAllInvitationsPendingForAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page to retrieve
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of member invitations to return per page
          required: false
          schema:
            type: integer
        - name: query
          in: query
          description: >-
            A query string to search for invited members by invite email. Query text must match email address exactly.
            When empty, returns all invitations.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllInvitationsPendingForAGroupOrProjectResponse'
      tags:
        - invitations
  '/groups/{id}/invitations/{email}':
    put:
      summary: Update an invitation to a group or project
      description: Updates a pending invitation’s access level or access expiry date.
      operationId: updateAnInvitationToAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: The email address to which the invitation was previously sent.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateAnInvitationToAGroupOrProjectRequest'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAnInvitationToAGroupOrProjectRequest'
      tags:
        - invitations
    delete:
      summary: Delete an invitation to a group or project
      description: Deletes a pending invitation by email address.
      operationId: deleteAnInvitationToAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: email
          in: path
          description: The email address to which the invitation was previously sent
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - invitations
  '/projects/{id}/issues/{issue_iid}/links':
    get:
      summary: List issue relations
      description: >-
        Get a list of a given issue’s linked issues, sorted by the relationship creation datetime (ascending). Issues
        are filtered according to the user authorizations.
      operationId: listIssueRelations
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIssueRelationsResponse'
      tags:
        - issue_links
    post:
      summary: Create an issue link
      description: Creates a two-way relation between two issues. The user must be allowed to update both issues to succeed.
      operationId: createAnIssueLink
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAnIssueLinkResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnIssueLinkRequest'
      tags:
        - issue_links
  '/projects/{id}/issues/{issue_iid}/links/{issue_link_id}':
    delete:
      summary: Delete an issue link
      description: 'Deletes an issue link, thus removes the two-way relationship.'
      operationId: deleteAnIssueLink
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
        - name: issue_link_id
          in: path
          description: The ID of an issue relationship
          required: true
          schema:
            type: string
        - name: link_type
          in: query
          description: 'The type of the relation (relates_to, blocks, is_blocked_by), defaults to relates_to'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAnIssueLinkResponse'
      tags:
        - issue_links
  /issues:
    get:
      summary: List issues
      description: >-
        Get all issues the authenticated user has access to. By default it returns only issues created by the current
        user. To get all issues, use parameter scope=all.
      operationId: listIssues
      parameters:
        - name: assignee_id
          in: query
          description: >-
            Return issues assigned to the given user id. Mutually exclusive with assignee_username. None returns
            unassigned issues. Any returns issues with an assignee.
          required: false
          schema:
            type: integer
        - name: assignee_username
          in: query
          description: >-
            Return issues assigned to the given username. Similar to assignee_id and mutually exclusive with
            assignee_id. In GitLab CE, the assignee_username array should only contain a single value. Otherwise, an
            invalid parameter error is returned.
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: >-
            Return issues created by the given user id. Mutually exclusive with author_username. Combine with scope=all
            or scope=assigned_to_me.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: Return issues created by the given username. Similar to author_id and mutually exclusive with author_id.
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter confidential or public issues.
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return issues created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return issues created on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: due_date
          in: query
          description: >-
            Return issues that have no due date, are overdue, or whose due date is this week, this month, or between two
            weeks ago and next month. Accepts: 0 (no due date), any, today, tomorrow, overdue, week, month,
            next_month_and_previous_two_weeks.
          required: false
          schema:
            type: string
        - name: epic_id
          in: query
          description: >-
            Return issues associated with the given epic ID. None returns issues that are not associated with an epic.
            Any returns issues that are associated with an epic. (Introduced in GitLab 13.6)
          required: false
          schema:
            type: integer
        - name: 'iids[]'
          in: query
          description: Return only the issues having the given iid
          required: false
          schema:
            type: string
        - name: in
          in: query
          description: >-
            Modify the scope of the search attribute. title, description, or a string joining them with comma. Default
            is title,description
          required: false
          schema:
            type: string
        - name: issue_type
          in: query
          description: 'Filter to a given type of issue. One of issue, incident, or test_case. (Introduced in GitLab 13.12)'
          required: false
          schema:
            type: string
        - name: iteration_id
          in: query
          description: >-
            Return issues assigned to the given iteration ID. None returns issues that do not belong to an iteration.
            Any returns issues that belong to an iteration. Mutually exclusive with iteration_title. (Introduced in
            GitLab 13.6)
          required: false
          schema:
            type: integer
        - name: iteration_title
          in: query
          description: >-
            Return issues assigned to the iteration with the given title. Similar to iteration_id and mutually exclusive
            with iteration_id. (Introduced in GitLab 13.6)
          required: false
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Comma-separated list of label names, issues must have all labels to be returned. None lists all issues with
            no labels. Any lists all issues with at least one label. No+Label (Deprecated) lists all issues with no
            labels. Predefined names are case-insensitive.
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            The milestone title. None lists all issues with no milestone. Any lists all issues that have an assigned
            milestone. Using None or Any will be deprecated in the future. Please use milestone_id attribute instead.
            milestone and milestone_id are mutually exclusive.
          required: false
          schema:
            type: string
        - name: milestone_id
          in: query
          description: >-
            Returns issues assigned to milestones with a given timebox value (None, Any, Upcoming, and Started). None
            lists all issues with no milestone. Any lists all issues that have an assigned milestone. Upcoming lists all
            issues assigned to milestones due in the future. Started lists all issues assigned to open, started
            milestones. milestone and milestone_id are mutually exclusive. (Introduced in GitLab 14.3)
          required: false
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: >-
            Return issues reacted by the authenticated user by the given emoji. None returns issues not given a
            reaction. Any returns issues given at least one reaction.
          required: false
          schema:
            type: string
        - name: non_archived
          in: query
          description: >-
            Return issues only from non-archived projects. If false, the response returns issues from both archived and
            non-archived projects. Default is true. (Introduced in GitLab 13.0)
          required: false
          schema:
            type: string
        - name: not
          in: query
          description: >-
            Return issues that do not match the parameters supplied. Accepts: assignee_id, assignee_username, author_id,
            author_username, iids, iteration_id, iteration_title, labels, milestone, milestone_id and weight.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Return issues ordered by created_at, due_date, label_priority, milestone_due, popularity, priority,
            relative_position, title, updated_at, or weight fields. Default is created_at.
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return issues for the given scope: created_by_me, assigned_to_me or all. Defaults to created_by_me.'
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search issues against their title and description
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return issues sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: Return all issues or just those that are opened or closed
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return issues updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return issues updated on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: weight
          in: query
          description: >-
            Return issues with the specified weight. None returns issues with no weight assigned. Any returns issues
            with a weight assigned.
          required: false
          schema:
            type: integer
        - name: with_labels_details
          in: query
          description: >-
            If true, the response returns more details for each label in labels field: :name, :color, :description,
            :description_html, :text_color. Default is false. The description_html attribute was introduced in GitLab
            12.7
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIssuesResponse'
      tags:
        - issues
  '/groups/{id}/issues':
    get:
      summary: List group issues
      description: Get a list of a group’s issues.
      operationId: listGroupIssues
      parameters:
        - name: assignee_id
          in: query
          description: >-
            Return issues assigned to the given user id. Mutually exclusive with assignee_username. None returns
            unassigned issues. Any returns issues with an assignee.
          required: false
          schema:
            type: integer
        - name: assignee_username
          in: query
          description: >-
            Return issues assigned to the given username. Similar to assignee_id and mutually exclusive with
            assignee_id. In GitLab CE, the assignee_username array should only contain a single value. Otherwise, an
            invalid parameter error is returned.
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: >-
            Return issues created by the given user id. Mutually exclusive with author_username. Combine with scope=all
            or scope=assigned_to_me.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: Return issues created by the given username. Similar to author_id and mutually exclusive with author_id.
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter confidential or public issues.
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return issues created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return issues created on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: due_date
          in: query
          description: >-
            Return issues that have no due date, are overdue, or whose due date is this week, this month, or between two
            weeks ago and next month. Accepts: 0 (no due date), any, today, tomorrow, overdue, week, month,
            next_month_and_previous_two_weeks.
          required: false
          schema:
            type: string
        - name: epic_id
          in: query
          description: >-
            Return issues associated with the given epic ID. None returns issues that are not associated with an epic.
            Any returns issues that are associated with an epic. (Introduced in GitLab 13.6)
          required: false
          schema:
            type: integer
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: 'iids[]'
          in: query
          description: Return only the issues having the given iid
          required: false
          schema:
            type: string
        - name: issue_type
          in: query
          description: 'Filter to a given type of issue. One of issue, incident, or test_case. (Introduced in GitLab 13.12)'
          required: false
          schema:
            type: string
        - name: iteration_id
          in: query
          description: >-
            Return issues assigned to the given iteration ID. None returns issues that do not belong to an iteration.
            Any returns issues that belong to an iteration. Mutually exclusive with iteration_title. (Introduced in
            GitLab 13.6)
          required: false
          schema:
            type: integer
        - name: iteration_title
          in: query
          description: >-
            Return issues assigned to the iteration with the given title. Similar to iteration_id and mutually exclusive
            with iteration_id. (Introduced in GitLab 13.6)
          required: false
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Comma-separated list of label names, issues must have all labels to be returned. None lists all issues with
            no labels. Any lists all issues with at least one label. No+Label (Deprecated) lists all issues with no
            labels. Predefined names are case-insensitive.
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            The milestone title. None lists all issues with no milestone. Any lists all issues that have an assigned
            milestone.
          required: false
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: >-
            Return issues reacted by the authenticated user by the given emoji. None returns issues not given a
            reaction. Any returns issues given at least one reaction.
          required: false
          schema:
            type: string
        - name: non_archived
          in: query
          description: Return issues from non archived projects. Default is true. (Introduced in GitLab 12.8)
          required: false
          schema:
            type: string
        - name: not
          in: query
          description: >-
            Return issues that do not match the parameters supplied. Accepts: labels, milestone, author_id,
            author_username, assignee_id, assignee_username, my_reaction_emoji, search, in
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Return issues ordered by created_at, updated_at, priority, due_date, relative_position, label_priority,
            milestone_due, popularity, weight fields. Default is created_at
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return issues for the given scope: created_by_me, assigned_to_me or all. Defaults to all.'
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search group issues against their title and description
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return issues sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: Return all issues or just those that are opened or closed
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return issues updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return issues updated on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: weight
          in: query
          description: >-
            Return issues with the specified weight. None returns issues with no weight assigned. Any returns issues
            with a weight assigned.
          required: false
          schema:
            type: integer
        - name: with_labels_details
          in: query
          description: >-
            If true, the response returns more details for each label in labels field: :name, :color, :description,
            :description_html, :text_color. Default is false. The description_html attribute was introduced in GitLab
            12.7
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupIssuesResponse'
      tags:
        - issues
  '/projects/{id}/issues':
    get:
      summary: List project issues
      description: Get a list of a project’s issues.
      operationId: listProjectIssues
      parameters:
        - name: assignee_id
          in: query
          description: >-
            Return issues assigned to the given user id. Mutually exclusive with assignee_username. None returns
            unassigned issues. Any returns issues with an assignee.
          required: false
          schema:
            type: integer
        - name: assignee_username
          in: query
          description: >-
            Return issues assigned to the given username. Similar to assignee_id and mutually exclusive with
            assignee_id. In GitLab CE, the assignee_username array should only contain a single value. Otherwise, an
            invalid parameter error is returned.
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: >-
            Return issues created by the given user id. Mutually exclusive with author_username. Combine with scope=all
            or scope=assigned_to_me.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: Return issues created by the given username. Similar to author_id and mutually exclusive with author_id.
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter confidential or public issues.
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return issues created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return issues created on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: due_date
          in: query
          description: >-
            Return issues that have no due date, are overdue, or whose due date is this week, this month, or between two
            weeks ago and next month. Accepts: 0 (no due date), any, today, tomorrow, overdue, week, month,
            next_month_and_previous_two_weeks.
          required: false
          schema:
            type: string
        - name: epic_id
          in: query
          description: >-
            Return issues associated with the given epic ID. None returns issues that are not associated with an epic.
            Any returns issues that are associated with an epic. (Introduced in GitLab 13.6)
          required: false
          schema:
            type: integer
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: 'iids[]'
          in: query
          description: Return only the issues having the given iid
          required: false
          schema:
            type: string
        - name: issue_type
          in: query
          description: 'Filter to a given type of issue. One of issue, incident, or test_case. (Introduced in GitLab 13.12)'
          required: false
          schema:
            type: string
        - name: iteration_id
          in: query
          description: >-
            Return issues assigned to the given iteration ID. None returns issues that do not belong to an iteration.
            Any returns issues that belong to an iteration. Mutually exclusive with iteration_title. (Introduced in
            GitLab 13.6)
          required: false
          schema:
            type: integer
        - name: iteration_title
          in: query
          description: >-
            Return issues assigned to the iteration with the given title. Similar to iteration_id and mutually exclusive
            with iteration_id. (Introduced in GitLab 13.6)
          required: false
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Comma-separated list of label names, issues must have all labels to be returned. None lists all issues with
            no labels. Any lists all issues with at least one label. No+Label (Deprecated) lists all issues with no
            labels. Predefined names are case-insensitive.
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            The milestone title. None lists all issues with no milestone. Any lists all issues that have an assigned
            milestone.
          required: false
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: >-
            Return issues reacted by the authenticated user by the given emoji. None returns issues not given a
            reaction. Any returns issues given at least one reaction.
          required: false
          schema:
            type: string
        - name: not
          in: query
          description: >-
            Return issues that do not match the parameters supplied. Accepts: labels, milestone, author_id,
            author_username, assignee_id, assignee_username, my_reaction_emoji, search, in
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Return issues ordered by created_at, updated_at, priority, due_date, relative_position, label_priority,
            milestone_due, popularity, weight fields. Default is created_at
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return issues for the given scope: created_by_me, assigned_to_me or all. Defaults to all.'
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search project issues against their title and description
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return issues sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: Return all issues or just those that are opened or closed
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return issues updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return issues updated on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: weight
          in: query
          description: >-
            Return issues with the specified weight. None returns issues with no weight assigned. Any returns issues
            with a weight assigned.
          required: false
          schema:
            type: integer
        - name: with_labels_details
          in: query
          description: >-
            If true, the response returns more details for each label in labels field: :name, :color, :description,
            :description_html, :text_color. Default is false. description_html was introduced in GitLab 12.7
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listGroupIssuesResponse'
      tags:
        - issues
    post:
      summary: New issue
      description: Creates a new project issue.
      operationId: newIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleProjectIssueResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newIssueRequest'
      tags:
        - issues
  '/issues/{id}':
    get:
      summary: Single issue
      description: Only for administrators. Get a single issue.
      operationId: singleIssue
      parameters:
        - name: id
          in: path
          description: The ID of the issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleIssueResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}':
    get:
      summary: Single project issue
      description: Get a single project issue.
      operationId: singleProjectIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleProjectIssueResponse'
      tags:
        - issues
    put:
      summary: Edit issue
      description: Updates an existing project issue. This call is also used to mark an issue as closed.
      operationId: editIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editIssueResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editIssueRequest'
      tags:
        - issues
    delete:
      summary: Delete an issue
      description: Only for administrators and project owners. Deletes an issue.
      operationId: deleteAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/reorder':
    put:
      summary: Reorder an issue
      description: 'Reorders an issue, you can see the results when sorting issues manually'
      operationId: reorderAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of the project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reorderAnIssueRequest'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/move':
    post:
      summary: Move an issue
      description: >-
        Moves an issue to a different project. If the target project is the source project or the user has insufficient
        permissions, an error message with status code 400 is returned.
      operationId: moveAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/moveAnIssueResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moveAnIssueRequest'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/clone':
    post:
      summary: Clone an issue
      description: >-
        Clone the issue to given project. If the user has insufficient permissions, an error message with status code
        400 is returned.
      operationId: cloneAnIssue
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: Internal ID of a project’s issue.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloneAnIssueResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloneAnIssueRequest'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/subscribe':
    post:
      summary: Subscribe to an issue
      description: >-
        Subscribes the authenticated user to an issue to receive notifications. If the user is already subscribed to the
        issue, the status code 304 is returned.
      operationId: subscribeToAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/moveAnIssueResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/unsubscribe':
    post:
      summary: Unsubscribe from an issue
      description: >-
        Unsubscribes the authenticated user from the issue to not receive notifications from it. If the user is not
        subscribed to the issue, the status code 304 is returned.
      operationId: unsubscribeFromAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unsubscribeFromAnIssueResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/todo':
    post:
      summary: Create a to-do item
      description: >-
        Manually creates a to-do item for the current user on an issue. If there already exists a to-do item for the
        user on that issue, status code 304 is returned.
      operationId: createAToDoItem
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAToDoItemResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/notes':
    get:
      summary: List project issue notes
      description: Gets a list of all notes for a single issue.
      operationId: listProjectIssueNotes
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
        - name: sort
          in: query
          description: Return issue notes sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Return issue notes ordered by created_at or updated_at fields. Default is created_at
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueNotesResponse'
      tags:
        - notes
    post:
      summary: Create new issue note
      description: Creates a new note to a single project issue.
      operationId: createNewIssueNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewIssueNoteRequest'
      tags:
        - notes
  '/projects/{id}/issues/{issue_iid}/time_estimate':
    post:
      summary: Set a time estimate for an issue
      description: Sets an estimated time of work for this issue.
      operationId: setATimeEstimateForAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAnIssueResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setATimeEstimateForAnIssueRequest'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/reset_time_estimate':
    post:
      summary: Reset the time estimate for an issue
      description: Resets the estimated time for this issue to 0 seconds.
      operationId: resetTheTimeEstimateForAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAnIssueResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/add_spent_time':
    post:
      summary: Add spent time for an issue
      description: Adds spent time for this issue
      operationId: addSpentTimeForAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAnIssueResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addSpentTimeForAnIssueRequest'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/reset_spent_time':
    post:
      summary: Reset spent time for an issue
      description: Resets the total spent time for this issue to 0 seconds.
      operationId: resetSpentTimeForAnIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAnIssueResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/time_stats':
    get:
      summary: Get time tracking stats
      description: >-
        If the project is private or the issue is confidential, you need to provide credentials to authorize. The
        preferred way to do this, is by using personal access tokens.
      operationId: getTimeTrackingStats
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAnIssueResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/related_merge_requests':
    get:
      summary: List merge requests related to issue
      description: Get all the merge requests that are related to the issue.
      operationId: listMergeRequestsRelatedToIssue
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMergeRequestsRelatedToIssueResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/closed_by':
    get:
      summary: List merge requests that close a particular issue on merge
      description: Get all merge requests that close a particular issue when merged.
      operationId: listMergeRequestsThatCloseAParticularIssueOnMerge
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMergeRequestsThatCloseAParticularIssueOnMergeResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/participants':
    get:
      summary: Participants on issues
      description: >-
        If the project is private or the issue is confidential, you need to provide credentials to authorize. The
        preferred way to do this, is by using personal access tokens.
      operationId: participantsOnIssues
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/participantsOnIssuesResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/user_agent_detail':
    get:
      summary: Get user agent details
      description: Available only for administrators.
      operationId: getUserAgentDetails
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserAgentDetailsResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/metric_images':
    post:
      summary: Upload metric image
      description: Available only for Incident issues.
      operationId: uploadMetricImage
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadMetricImageResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadMetricImageRequest'
      tags:
        - issues
    get:
      summary: List metric images
      description: Available only for Incident issues.
      operationId: listMetricImages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMetricImagesResponse'
      tags:
        - issues
  '/projects/{id}/issues/{issue_iid}/metric_images/{image_id}':
    put:
      summary: Update metric image
      description: Available only for Incident issues.
      operationId: updateMetricImage
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
        - name: image_id
          in: path
          description: The ID of the image
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadMetricImageResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateMetricImageRequest'
      tags:
        - issues
    delete:
      summary: Delete metric image
      description: Available only for Incident issues.
      operationId: deleteMetricImage
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The internal ID of a project’s issue
          required: true
          schema:
            type: integer
        - name: image_id
          in: path
          description: The ID of the image
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - issues
  /issues_statistics:
    get:
      summary: Get issues statistics
      description: >-
        Gets issues count statistics on all issues the authenticated user has access to. By default it returns only
        issues created by the current user. To get all issues, use parameter scope=all.
      operationId: getIssuesStatistics
      parameters:
        - name: labels
          in: query
          description: >-
            Comma-separated list of label names, issues must have all labels to be returned. None lists all issues with
            no labels. Any lists all issues with at least one label.
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            The milestone title. None lists all issues with no milestone. Any lists all issues that have an assigned
            milestone.
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return issues for the given scope: created_by_me, assigned_to_me or all. Defaults to created_by_me'
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: >-
            Return issues created by the given user id. Mutually exclusive with author_username. Combine with scope=all
            or scope=assigned_to_me.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: Return issues created by the given username. Similar to author_id and mutually exclusive with author_id.
          required: false
          schema:
            type: string
        - name: assignee_id
          in: query
          description: >-
            Return issues assigned to the given user id. Mutually exclusive with assignee_username. None returns
            unassigned issues. Any returns issues with an assignee.
          required: false
          schema:
            type: integer
        - name: assignee_username
          in: query
          description: >-
            Return issues assigned to the given username. Similar to assignee_id and mutually exclusive with
            assignee_id. In GitLab CE assignee_username array should only contain a single value or an invalid parameter
            error is returned otherwise.
          required: false
          schema:
            type: string
        - name: epic_id
          in: query
          description: >-
            Return issues associated with the given epic ID. None returns issues that are not associated with an epic.
            Any returns issues that are associated with an epic. (Introduced in GitLab 13.6)
          required: false
          schema:
            type: integer
        - name: my_reaction_emoji
          in: query
          description: >-
            Return issues reacted by the authenticated user by the given emoji. None returns issues not given a
            reaction. Any returns issues given at least one reaction.
          required: false
          schema:
            type: string
        - name: 'iids[]'
          in: query
          description: Return only the issues having the given iid
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search issues against their title and description
          required: false
          schema:
            type: string
        - name: in
          in: query
          description: >-
            Modify the scope of the search attribute. title, description, or a string joining them with comma. Default
            is title,description
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return issues created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return issues created on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return issues updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return issues updated on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter confidential or public issues.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getIssuesStatisticsResponse'
      tags:
        - issues_statistics
  '/groups/{id}/issues_statistics':
    get:
      summary: Get group issues statistics
      description: Gets issues count statistics for given group.
      operationId: getGroupIssuesStatistics
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Comma-separated list of label names, issues must have all labels to be returned. None lists all issues with
            no labels. Any lists all issues with at least one label.
          required: false
          schema:
            type: string
        - name: 'iids[]'
          in: query
          description: Return only the issues having the given iid
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            The milestone title. None lists all issues with no milestone. Any lists all issues that have an assigned
            milestone.
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return issues for the given scope: created_by_me, assigned_to_me or all.'
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: >-
            Return issues created by the given user id. Mutually exclusive with author_username. Combine with scope=all
            or scope=assigned_to_me.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: Return issues created by the given username. Similar to author_id and mutually exclusive with author_id.
          required: false
          schema:
            type: string
        - name: assignee_id
          in: query
          description: >-
            Return issues assigned to the given user id. Mutually exclusive with assignee_username. None returns
            unassigned issues. Any returns issues with an assignee.
          required: false
          schema:
            type: integer
        - name: assignee_username
          in: query
          description: >-
            Return issues assigned to the given username. Similar to assignee_id and mutually exclusive with
            assignee_id. In GitLab CE assignee_username array should only contain a single value or an invalid parameter
            error is returned otherwise.
          required: false
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: >-
            Return issues reacted by the authenticated user by the given emoji. None returns issues not given a
            reaction. Any returns issues given at least one reaction.
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search group issues against their title and description
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return issues created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return issues created on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return issues updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return issues updated on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter confidential or public issues.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getIssuesStatisticsResponse'
      tags:
        - issues_statistics
  '/projects/{id}/issues_statistics':
    get:
      summary: Get project issues statistics
      description: Gets issues count statistics for given project.
      operationId: getProjectIssuesStatistics
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: 'iids[]'
          in: query
          description: Return only the milestone having the given iid
          required: false
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Comma-separated list of label names, issues must have all labels to be returned. None lists all issues with
            no labels. Any lists all issues with at least one label.
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            The milestone title. None lists all issues with no milestone. Any lists all issues that have an assigned
            milestone.
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return issues for the given scope: created_by_me, assigned_to_me or all.'
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: >-
            Return issues created by the given user id. Mutually exclusive with author_username. Combine with scope=all
            or scope=assigned_to_me.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: Return issues created by the given username. Similar to author_id and mutually exclusive with author_id.
          required: false
          schema:
            type: string
        - name: assignee_id
          in: query
          description: >-
            Return issues assigned to the given user id. Mutually exclusive with assignee_username. None returns
            unassigned issues. Any returns issues with an assignee.
          required: false
          schema:
            type: integer
        - name: assignee_username
          in: query
          description: >-
            Return issues assigned to the given username. Similar to assignee_id and mutually exclusive with
            assignee_id. In GitLab CE assignee_username array should only contain a single value or an invalid parameter
            error is returned otherwise.
          required: false
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: >-
            Return issues reacted by the authenticated user by the given emoji. None returns issues not given a
            reaction. Any returns issues given at least one reaction.
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search project issues against their title and description
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return issues created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: 'Return issues created on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return issues updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return issues updated on or before the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter confidential or public issues.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getIssuesStatisticsResponse'
      tags:
        - issues_statistics
  '/projects/{id}/iterations':
    get:
      summary: List project iterations
      description: Returns a list of project iterations.
      operationId: listProjectIterations
      parameters:
        - name: state
          in: query
          description: >-
            ‘Return opened, upcoming, current (previously started), closed, or all iterations. Filtering by started
            state is deprecated starting with 14.1, please use current instead.’
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return only iterations with a title matching the provided string.
          required: false
          schema:
            type: string
        - name: include_ancestors
          in: query
          description: Include iterations from parent group and its ancestors. Defaults to true.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIterationsResponse'
      tags:
        - iterations
  '/projects/{id}/jobs':
    get:
      summary: List project jobs
      description: Get a list of jobs in a project. Jobs are sorted in descending order of their IDs.
      operationId: listProjectJobs
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: >-
            Scope of jobs to show. Either one of or an array of the following: created, pending, running, failed,
            success, canceled, skipped, or manual. All jobs are returned if scope is not provided.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectJobsResponse'
      tags:
        - jobs
  '/projects/{id}/pipelines/{pipeline_id}/jobs':
    get:
      summary: List pipeline jobs
      description: Get a list of jobs for a pipeline.
      operationId: listPipelineJobs
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: ID of a pipeline. Can also be obtained in CI jobs via the predefined CI variable CI_PIPELINE_ID.
          required: true
          schema:
            type: integer
        - name: scope
          in: query
          description: >-
            Scope of jobs to show. Either one of or an array of the following: created, pending, running, failed,
            success, canceled, skipped, or manual. All jobs are returned if scope is not provided.
          required: false
          schema:
            type: string
        - name: include_retried
          in: query
          description: Include retried jobs in the response. Defaults to false. Introduced in GitLab 13.9.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPipelineJobsResponse'
      tags:
        - jobs
  '/projects/{id}/pipelines/{pipeline_id}/bridges':
    get:
      summary: List pipeline bridges
      description: Get a list of bridge jobs for a pipeline.
      operationId: listPipelineBridges
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: ID of a pipeline.
          required: true
          schema:
            type: integer
        - name: scope
          in: query
          description: >-
            Scope of jobs to show. Either one of or an array of the following: created, pending, running, failed,
            success, canceled, skipped, or manual. All jobs are returned if scope is not provided.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPipelineBridgesResponse'
      tags:
        - jobs
  /job:
    get:
      summary: Get job token’s job
      description: Retrieve the job that generated a job token.
      operationId: getJobTokenJob
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getJobTokenJobResponse'
      tags:
        - jobs
  /job/allowed_agents:
    get:
      summary: Get GitLab agent by CI_JOB_TOKEN
      description: 'Retrieve the job that generated the CI_JOB_TOKEN, along with a list of allowed agents.'
      operationId: getGitlabAgentByCi_job_token
      parameters:
        - name: CI_JOB_TOKEN
          in: query
          description: Token value associated with the GitLab-provided CI_JOB_TOKEN variable.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGitlabAgentByCi_job_tokenResponse'
      tags:
        - jobs
  '/projects/{id}/jobs/{job_id}':
    get:
      summary: Get a single job
      description: Get a single job of a project
      operationId: getASingleJob
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: ID of a job.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleJobResponse'
      tags:
        - jobs
  '/projects/{id}/jobs/{job_id}/trace':
    get:
      summary: Get a log file
      description: 'Get a log (trace) of a specific job of a project:'
      operationId: getALogFile
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: ID of a job.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - jobs
  '/projects/{id}/jobs/{job_id}/cancel':
    post:
      summary: Cancel a job
      description: Cancel a single job of a project
      operationId: cancelAJob
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: ID of a job.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelAJobResponse'
      tags:
        - jobs
  '/projects/{id}/jobs/{job_id}/retry':
    post:
      summary: Retry a job
      description: Retry a single job of a project
      operationId: retryAJob
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: ID of a job.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelAJobResponse'
      tags:
        - jobs
  '/projects/{id}/jobs/{job_id}/erase':
    post:
      summary: Erase a job
      description: Erase a single job of a project (remove job artifacts and a job log)
      operationId: eraseAJob
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: ID of a job.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eraseAJobResponse'
      tags:
        - jobs
  '/projects/{id}/jobs/{job_id}/play':
    post:
      summary: Run a job
      description: Triggers a manual action to start a job.
      operationId: runAJob
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: ID of a job.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runAJobResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/runAJobRequest'
      tags:
        - jobs
  '/keys/{id}':
    get:
      summary: Get SSH key with user by ID of an SSH key
      description: >-
        Get SSH key with user by ID of an SSH key. Note only administrators can lookup SSH key with user by ID of an SSH
        key.
      operationId: getSshKeyWithUserByIdOfAnSshKey
      parameters:
        - name: id
          in: path
          description: The ID of an SSH key
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSshKeyWithUserByIdOfAnSshKeyResponse'
      tags:
        - keys
  /keys:
    get:
      summary: Get user by fingerprint of SSH key
      description: >-
        You can search for a user that owns a specific SSH key. Note only administrators can lookup SSH key with the
        fingerprint of an SSH key.
      operationId: getUserByFingerprintOfSshKey
      parameters:
        - name: fingerprint
          in: query
          description: The fingerprint of an SSH key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSshKeyWithUserByIdOfAnSshKeyResponse'
      tags:
        - keys
  '/projects/{id}/labels':
    get:
      summary: List labels
      description: Get all labels for a given project.
      operationId: listLabels
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: with_counts
          in: query
          description: Whether or not to include issue and merge request counts. Defaults to false. (Introduced in GitLab 12.2)
          required: false
          schema:
            type: string
        - name: include_ancestor_groups
          in: query
          description: Include ancestor groups. Defaults to true.
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Keyword to filter labels by. Introduced in GitLab 13.6
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listLabelsResponse'
      tags:
        - labels
    post:
      summary: Create a new label
      description: Creates a new label for the given repository with the given name and color.
      operationId: createANewLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectLabelResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewLabelRequest'
      tags:
        - labels
  '/projects/{id}/labels/{label_id}':
    get:
      summary: Get a single project label
      description: Get a single label for a given project.
      operationId: getASingleProjectLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a project’s label.
          required: true
          schema:
            type: string
        - name: include_ancestor_groups
          in: query
          description: Include ancestor groups. Defaults to true.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectLabelResponse'
      tags:
        - labels
    delete:
      summary: Delete a label
      description: Deletes a label with a given name.
      operationId: deleteALabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a group’s label.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - labels
    put:
      summary: Edit an existing label
      description: 'Updates an existing label with new name or new color. At least one parameter is required, to update the label.'
      operationId: editAnExistingLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a group’s label.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectLabelResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editAnExistingLabelRequest'
      tags:
        - labels
  '/projects/{id}/labels/{label_id}/promote':
    put:
      summary: Promote a project label to a group label
      description: Promotes a project label to a group label. The label keeps its ID.
      operationId: promoteAProjectLabelToAGroupLabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a group’s label.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/promoteAProjectLabelToAGroupLabelResponse'
      tags:
        - labels
  '/projects/{id}/labels/{label_id}/subscribe':
    post:
      summary: Subscribe to a label
      description: >-
        Subscribes the authenticated user to a label to receive notifications. If the user is already subscribed to the
        label, the status code 304 is returned.
      operationId: subscribeToALabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a project’s label
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectLabelResponse'
      tags:
        - labels
  '/projects/{id}/labels/{label_id}/unsubscribe':
    post:
      summary: Unsubscribe from a label
      description: >-
        Unsubscribes the authenticated user from a label to not receive notifications from it. If the user is not
        subscribed to the label, the status code 304 is returned.
      operationId: unsubscribeFromALabel
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID or title of a project’s label
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - labels
  /license:
    get:
      summary: Retrieve information about the current license
      description: ''
      operationId: retrieveInformationAboutTheCurrentLicense
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveInformationAboutTheCurrentLicenseResponse'
      tags:
        - license
    post:
      summary: Add a new license
      description: 'Returns:'
      operationId: addANewLicense
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveInformationAboutTheCurrentLicenseResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addANewLicenseRequest'
      tags:
        - license
  /licenses:
    get:
      summary: Retrieve information about all licenses
      description: >-
        Overage is the difference between the number of billable users and the licensed number of users. This is
        calculated differently depending on whether the license has expired or not.
      operationId: retrieveInformationAboutAllLicenses
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveInformationAboutAllLicensesResponse'
      tags:
        - license
  '/license/{id}':
    delete:
      summary: Delete a license
      description: 'Returns:'
      operationId: deleteALicense
      parameters:
        - name: id
          in: path
          description: ID of the GitLab license.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteALicenseResponse'
      tags:
        - license
  '/groups/{id}/epics/{epic_iid}/related_epics':
    get:
      summary: List linked epics
      description: Get a list of a given epic’s linked epics filtered according to the user authorizations.
      operationId: listLinkedEpics
      parameters:
        - name: epic_iid
          in: path
          description: Internal ID of a group’s epic
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: ID or URL-encoded path of the group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listLinkedEpicsResponse'
      tags:
        - linked_epics
    post:
      summary: Create a related epic link
      description: Create a two-way relation between two epics. The user must be allowed to update both epics to succeed.
      operationId: createARelatedEpicLink
      parameters:
        - name: epic_iid
          in: path
          description: Internal ID of a group’s epic.
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createARelatedEpicLinkResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createARelatedEpicLinkRequest'
      tags:
        - linked_epics
  '/groups/{id}/epics/{epic_iid}/related_epics/{related_epic_link_id}':
    delete:
      summary: Delete a related epic link
      description: Delete a two-way relation between two epics. The user must be allowed to update both epics to succeed.
      operationId: deleteARelatedEpicLink
      parameters:
        - name: epic_iid
          in: path
          description: Internal ID of a group’s epic.
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: related_epic_link_id
          in: path
          description: Internal ID of a related epic link.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createARelatedEpicLinkResponse'
      tags:
        - linked_epics
  /ci/lint:
    post:
      summary: Validate the CI YAML configuration
      description: >-
        Checks if CI/CD YAML configuration is valid. This endpoint validates basic CI/CD configuration syntax. It
        doesn’t have any namespace-specific context.
      operationId: validateTheCiYamlConfiguration
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateTheCiYamlConfigurationRequest'
      tags:
        - lint
  '/projects/{id}/ci/lint':
    post:
      summary: Validate a CI YAML configuration with a namespace
      description: Checks if CI/CD YAML configuration is valid. This endpoint has namespace specific context.
      operationId: validateACiYamlConfigurationWithANamespace
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/validateACiYamlConfigurationWithANamespaceRequest'
      tags:
        - lint
    get:
      summary: Validate a project’s CI configuration
      description: >-
        Checks if a project’s latest (HEAD of the project’s default branch) .gitlab-ci.yml configuration is valid. This
        endpoint uses all namespace specific data available, including variables, local includes, and so on.
      operationId: validateAProjectCiConfiguration
      parameters:
        - name: dry_run
          in: query
          description: 'Run pipeline creation simulation, or only do static check.'
          required: false
          schema:
            type: string
        - name: include_jobs
          in: query
          description: >-
            If the list of jobs that would exist in a static check or pipeline simulation should be included in the
            response. This is false by default.
          required: false
          schema:
            type: string
        - name: ref
          in: query
          description: 'When dry_run is true, sets the branch or tag to use. Defaults to the project’s default branch when not set.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateAProjectCiConfigurationResponse'
      tags:
        - lint
  '/projects/{id}/managed_licenses':
    get:
      summary: List managed licenses
      description: Get all managed licenses for a given project.
      operationId: listManagedLicenses
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listManagedLicensesResponse'
      tags:
        - managed_licenses
    post:
      summary: Create a new managed license
      description: Creates a new managed license for the given project with the given name and approval status.
      operationId: createANewManagedLicense
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showAnExistingManagedLicenseResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewManagedLicenseRequest'
      tags:
        - managed_licenses
  '/projects/{id}/managed_licenses/{managed_license_id}':
    get:
      summary: Show an existing managed license
      description: Shows an existing managed license.
      operationId: showAnExistingManagedLicense
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: managed_license_id
          in: path
          description: The ID or URL-encoded name of the license belonging to the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showAnExistingManagedLicenseResponse'
      tags:
        - managed_licenses
    delete:
      summary: Delete a managed license
      description: Deletes a managed license with a given ID.
      operationId: deleteAManagedLicense
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: managed_license_id
          in: path
          description: The ID or URL-encoded name of the license belonging to the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - managed_licenses
    patch:
      summary: Edit an existing managed license
      description: Updates an existing managed license with a new approval status.
      operationId: editAnExistingManagedLicense
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: managed_license_id
          in: path
          description: The ID or URL-encoded name of the license belonging to the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showAnExistingManagedLicenseResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editAnExistingManagedLicenseRequest'
      tags:
        - managed_licenses
  /markdown:
    post:
      summary: Render an arbitrary Markdown document
      description: 'Response example:'
      operationId: renderAnArbitraryMarkdownDocument
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/renderAnArbitraryMarkdownDocumentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/renderAnArbitraryMarkdownDocumentRequest'
      tags:
        - markdown
  '/groups/{id}/members':
    get:
      summary: List all members of a group or project
      description: >-
        Gets a list of group or project members viewable by the authenticated user. Returns only direct members and not
        inherited members through ancestors groups.
      operationId: listAllMembersOfAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: A query string to search for members
          required: false
          schema:
            type: string
        - name: user_ids
          in: query
          description: Filter the results on the given user IDs
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllMembersOfAGroupOrProjectResponse'
      tags:
        - members
    post:
      summary: Add a member to a group or project
      description: Adds a member to a group or project.
      operationId: addAMemberToAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAMemberToAGroupOrProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAMemberToAGroupOrProjectRequest'
      tags:
        - members
  '/groups/{id}/members/all':
    get:
      summary: List all members of a group or project including inherited and invited members
      description: >-
        Gets a list of group or project members viewable by the authenticated user, including inherited members, invited
        users, and permissions through ancestor groups.
      operationId: listAllMembersOfAGroupOrProjectIncludingInheritedAndInvitedMembers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: A query string to search for members
          required: false
          schema:
            type: string
        - name: user_ids
          in: query
          description: Filter the results on the given user IDs
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: 'Filter results by member state, one of awaiting or active'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllMembersOfAGroupOrProjectResponse'
      tags:
        - members
  '/groups/{id}/members/{user_id}':
    get:
      summary: Get a member of a group or project
      description: >-
        Gets a member of a group or project. Returns only direct members and not inherited members through ancestor
        groups.
      operationId: getAMemberOfAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAMemberOfAGroupOrProjectResponse'
      tags:
        - members
    put:
      summary: Edit a member of a group or project
      description: Updates a member of a group or project.
      operationId: editAMemberOfAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAMemberToAGroupOrProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editAMemberOfAGroupOrProjectRequest'
      tags:
        - members
    delete:
      summary: Remove a member from a group or project
      description: Removes a user from a group or project where the user has been explicitly assigned a role.
      operationId: removeAMemberFromAGroupOrProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
        - name: skip_subresources
          in: query
          description: >-
            Whether the deletion of direct memberships of the removed member in subgroups and projects should be
            skipped. Default is false.
          required: false
          schema:
            type: string
        - name: unassign_issuables
          in: query
          description: >-
            Whether the removed member should be unassigned from any issues or merge requests inside a given group or
            project. Default is false.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - members
  '/groups/{id}/members/all/{user_id}':
    get:
      summary: 'Get a member of a group or project, including inherited and invited members'
      description: >-
        Gets a member of a group or project, including members inherited or invited through ancestor groups. See the
        corresponding endpoint to list all inherited members for details.
      operationId: getAMemberOfAGroupOrProjectIncludingInheritedAndInvitedMembers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project or group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAMemberOfAGroupOrProjectResponse'
      tags:
        - members
  '/groups/{id}/billable_members':
    get:
      summary: List all billable members of a group
      description: Gets a list of group members that count as billable. The list includes members in subgroups and projects.
      operationId: listAllBillableMembersOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: 'A query string to search for group members by name, username, or public email.'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: A query string containing parameters that specify the sort attribute and order. See supported values below.
          required: false
          schema:
            type: string
        - name: include_awaiting_members
          in: query
          description: Determines if awaiting members are included.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllBillableMembersOfAGroupResponse'
      tags:
        - members
  '/groups/{id}/billable_members/{user_id}/memberships':
    get:
      summary: List memberships for a billable member of a group
      description: Gets a list of memberships for a billable member of a group.
      operationId: listMembershipsForABillableMemberOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the billable member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMembershipsForABillableMemberOfAGroupResponse'
      tags:
        - members
  '/groups/{id}/billable_members/{user_id}':
    delete:
      summary: Remove a billable member from a group
      description: Removes a billable member from a group and its subgroups and projects.
      operationId: removeABillableMemberFromAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - members
  '/groups/{id}/members/{user_id}/state':
    put:
      summary: Change membership state of a user in a group
      description: Changes the membership state of a user in a group. The state is applied to all subgroups and projects.
      operationId: changeMembershipStateOfAUserInAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeMembershipStateOfAUserInAGroupResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeMembershipStateOfAUserInAGroupRequest'
      tags:
        - members
  '/groups/{id}/members/{user_id}/override':
    post:
      summary: Set override flag for a member of a group
      description: >-
        By default, the access level of LDAP group members is set to the value specified by LDAP through Group Sync. You
        can allow access level overrides by calling this endpoint.
      operationId: setOverrideFlagForAMemberOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setOverrideFlagForAMemberOfAGroupResponse'
      tags:
        - members
    delete:
      summary: Remove override for a member of a group
      description: >-
        Sets the override flag to false and allows LDAP Group Sync to reset the access level to the LDAP-prescribed
        value.
      operationId: removeOverrideForAMemberOfAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: The user ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setOverrideFlagForAMemberOfAGroupResponse'
      tags:
        - members
  '/groups/{id}/members/{member_id}/approve':
    put:
      summary: Approve a member for a group
      description: Approves a pending user for a group and its subgroups and projects.
      operationId: approveAMemberForAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the root group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: member_id
          in: path
          description: The ID of the member
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - members
  '/groups/{id}/members/approve_all':
    post:
      summary: Approve all pending members for a group
      description: Approves all pending users for a group and its subgroups and projects.
      operationId: approveAllPendingMembersForAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the root group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - members
  '/groups/{id}/pending_members':
    get:
      summary: List pending members of a group and its subgroups and projects
      description: >-
        For a group and its subgroups and projects, get a list of all members in an awaiting state and those who are
        invited but do not have a GitLab account.
      operationId: listPendingMembersOfAGroupAndItsSubgroupsAndProjects
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPendingMembersOfAGroupAndItsSubgroupsAndProjectsResponse'
      tags:
        - members
  '/projects/{id}/approvals':
    get:
      summary: Get Configuration
      description: 'You can request information about a project’s approval configuration using the following endpoint:'
      operationId: getConfiguration
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConfigurationResponse'
      tags:
        - merge_request_approvals
    post:
      summary: Change configuration
      description: 'If you are allowed to, you can change approval configuration using the following endpoint:'
      operationId: changeConfiguration
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeConfigurationRequest'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeConfigurationRequest'
      tags:
        - merge_request_approvals
  '/projects/{id}/approval_rules':
    get:
      summary: Get project-level rules
      description: 'You can request information about a project’s approval rules using the following endpoint:'
      operationId: getProjectLevelRules
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getProjectLevelRulesResponse'
      tags:
        - merge_request_approvals
    post:
      summary: Create project-level rule
      description: 'You can create project approval rules using the following endpoint:'
      operationId: createProjectLevelRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectLevelRuleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProjectLevelRuleRequest'
      tags:
        - merge_request_approvals
  '/projects/{id}/approval_rules/{approval_rule_id}':
    get:
      summary: Get a single project-level rule
      description: 'You can request information about a single project approval rules using the following endpoint:'
      operationId: getASingleProjectLevelRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: approval_rule_id
          in: path
          description: The ID of a approval rule
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectLevelRuleResponse'
      tags:
        - merge_request_approvals
    put:
      summary: Update project-level rule
      description: 'You can update project approval rules using the following endpoint:'
      operationId: updateProjectLevelRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: approval_rule_id
          in: path
          description: The ID of a approval rule
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectLevelRuleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProjectLevelRuleRequest'
      tags:
        - merge_request_approvals
    delete:
      summary: Delete project-level rule
      description: 'You can delete project approval rules using the following endpoint:'
      operationId: deleteProjectLevelRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: approval_rule_id
          in: path
          description: The ID of a approval rule
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - merge_request_approvals
  '/projects/{id}/merge_requests/{merge_request_iid}/approvals':
    get:
      summary: Get Configuration
      description: 'You can request information about a merge request’s approval status using the following endpoint:'
      operationId: getConfiguration
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of MR
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConfigurationResponse'
      tags:
        - merge_request_approvals
    post:
      summary: Change approval configuration
      description: 'If you are allowed to, you can change approvals_required using the following endpoint:'
      operationId: changeApprovalConfiguration
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of MR
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConfigurationResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeApprovalConfigurationRequest'
      tags:
        - merge_request_approvals
  '/projects/{id}/merge_requests/{merge_request_iid}/approval_state':
    get:
      summary: Get the approval state of merge requests
      description: 'You can request information about a merge request’s approval state by using the following endpoint:'
      operationId: getTheApprovalStateOfMergeRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of MR
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTheApprovalStateOfMergeRequestsResponse'
      tags:
        - merge_request_approvals
  '/projects/{id}/merge_requests/{merge_request_iid}/approval_rules':
    get:
      summary: Get merge request level rules
      description: 'You can request information about a merge request’s approval rules using the following endpoint:'
      operationId: getMergeRequestLevelRules
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of MR
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMergeRequestLevelRulesResponse'
      tags:
        - merge_request_approvals
    post:
      summary: Create merge request level rule
      description: 'You can create merge request approval rules using the following endpoint:'
      operationId: createMergeRequestLevelRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of MR
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleMergeRequestLevelRuleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createMergeRequestLevelRuleRequest'
      tags:
        - merge_request_approvals
  '/projects/{id}/merge_requests/{merge_request_iid}/approval_rules/{approval_rule_id}':
    get:
      summary: Get a single merge request level rule
      description: 'You can request information about a single merge request approval rule using the following endpoint:'
      operationId: getASingleMergeRequestLevelRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request.
          required: true
          schema:
            type: integer
        - name: approval_rule_id
          in: path
          description: The ID of an approval rule.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleMergeRequestLevelRuleResponse'
      tags:
        - merge_request_approvals
    put:
      summary: Update merge request level rule
      description: 'You can update merge request approval rules using the following endpoint:'
      operationId: updateMergeRequestLevelRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request.
          required: true
          schema:
            type: integer
        - name: approval_rule_id
          in: path
          description: The ID of an approval rule.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleMergeRequestLevelRuleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateMergeRequestLevelRuleRequest'
      tags:
        - merge_request_approvals
    delete:
      summary: Delete merge request level rule
      description: 'You can delete merge request approval rules using the following endpoint:'
      operationId: deleteMergeRequestLevelRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of the merge request
          required: true
          schema:
            type: integer
        - name: approval_rule_id
          in: path
          description: The ID of an approval rule
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - merge_request_approvals
  '/projects/{id}/merge_requests/{merge_request_iid}/approve':
    post:
      summary: Approve merge request
      description: 'If you are allowed to, you can approve a merge request using the following endpoint:'
      operationId: approveMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of the merge request
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConfigurationResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approveMergeRequestRequest'
      tags:
        - merge_request_approvals
  '/projects/{id}/merge_requests/{merge_request_iid}/unapprove':
    post:
      summary: Unapprove merge request
      description: 'If you did approve a merge request, you can unapprove it using the following endpoint:'
      operationId: unapproveMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of a project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - merge_request_approvals
  /merge_requests:
    get:
      summary: List merge requests
      description: >-
        Get all merge requests the authenticated user has access to. By default it returns only merge requests created
        by the current user. To get all merge requests, use parameter scope=all.
      operationId: listMergeRequests
      parameters:
        - name: state
          in: query
          description: 'Return all merge requests or just those that are opened, closed, locked, or merged.'
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Return requests ordered by created_at, title, or updated_at fields. Default is created_at. Introduced in
            GitLab 14.8.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return requests sorted in asc or desc order. Default is desc.
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            Return merge requests for a specific milestone. None returns merge requests with no milestone. Any returns
            merge requests that have an assigned milestone.
          required: false
          schema:
            type: string
        - name: view
          in: query
          description: 'If simple, returns the iid, URL, title, description, and basic state of merge request.'
          required: false
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Return merge requests matching a comma-separated list of labels. None lists all merge requests with no
            labels. Any lists all merge requests with at least one label. Predefined names are case-insensitive.
          required: false
          schema:
            type: string
        - name: with_labels_details
          in: query
          description: >-
            If true, response returns more details for each label in labels field: :name, :color, :description,
            :description_html, :text_color. Default is false. Introduced in GitLab 12.7.
          required: false
          schema:
            type: string
        - name: with_merge_status_recheck
          in: query
          description: >-
            If true, this projection requests (but does not guarantee) that the merge_status field be recalculated
            asynchronously. Default is false. Introduced in GitLab 13.0.
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return merge requests created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: >-
            Return merge requests created on or before the given time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z)
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return merge requests updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: >-
            Return merge requests updated on or before the given time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z)
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return merge requests for the given scope: created_by_me, assigned_to_me or all. Defaults to created_by_me.'
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: >-
            Returns merge requests created by the given user id. Mutually exclusive with author_username. Combine with
            scope=all or scope=assigned_to_me.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: >-
            Returns merge requests created by the given username. Mutually exclusive with author_id. Introduced in
            GitLab 12.10.
          required: false
          schema:
            type: string
        - name: assignee_id
          in: query
          description: >-
            Returns merge requests assigned to the given user id. None returns unassigned merge requests. Any returns
            merge requests with an assignee.
          required: false
          schema:
            type: integer
        - name: approver_ids
          in: query
          description: >-
            Returns merge requests which have specified all the users with the given ids as individual approvers. None
            returns merge requests without approvers. Any returns merge requests with an approver.
          required: false
          schema:
            type: string
        - name: approved_by_ids
          in: query
          description: >-
            Returns merge requests which have been approved by all the users with the given ids (Max: 5). None returns
            merge requests with no approvals. Any returns merge requests with an approval.
          required: false
          schema:
            type: string
        - name: reviewer_id
          in: query
          description: >-
            Returns merge requests which have the user as a reviewer with the given user id. None returns merge requests
            with no reviewers. Any returns merge requests with any reviewer. Mutually exclusive with reviewer_username.
          required: false
          schema:
            type: integer
        - name: reviewer_username
          in: query
          description: >-
            Returns merge requests which have the user as a reviewer with the given username. None returns merge
            requests with no reviewers. Any returns merge requests with any reviewer. Mutually exclusive with
            reviewer_id. Introduced in GitLab 13.8.
          required: false
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: >-
            Return merge requests reacted by the authenticated user by the given emoji. None returns issues not given a
            reaction. Any returns issues given at least one reaction.
          required: false
          schema:
            type: string
        - name: source_branch
          in: query
          description: Return merge requests with the given source branch.
          required: false
          schema:
            type: string
        - name: target_branch
          in: query
          description: Return merge requests with the given target branch.
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search merge requests against their title and description.
          required: false
          schema:
            type: string
        - name: in
          in: query
          description: >-
            Modify the scope of the search attribute. title, description, or a string joining them with comma. Default
            is title,description.
          required: false
          schema:
            type: string
        - name: wip
          in: query
          description: >-
            Filter merge requests against their wip status. yes to return only draft merge requests, no to return
            non-draft merge requests.
          required: false
          schema:
            type: string
        - name: not
          in: query
          description: >-
            Return merge requests that do not match the parameters supplied. Accepts: labels, milestone, author_id,
            author_username, assignee_id, assignee_username, reviewer_id, reviewer_username, my_reaction_emoji.
          required: false
          schema:
            type: string
        - name: environment
          in: query
          description: 'Returns merge requests deployed to the given environment. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: deployed_before
          in: query
          description: >-
            Return merge requests deployed before the given date/time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z)
          required: false
          schema:
            type: string
        - name: deployed_after
          in: query
          description: 'Return merge requests deployed after the given date/time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMergeRequestsResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests':
    get:
      summary: List project merge requests
      description: project_id represents the ID of the project where the MR resides. project_id always equals target_project_id.
      operationId: listProjectMergeRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: 'iids[]'
          in: query
          description: Return the request having the given iid.
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: 'Return all merge requests or just those that are opened, closed, locked, or merged.'
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Return requests ordered by created_at, title or updated_at fields. Default is created_at. Introduced in
            GitLab 14.8.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return requests sorted in asc or desc order. Default is desc.
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            Return merge requests for a specific milestone. None returns merge requests with no milestone. Any returns
            merge requests that have an assigned milestone.
          required: false
          schema:
            type: string
        - name: view
          in: query
          description: 'If simple, returns the iid, URL, title, description, and basic state of merge request.'
          required: false
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Return merge requests matching a comma-separated list of labels. None lists all merge requests with no
            labels. Any lists all merge requests with at least one label. Predefined names are case-insensitive.
          required: false
          schema:
            type: string
        - name: with_labels_details
          in: query
          description: >-
            If true, response returns more details for each label in labels field: :name, :color, :description,
            :description_html, :text_color. Default is false. Introduced in GitLab 12.7.
          required: false
          schema:
            type: string
        - name: with_merge_status_recheck
          in: query
          description: >-
            If true, this projection requests (but does not guarantee) that the merge_status field be recalculated
            asynchronously. Default is false. Introduced in GitLab 13.0.
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: 'Return merge requests created on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: >-
            Return merge requests created on or before the given time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z)
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return merge requests updated on or after the given time. Expected in ISO 8601 format (2019-03-15T08:00:00Z)'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: >-
            Return merge requests updated on or before the given time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z)
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return merge requests for the given scope: created_by_me, assigned_to_me, or all.'
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: Returns merge requests created by the given user id. Mutually exclusive with author_username.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: >-
            Returns merge requests created by the given username. Mutually exclusive with author_id. Introduced in
            GitLab 12.10.
          required: false
          schema:
            type: string
        - name: assignee_id
          in: query
          description: >-
            Returns merge requests assigned to the given user id. None returns unassigned merge requests. Any returns
            merge requests with an assignee.
          required: false
          schema:
            type: integer
        - name: approver_ids
          in: query
          description: >-
            Returns merge requests which have specified all the users with the given ids as individual approvers. None
            returns merge requests without approvers. Any returns merge requests with an approver.
          required: false
          schema:
            type: string
        - name: approved_by_ids
          in: query
          description: >-
            Returns merge requests which have been approved by all the users with the given ids (Max: 5). None returns
            merge requests with no approvals. Any returns merge requests with an approval.
          required: false
          schema:
            type: string
        - name: reviewer_id
          in: query
          description: >-
            Returns merge requests which have the user as a reviewer with the given user id. None returns merge requests
            with no reviewers. Any returns merge requests with any reviewer. Mutually exclusive with reviewer_username.
          required: false
          schema:
            type: integer
        - name: reviewer_username
          in: query
          description: >-
            Returns merge requests which have the user as a reviewer with the given username. None returns merge
            requests with no reviewers. Any returns merge requests with any reviewer. Mutually exclusive with
            reviewer_id. Introduced in GitLab 13.8.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMergeRequestsResponse'
      tags:
        - merge_requests
    post:
      summary: Create MR
      description: Creates a new merge request.
      operationId: createMr
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMrResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createMrRequest'
      tags:
        - merge_requests
  '/groups/{id}/merge_requests':
    get:
      summary: List group merge requests
      description: group_id represents the ID of the group which contains the project where the MR resides.
      operationId: listGroupMergeRequests
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: state
          in: query
          description: 'Return all merge requests or just those that are opened, closed, locked, or merged.'
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Return merge requests ordered by created_at, title or updated_at fields. Default is created_at. Introduced
            in GitLab 14.8.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return merge requests sorted in asc or desc order. Default is desc.
          required: false
          schema:
            type: string
        - name: milestone
          in: query
          description: >-
            Return merge requests for a specific milestone. None returns merge requests with no milestone. Any returns
            merge requests that have an assigned milestone.
          required: false
          schema:
            type: string
        - name: view
          in: query
          description: 'If simple, returns the iid, URL, title, description, and basic state of merge request.'
          required: false
          schema:
            type: string
        - name: labels
          in: query
          description: >-
            Return merge requests matching a comma-separated list of labels. None lists all merge requests with no
            labels. Any lists all merge requests with at least one label. Predefined names are case-insensitive.
          required: false
          schema:
            type: string
        - name: with_labels_details
          in: query
          description: >-
            If true, response returns more details for each label in labels field: :name, :color, :description,
            :description_html, :text_color. Default is false. Introduced in GitLab 12.7.
          required: false
          schema:
            type: string
        - name: with_merge_status_recheck
          in: query
          description: >-
            If true, this projection requests (but does not guarantee) that the merge_status field be recalculated
            asynchronously. Default is false. Introduced in GitLab 13.0.
          required: false
          schema:
            type: string
        - name: created_after
          in: query
          description: >-
            Return merge requests created on or after the given time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z).
          required: false
          schema:
            type: string
        - name: created_before
          in: query
          description: >-
            Return merge requests created on or before the given time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z).
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: >-
            Return merge requests updated on or after the given time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z).
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: >-
            Return merge requests updated on or before the given time. Expected in ISO 8601 format
            (2019-03-15T08:00:00Z).
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Return merge requests for the given scope: created_by_me, assigned_to_me or all.'
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: Returns merge requests created by the given user id. Mutually exclusive with author_username.
          required: false
          schema:
            type: integer
        - name: author_username
          in: query
          description: >-
            Returns merge requests created by the given username. Mutually exclusive with author_id. Introduced in
            GitLab 12.10.
          required: false
          schema:
            type: string
        - name: assignee_id
          in: query
          description: >-
            Returns merge requests assigned to the given user id. None returns unassigned merge requests. Any returns
            merge requests with an assignee.
          required: false
          schema:
            type: integer
        - name: approver_ids
          in: query
          description: >-
            Returns merge requests which have specified all the users with the given ids as individual approvers. None
            returns merge requests without approvers. Any returns merge requests with an approver.
          required: false
          schema:
            type: string
        - name: approved_by_ids
          in: query
          description: >-
            Returns merge requests which have been approved by all the users with the given ids (Max: 5). None returns
            merge requests with no approvals. Any returns merge requests with an approval.
          required: false
          schema:
            type: string
        - name: reviewer_id
          in: query
          description: >-
            Returns merge requests which have the user as a reviewer with the given user id. None returns merge requests
            with no reviewers. Any returns merge requests with any reviewer. Mutually exclusive with reviewer_username.
          required: false
          schema:
            type: integer
        - name: reviewer_username
          in: query
          description: >-
            Returns merge requests which have the user as a reviewer with the given username. None returns merge
            requests with no reviewers. Any returns merge requests with any reviewer. Mutually exclusive with
            reviewer_id. Introduced in GitLab 13.8.
          required: false
          schema:
            type: string
        - name: my_reaction_emoji
          in: query
          description: >-
            Return merge requests reacted by the authenticated user by the given emoji. None returns issues not given a
            reaction. Any returns issues given at least one reaction.
          required: false
          schema:
            type: string
        - name: source_branch
          in: query
          description: Return merge requests with the given source branch.
          required: false
          schema:
            type: string
        - name: target_branch
          in: query
          description: Return merge requests with the given target branch.
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search merge requests against their title and description.
          required: false
          schema:
            type: string
        - name: non_archived
          in: query
          description: Return merge requests from non archived projects only. Default is true. (Introduced in GitLab 12.8).
          required: false
          schema:
            type: string
        - name: not
          in: query
          description: >-
            Return merge requests that do not match the parameters supplied. Accepts: labels, milestone, author_id,
            author_username, assignee_id, assignee_username, reviewer_id, reviewer_username, my_reaction_emoji.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMergeRequestsResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}':
    get:
      summary: Get single MR
      description: Shows information about a single merge request.
      operationId: getSingleMr
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
        - name: render_html
          in: query
          description: If true response includes rendered HTML for title and description.
          required: false
          schema:
            type: string
        - name: include_diverged_commits_count
          in: query
          description: If true response includes the commits behind the target branch.
          required: false
          schema:
            type: string
        - name: include_rebase_in_progress
          in: query
          description: If true response includes whether a rebase operation is in progress.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleMrResponse'
      tags:
        - merge_requests
    put:
      summary: Update MR
      description: 'Updates an existing merge request. You can change the target branch, title, or even close the MR.'
      operationId: updateMr
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The ID of a merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateMrResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateMrRequest'
      tags:
        - merge_requests
    delete:
      summary: Delete a merge request
      description: Only for administrators and project owners. Deletes the merge request in question.
      operationId: deleteAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/participants':
    get:
      summary: Get single MR participants
      description: Get a list of merge request participants.
      operationId: getSingleMrParticipants
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleMrParticipantsResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/commits':
    get:
      summary: Get single MR commits
      description: Get a list of merge request commits.
      operationId: getSingleMrCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleMrCommitsResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/changes':
    get:
      summary: Get single MR changes
      description: Shows information about the merge request including its files and changes.
      operationId: getSingleMrChanges
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
        - name: access_raw_diffs
          in: query
          description: Retrieve change diffs via Gitaly.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleMrChangesResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/pipelines':
    get:
      summary: List MR pipelines
      description: Get a list of merge request pipelines.
      operationId: listMrPipelines
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMrPipelinesResponse'
      tags:
        - merge_requests
    post:
      summary: Create MR Pipeline
      description: >-
        Create a new pipeline for a merge request. A pipeline created via this endpoint doesn’t run a regular branch/tag
        pipeline. It requires .gitlab-ci.yml to be configured with only: [merge_requests] to create jobs.
      operationId: createMrPipeline
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createMrPipelineResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/merge':
    put:
      summary: Merge a merge request
      description: Accept and merge changes submitted with MR using this API.
      operationId: mergeAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateMrResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mergeAMergeRequestRequest'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/merge_ref':
    get:
      summary: Merge to default merge ref path
      description: >-
        Merge the changes between the merge request source and target branches into refs/merge-requests/:iid/merge ref,
        of the target project repository, if possible. This ref has the state the target branch would have if a regular
        merge action was taken.
      operationId: mergeToDefaultMergeRefPath
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mergeToDefaultMergeRefPathResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/cancel_merge_when_pipeline_succeeds':
    post:
      summary: Cancel Merge When Pipeline Succeeds
      description: 'This API returns specific HTTP status codes on failure:'
      operationId: cancelMergeWhenPipelineSucceeds
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateMrResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/rebase':
    put:
      summary: Rebase a merge request
      description: Automatically rebase the source_branch of the merge request against its target_branch.
      operationId: rebaseAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rebaseAMergeRequestResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rebaseAMergeRequestRequest'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/closes_issues':
    get:
      summary: List issues that close on merge
      description: Get all the issues that would be closed by merging the provided merge request.
      operationId: listIssuesThatCloseOnMerge
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listIssuesThatCloseOnMergeResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/subscribe':
    post:
      summary: Subscribe to a merge request
      description: >-
        Subscribes the authenticated user to a merge request to receive notification. If the user is already subscribed
        to the merge request, the status code HTTP 304 Not Modified is returned.
      operationId: subscribeToAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscribeToAMergeRequestResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/unsubscribe':
    post:
      summary: Unsubscribe from a merge request
      description: >-
        Unsubscribes the authenticated user from a merge request to not receive notifications from that merge request.
        If the user is not subscribed to the merge request, the status code HTTP 304 Not Modified is returned.
      operationId: unsubscribeFromAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscribeToAMergeRequestResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/todo':
    post:
      summary: Create a to-do item
      description: >-
        Manually creates a to-do item for the current user on a merge request. If there already exists a to-do item for
        the user on that merge request, status code HTTP 304 Not Modified is returned.
      operationId: createAToDoItem
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAToDoItemResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/versions':
    get:
      summary: Get MR diff versions
      description: >-
        Get a list of merge request diff versions. For an explanation of the SHAs in the response, read SHAs in the API
        response.
      operationId: getMrDiffVersions
      parameters:
        - name: id
          in: path
          description: The ID of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMrDiffVersionsResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/versions/{version_id}':
    get:
      summary: Get a single MR diff version
      description: >-
        Get a single merge request diff version. For an explanation of the SHAs in the response, read SHAs in the API
        response.
      operationId: getASingleMrDiffVersion
      parameters:
        - name: id
          in: path
          description: The ID of the project.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
        - name: version_id
          in: path
          description: The ID of the merge request diff version.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleMrDiffVersionResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/time_estimate':
    post:
      summary: Set a time estimate for a merge request
      description: Sets an estimated time of work for this merge request.
      operationId: setATimeEstimateForAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAMergeRequestResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setATimeEstimateForAMergeRequestRequest'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/reset_time_estimate':
    post:
      summary: Reset the time estimate for a merge request
      description: Resets the estimated time for this merge request to 0 seconds.
      operationId: resetTheTimeEstimateForAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of a project’s merge_request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAMergeRequestResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/add_spent_time':
    post:
      summary: Add spent time for a merge request
      description: Adds spent time for this merge request.
      operationId: addSpentTimeForAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAMergeRequestResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addSpentTimeForAMergeRequestRequest'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/reset_spent_time':
    post:
      summary: Reset spent time for a merge request
      description: Resets the total spent time for this merge request to 0 seconds.
      operationId: resetSpentTimeForAMergeRequest
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of a project’s merge_request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAMergeRequestResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_requests/{merge_request_iid}/time_stats':
    get:
      summary: Get time tracking stats
      description: ''
      operationId: getTimeTrackingStats
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The internal ID of the merge request.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setATimeEstimateForAMergeRequestResponse'
      tags:
        - merge_requests
  '/projects/{id}/merge_trains':
    get:
      summary: List Merge Trains for a project
      description: 'Get all Merge Trains of the requested project:'
      operationId: listMergeTrainsForAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: >-
            Return Merge Trains filtered by the given scope. Available scopes are active (to be merged) and complete
            (have been merged).
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return Merge Trains sorted in asc or desc order. Default is desc.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listMergeTrainsForAProjectResponse'
      tags:
        - merge_trains
  '/environments/{id}/metrics_dashboard/annotations/':
    post:
      summary: Create a new annotation
      description: ''
      operationId: createANewAnnotation
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewAnnotationResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewAnnotationRequest'
      tags:
        - metrics_dashboard_annotations
  '/projects/{id}/metrics/user_starred_dashboards':
    post:
      summary: Add a star to a dashboard
      description: ''
      operationId: addAStarToADashboard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addAStarToADashboardResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAStarToADashboardRequest'
      tags:
        - metrics_user_starred_dashboards
    delete:
      summary: Remove a star from a dashboard
      description: ''
      operationId: removeAStarFromADashboard
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: dashboard_path
          in: query
          description: >-
            URL-encoded path to file defining the dashboard which should no longer be marked as favorite. When not
            supplied, all dashboards within given projects are removed from favorites.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeAStarFromADashboardResponse'
      tags:
        - metrics_user_starred_dashboards
  '/projects/{id}/milestones':
    get:
      summary: List project milestones
      description: Returns a list of project milestones.
      operationId: listProjectMilestones
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: 'iids[]'
          in: query
          description: 'Return only the milestones having the given iid (Note: ignored if include_parent_milestones is set as true)'
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: Return only active or closed milestones
          required: false
          schema:
            type: string
        - name: title
          in: query
          description: Return only the milestones having the given title
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return only milestones with a title or description matching the provided string
          required: false
          schema:
            type: string
        - name: include_parent_milestones
          in: query
          description: Include group milestones from parent group and its ancestors. Introduced in GitLab 13.4
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectMilestonesResponse'
      tags:
        - milestones
    post:
      summary: Create new milestone
      description: Creates a new project milestone.
      operationId: createNewMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewMilestoneRequest'
      tags:
        - milestones
  '/projects/{id}/milestones/{milestone_id}':
    get:
      summary: Get single milestone
      description: Gets a single project milestone.
      operationId: getSingleMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the project’s milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - milestones
    put:
      summary: Edit milestone
      description: Updates an existing project milestone.
      operationId: editMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the project’s milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editMilestoneRequest'
      tags:
        - milestones
    delete:
      summary: Delete project milestone
      description: Only for users with at least the Reporter role in the project.
      operationId: deleteProjectMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the project’s milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - milestones
  '/projects/{id}/milestones/{milestone_id}/issues':
    get:
      summary: Get all issues assigned to a single milestone
      description: Gets all issues assigned to a single project milestone.
      operationId: getAllIssuesAssignedToASingleMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the project’s milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - milestones
  '/projects/{id}/milestones/{milestone_id}/merge_requests':
    get:
      summary: Get all merge requests assigned to a single milestone
      description: Gets all merge requests assigned to a single project milestone.
      operationId: getAllMergeRequestsAssignedToASingleMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the project’s milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - milestones
  '/projects/{id}/milestones/{milestone_id}/promote':
    post:
      summary: Promote project milestone to a group milestone
      description: Only for users with at least the Reporter role in the group.
      operationId: promoteProjectMilestoneToAGroupMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the project’s milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - milestones
  '/projects/{id}/milestones/{milestone_id}/burndown_events':
    get:
      summary: Get all burndown chart events for a single milestone
      description: Gets all burndown chart events for a single milestone.
      operationId: getAllBurndownChartEventsForASingleMilestone
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: milestone_id
          in: path
          description: The ID of the project’s milestone
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - milestones
  /namespaces:
    get:
      summary: List namespaces
      description: >-
        Get a list of the namespaces of the authenticated user. If the user is an administrator, a list of all
        namespaces in the GitLab instance is shown.
      operationId: listNamespaces
      parameters:
        - name: search
          in: query
          description: Returns a list of namespaces the user is authorized to view based on the search criteria
          required: false
          schema:
            type: string
        - name: owned_only
          in: query
          description: 'In GitLab 14.2 and later, returns a list of owned namespaces only'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listNamespacesResponse'
      tags:
        - namespaces
  '/namespaces/{id}':
    get:
      summary: Get namespace by ID
      description: Get a namespace by ID.
      operationId: getNamespaceById
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the namespace
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getNamespaceByIdResponse'
      tags:
        - namespaces
  '/namespaces/{namespace}/exists':
    get:
      summary: Get existence of a namespace
      description: Get existence of a namespace by path. Suggests a new namespace path that does not already exist.
      operationId: getExistenceOfANamespace
      parameters:
        - name: namespace
          in: path
          description: Namespace’s path.
          required: true
          schema:
            type: string
        - name: parent_id
          in: query
          description: 'The ID of the parent namespace. If no ID is specified, only top-level namespaces are considered.'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getExistenceOfANamespaceResponse'
      tags:
        - namespaces
  '/projects/{id}/issues/{issue_iid}/notes/{note_id}':
    get:
      summary: Get single issue note
      description: Returns a single note for a specific project issue
      operationId: getSingleIssueNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of a project issue
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of an issue note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - notes
    put:
      summary: Modify existing issue note
      description: Modify existing note of an issue.
      operationId: modifyExistingIssueNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue.
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a note.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingIssueNoteRequest'
      tags:
        - notes
    delete:
      summary: Delete an issue note
      description: Deletes an existing note of an issue.
      operationId: deleteAnIssueNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - notes
  '/projects/{id}/snippets/{snippet_id}/notes':
    get:
      summary: List all snippet notes
      description: Gets a list of all notes for a single snippet. Snippet notes are comments users can post to a snippet.
      operationId: listAllSnippetNotes
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project snippet
          required: true
          schema:
            type: integer
        - name: sort
          in: query
          description: Return snippet notes sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Return snippet notes ordered by created_at or updated_at fields. Default is created_at
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - notes
    post:
      summary: Create new snippet note
      description: >-
        Creates a new note for a single snippet. Snippet notes are user comments on snippets. If you create a note where
        the body only contains an Award Emoji, GitLab returns this object.
      operationId: createNewSnippetNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewSnippetNoteRequest'
      tags:
        - notes
  '/projects/{id}/snippets/{snippet_id}/notes/{note_id}':
    get:
      summary: Get single snippet note
      description: Returns a single note for a given snippet.
      operationId: getSingleSnippetNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project snippet
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a snippet note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleSnippetNoteResponse'
      tags:
        - notes
    put:
      summary: Modify existing snippet note
      description: Modify existing note of a snippet.
      operationId: modifyExistingSnippetNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a snippet note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingSnippetNoteRequest'
      tags:
        - notes
    delete:
      summary: Delete a snippet note
      description: Deletes an existing note of a snippet.
      operationId: deleteASnippetNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - notes
  '/projects/{id}/merge_requests/{merge_request_iid}/notes':
    get:
      summary: List all merge request notes
      description: Gets a list of all notes for a single merge request.
      operationId: listAllMergeRequestNotes
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a project merge request
          required: true
          schema:
            type: integer
        - name: sort
          in: query
          description: Return merge request notes sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Return merge request notes ordered by created_at or updated_at fields. Default is created_at
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - notes
    post:
      summary: Create new merge request note
      description: >-
        Creates a new note for a single merge request. If you create a note where the body only contains an Award Emoji,
        GitLab returns this object.
      operationId: createNewMergeRequestNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a project merge request
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewMergeRequestNoteRequest'
      tags:
        - notes
  '/projects/{id}/merge_requests/{merge_request_iid}/notes/{note_id}':
    get:
      summary: Get single merge request note
      description: Returns a single note for a given merge request.
      operationId: getSingleMergeRequestNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a project merge request
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a merge request note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleMergeRequestNoteResponse'
      tags:
        - notes
    put:
      summary: Modify existing merge request note
      description: Modify existing note of a merge request.
      operationId: modifyExistingMergeRequestNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a project merge request
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingIssueNoteRequest'
      tags:
        - notes
    delete:
      summary: Delete a merge request note
      description: Deletes an existing note of a merge request.
      operationId: deleteAMergeRequestNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - notes
  '/groups/{id}/epics/{epic_id}/notes':
    get:
      summary: List all epic notes
      description: Gets a list of all notes for a single epic. Epic notes are comments users can post to an epic.
      operationId: listAllEpicNotes
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of a group epic
          required: true
          schema:
            type: integer
        - name: sort
          in: query
          description: Return epic notes sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Return epic notes ordered by created_at or updated_at fields. Default is created_at
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - notes
    post:
      summary: Create new epic note
      description: >-
        Creates a new note for a single epic. Epic notes are comments users can post to an epic. If you create a note
        where the body only contains an Award Emoji, GitLab returns this object.
      operationId: createNewEpicNote
      parameters:
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingIssueNoteRequest'
      tags:
        - notes
  '/groups/{id}/epics/{epic_id}/notes/{note_id}':
    get:
      summary: Get single epic note
      description: Returns a single note for a given epic.
      operationId: getSingleEpicNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleEpicNoteResponse'
      tags:
        - notes
    put:
      summary: Modify existing epic note
      description: Modify existing note of an epic.
      operationId: modifyExistingEpicNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/modifyExistingIssueNoteRequest'
      tags:
        - notes
    delete:
      summary: Delete an epic note
      description: Deletes an existing note of an epic.
      operationId: deleteAnEpicNote
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: note_id
          in: path
          description: The ID of a note
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - notes
  /notification_settings:
    get:
      summary: Global notification settings
      description: Get current notification settings and email address.
      operationId: globalNotificationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/globalNotificationSettingsResponse'
      tags:
        - notification_settings
    put:
      summary: Update global notification settings
      description: Update current notification settings and email address.
      operationId: updateGlobalNotificationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/globalNotificationSettingsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateGlobalNotificationSettingsRequest'
      tags:
        - notification_settings
  '/groups/{id}/notification_settings':
    get:
      summary: Group / project level notification settings
      description: Get current group or project notification settings.
      operationId: groupProjectLevelNotificationSettings
      parameters:
        - name: id
          in: path
          description: 'The ID, or URL-encoded path, of the group or project.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupProjectLevelNotificationSettingsResponse'
      tags:
        - notification_settings
    put:
      summary: Update group/project level notification settings
      description: Update current group/project notification settings.
      operationId: updateGroupProjectLevelNotificationSettings
      parameters:
        - name: id
          in: path
          description: 'The ID, or URL-encoded path, of the group or project'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateGroupProjectLevelNotificationSettingsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateGroupProjectLevelNotificationSettingsRequest'
      tags:
        - notification_settings
  '/projects/{id}/packages':
    get:
      summary: Within a project
      description: >-
        Get a list of project packages. All package types are included in results. When accessed without authentication,
        only packages of public projects are returned. By default, packages with default and error status are returned.
        Use the status parameter to view other packages.
      operationId: withinAProject
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: 'The field to use as order. One of created_at (default), name, version, or type.'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: 'The direction of the order, either asc (default) for ascending order or desc for descending order.'
          required: false
          schema:
            type: string
        - name: package_type
          in: query
          description: >-
            Filter the returned packages by type. One of conan, maven, npm, pypi, composer, nuget, helm,
            terraform_module, or golang. (Introduced in GitLab 12.9)
          required: false
          schema:
            type: string
        - name: package_name
          in: query
          description: Filter the project packages with a fuzzy search by name. (Introduced in GitLab 12.9)
          required: false
          schema:
            type: string
        - name: include_versionless
          in: query
          description: 'When set to true, versionless packages are included in the response. (Introduced in GitLab 13.8)'
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: >-
            Filter the returned packages by status. One of default (default), hidden, processing, error, or
            pending_destruction. (Introduced in GitLab 13.9)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withinAProjectResponse'
      tags:
        - packages
  '/groups/{id}/packages':
    get:
      summary: Within a group
      description: >-
        Get a list of project packages at the group level. When accessed without authentication, only packages of public
        projects are returned. By default, packages with default and error status are returned. Use the status parameter
        to view other packages.
      operationId: withinAGroup
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the group.
          required: true
          schema:
            type: string
        - name: exclude_subgroups
          in: query
          description: >-
            If the parameter is included as true, packages from projects from subgroups are not listed. Default is
            false.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: 'The field to use as order. One of created_at (default), name, version, type, or project_path.'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: 'The direction of the order, either asc (default) for ascending order or desc for descending order.'
          required: false
          schema:
            type: string
        - name: package_type
          in: query
          description: >-
            Filter the returned packages by type. One of conan, maven, npm, pypi, composer, nuget, helm, or golang.
            (Introduced in GitLab 12.9)
          required: false
          schema:
            type: string
        - name: package_name
          in: query
          description: Filter the project packages with a fuzzy search by name. (Introduced in GitLab 13.0)
          required: false
          schema:
            type: string
        - name: include_versionless
          in: query
          description: 'When set to true, versionless packages are included in the response. (Introduced in GitLab 13.8)'
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: >-
            Filter the returned packages by status. One of default (default), hidden, processing, error, or
            pending_destruction. (Introduced in GitLab 13.9)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/withinAGroupResponse'
      tags:
        - packages
  '/projects/{id}/packages/{package_id}':
    get:
      summary: Get a project package
      description: Get a single project package.
      operationId: getAProjectPackage
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: package_id
          in: path
          description: ID of a package.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAProjectPackageResponse'
      tags:
        - packages
    delete:
      summary: Delete a project package
      description: Deletes a project package.
      operationId: deleteAProjectPackage
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_id
          in: path
          description: ID of a package.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - packages
  '/projects/{id}/packages/{package_id}/package_files':
    get:
      summary: List package files
      description: Get a list of package files of a single package.
      operationId: listPackageFiles
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: package_id
          in: path
          description: ID of a package.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPackageFilesResponse'
      tags:
        - packages
  '/projects/{id}/packages/{package_id}/package_files/{package_file_id}':
    delete:
      summary: Delete a package file
      description: 'Delete a package file:'
      operationId: deleteAPackageFile
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: package_id
          in: path
          description: ID of a package.
          required: true
          schema:
            type: integer
        - name: package_file_id
          in: path
          description: ID of a package file.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - packages
  '/groups/{id}/debian_distributions':
    get:
      summary: List all Debian distributions in a group
      description: Lists Debian distributions in the given group.
      operationId: listAllDebianDistributionsInAGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group.
          required: true
          schema:
            type: string
        - name: codename
          in: query
          description: Filter with specific codename.
          required: false
          schema:
            type: string
        - name: suite
          in: query
          description: Filter with specific suite.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllDebianDistributionsInAGroupResponse'
      tags:
        - packages__debian_group_distributions
    post:
      summary: Create a Debian group distribution
      description: Creates a Debian group distribution.
      operationId: createADebianGroupDistribution
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleDebianGroupDistributionResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createADebianGroupDistributionRequest'
      tags:
        - packages__debian_group_distributions
  '/groups/{id}/debian_distributions/{codename}':
    get:
      summary: Single Debian group distribution
      description: Gets a single Debian group distribution.
      operationId: singleDebianGroupDistribution
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The codename of a distribution.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleDebianGroupDistributionResponse'
      tags:
        - packages__debian_group_distributions
    put:
      summary: Update a Debian group distribution
      description: Updates a Debian group distribution.
      operationId: updateADebianGroupDistribution
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian distribution’s new codename.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleDebianGroupDistributionResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateADebianGroupDistributionRequest'
      tags:
        - packages__debian_group_distributions
    delete:
      summary: Delete a Debian group distribution
      description: Deletes a Debian group distribution.
      operationId: deleteADebianGroupDistribution
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The codename of the Debian distribution.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - packages__debian_group_distributions
  '/groups/{id}/debian_distributions/{codename}/key.asc':
    get:
      summary: Single Debian group distribution key
      description: Gets a single Debian group distribution key.
      operationId: singleDebianGroupDistributionKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The codename of a distribution.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - packages__debian_group_distributions
  '/projects/{id}/debian_distributions':
    get:
      summary: List all Debian distributions in a project
      description: Lists Debian distributions in the given project.
      operationId: listAllDebianDistributionsInAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: codename
          in: query
          description: Filter with a specific codename.
          required: false
          schema:
            type: string
        - name: suite
          in: query
          description: Filter with a specific suite.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllDebianDistributionsInAProjectResponse'
      tags:
        - packages__debian_project_distributions
    post:
      summary: Create a Debian project distribution
      description: Creates a Debian project distribution.
      operationId: createADebianProjectDistribution
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleDebianProjectDistributionResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createADebianProjectDistributionRequest'
      tags:
        - packages__debian_project_distributions
  '/projects/{id}/debian_distributions/{codename}':
    get:
      summary: Single Debian project distribution
      description: Gets a single Debian project distribution.
      operationId: singleDebianProjectDistribution
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The codename of a distribution.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleDebianProjectDistributionResponse'
      tags:
        - packages__debian_project_distributions
    put:
      summary: Update a Debian project distribution
      description: Updates a Debian project distribution.
      operationId: updateADebianProjectDistribution
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian distribution’s codename.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleDebianProjectDistributionResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateADebianProjectDistributionRequest'
      tags:
        - packages__debian_project_distributions
    delete:
      summary: Delete a Debian project distribution
      description: Deletes a Debian project distribution.
      operationId: deleteADebianProjectDistribution
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The Debian distribution’s codename.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - packages__debian_project_distributions
  '/projects/{id}/debian_distributions/{codename}/key.asc':
    get:
      summary: Single Debian project distribution key
      description: Gets a single Debian project distribution key.
      operationId: singleDebianProjectDistributionKey
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: codename
          in: path
          description: The codename of a distribution.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - packages__debian_project_distributions
  /pages/domains:
    get:
      summary: List all Pages domains
      description: Get a list of all Pages domains. The user must have administrator access.
      operationId: listAllPagesDomains
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllPagesDomainsResponse'
      tags:
        - pages_domains
  '/projects/{id}/pages/domains':
    get:
      summary: List Pages domains
      description: Get a list of project Pages domains. The user must have permissions to view Pages domains.
      operationId: listPagesDomains
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPagesDomainsResponse'
      tags:
        - pages_domains
    post:
      summary: Create new Pages domain
      description: Creates a new Pages domain. The user must have permissions to create new Pages domains.
      operationId: createNewPagesDomain
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singlePagesDomainResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewPagesDomainRequest'
      tags:
        - pages_domains
  '/projects/{id}/pages/domains/{domain}':
    get:
      summary: Single Pages domain
      description: Get a single project Pages domain. The user must have permissions to view Pages domains.
      operationId: singlePagesDomain
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: domain
          in: path
          description: The custom domain indicated by the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singlePagesDomainResponse'
      tags:
        - pages_domains
    put:
      summary: Update Pages domain
      description: Updates an existing project Pages domain. The user must have permissions to change an existing Pages domains.
      operationId: updatePagesDomain
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: domain
          in: path
          description: The custom domain indicated by the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updatePagesDomainRequest'
      tags:
        - pages_domains
    delete:
      summary: Delete Pages domain
      description: Deletes an existing project Pages domain.
      operationId: deletePagesDomain
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: domain
          in: path
          description: The custom domain indicated by the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - pages_domains
  /personal_access_tokens:
    get:
      summary: List personal access tokens
      description: Get a list of personal access tokens.
      operationId: listPersonalAccessTokens
      parameters:
        - name: user_id
          in: query
          description: The ID of the user to filter by
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listPersonalAccessTokensResponse'
      tags:
        - personal_access_tokens
  '/personal_access_tokens/{id}':
    delete:
      summary: Using a personal access token ID
      description: Revoke a personal access token using its ID.
      operationId: usingAPersonalAccessTokenId
      parameters:
        - name: id
          in: path
          description: ID of personal access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - personal_access_tokens
  /personal_access_tokens/self:
    delete:
      summary: Using a request header
      description: Revokes a personal access token that is passed in using a request header.
      operationId: usingARequestHeader
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - personal_access_tokens
  '/projects/{id}/pipeline_schedules':
    get:
      summary: Get all pipeline schedules
      description: Get a list of the pipeline schedules of a project.
      operationId: getAllPipelineSchedules
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: 'The scope of pipeline schedules, one of: active, inactive'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllPipelineSchedulesResponse'
      tags:
        - pipeline_schedules
    post:
      summary: Create a new pipeline schedule
      description: Create a new pipeline schedule of a project.
      operationId: createANewPipelineSchedule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewPipelineScheduleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewPipelineScheduleRequest'
      tags:
        - pipeline_schedules
  '/projects/{id}/pipeline_schedules/{pipeline_schedule_id}':
    get:
      summary: Get a single pipeline schedule
      description: Get the pipeline schedule of a project.
      operationId: getASinglePipelineSchedule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASinglePipelineScheduleResponse'
      tags:
        - pipeline_schedules
    put:
      summary: Edit a pipeline schedule
      description: 'Updates the pipeline schedule of a project. Once the update is done, it is rescheduled automatically.'
      operationId: editAPipelineSchedule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewPipelineScheduleResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewPipelineScheduleRequest'
      tags:
        - pipeline_schedules
    delete:
      summary: Delete a pipeline schedule
      description: Delete the pipeline schedule of a project.
      operationId: deleteAPipelineSchedule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewPipelineScheduleResponse'
      tags:
        - pipeline_schedules
  '/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/take_ownership':
    post:
      summary: Take ownership of a pipeline schedule
      description: Update the owner of the pipeline schedule of a project.
      operationId: takeOwnershipOfAPipelineSchedule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewPipelineScheduleResponse'
      tags:
        - pipeline_schedules
  '/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/play':
    post:
      summary: Run a scheduled pipeline immediately
      description: >-
        Trigger a new scheduled pipeline, which runs immediately. The next scheduled run of this pipeline is not
        affected.
      operationId: runAScheduledPipelineImmediately
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runAScheduledPipelineImmediatelyResponse'
      tags:
        - pipeline_schedules
  '/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables':
    post:
      summary: Create a new pipeline schedule variable
      description: Create a new variable of a pipeline schedule.
      operationId: createANewPipelineScheduleVariable
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewPipelineScheduleVariableRequest'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewPipelineScheduleVariableRequest'
      tags:
        - pipeline_schedules
  '/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}':
    put:
      summary: Edit a pipeline schedule variable
      description: Updates the variable of a pipeline schedule.
      operationId: editAPipelineScheduleVariable
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID
          required: true
          schema:
            type: integer
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createANewPipelineScheduleVariableRequest'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editAPipelineScheduleVariableRequest'
      tags:
        - pipeline_schedules
    delete:
      summary: Delete a pipeline schedule variable
      description: Delete the variable of a pipeline schedule.
      operationId: deleteAPipelineScheduleVariable
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_schedule_id
          in: path
          description: The pipeline schedule ID
          required: true
          schema:
            type: integer
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAPipelineScheduleVariableResponse'
      tags:
        - pipeline_schedules
  '/projects/{id}/triggers':
    get:
      summary: List project triggers
      description: Get a list of project’s build triggers.
      operationId: listProjectTriggers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectTriggersResponse'
      tags:
        - pipeline_triggers
    post:
      summary: Create a project trigger
      description: Create a trigger for a project.
      operationId: createAProjectTrigger
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTriggerDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAProjectTriggerRequest'
      tags:
        - pipeline_triggers
  '/projects/{id}/triggers/{trigger_id}':
    get:
      summary: Get trigger details
      description: Get details of project’s build trigger.
      operationId: getTriggerDetails
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: trigger_id
          in: path
          description: The trigger ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTriggerDetailsResponse'
      tags:
        - pipeline_triggers
    put:
      summary: Update a project trigger
      description: Update a trigger for a project.
      operationId: updateAProjectTrigger
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: trigger_id
          in: path
          description: The trigger ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTriggerDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAProjectTriggerRequest'
      tags:
        - pipeline_triggers
    delete:
      summary: Remove a project trigger
      description: Remove a project’s build trigger.
      operationId: removeAProjectTrigger
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: trigger_id
          in: path
          description: The trigger ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - pipeline_triggers
  '/projects/{id}/pipelines':
    get:
      summary: List project pipelines
      description: >-
        List pipelines in a project. Child pipelines are not included in the results, but you can get child pipeline
        individually.
      operationId: listProjectPipelines
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: 'The scope of pipelines, one of: running, pending, finished, branches, tags'
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: >-
            The status of pipelines, one of: created, waiting_for_resource, preparing, pending, running, success,
            failed, canceled, skipped, manual, scheduled
          required: false
          schema:
            type: string
        - name: source
          in: query
          description: >-
            In GitLab 14.3 and later, how the pipeline was triggered, one of: push, web, trigger, schedule, api,
            external, pipeline, chat, webide, merge_request_event, external_pull_request_event, parent_pipeline,
            ondemand_dast_scan, or ondemand_dast_validation.
          required: false
          schema:
            type: string
        - name: ref
          in: query
          description: The ref of pipelines
          required: false
          schema:
            type: string
        - name: sha
          in: query
          description: The SHA of pipelines
          required: false
          schema:
            type: string
        - name: yaml_errors
          in: query
          description: Returns pipelines with invalid configurations
          required: false
          schema:
            type: string
        - name: username
          in: query
          description: The username of the user who triggered pipelines
          required: false
          schema:
            type: string
        - name: updated_after
          in: query
          description: 'Return pipelines updated after the specified date. Expected in ISO 8601 format (2019-03-15T08:00:00Z).'
          required: false
          schema:
            type: string
        - name: updated_before
          in: query
          description: 'Return pipelines updated before the specified date. Expected in ISO 8601 format (2019-03-15T08:00:00Z).'
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: 'Order pipelines by id, status, ref, updated_at or user_id (default: id)'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sort pipelines in asc or desc order (default: desc)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectPipelinesResponse'
      tags:
        - pipelines
  '/projects/{id}/pipelines/{pipeline_id}':
    get:
      summary: Get a single pipeline
      description: Get one pipeline from a project.
      operationId: getASinglePipeline
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The ID of a pipeline
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASinglePipelineResponse'
      tags:
        - pipelines
    delete:
      summary: Delete a pipeline
      description: ''
      operationId: deleteAPipeline
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The ID of a pipeline
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - pipelines
  '/projects/{id}/pipelines/{pipeline_id}/variables':
    get:
      summary: Get variables of a pipeline
      description: Example of response
      operationId: getVariablesOfAPipeline
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The ID of a pipeline
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVariablesOfAPipelineResponse'
      tags:
        - pipelines
  '/projects/{id}/pipelines/{pipeline_id}/test_report':
    get:
      summary: Get a pipeline’s test report
      description: 'Sample request:'
      operationId: getAPipelineTestReport
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The ID of a pipeline
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAPipelineTestReportResponse'
      tags:
        - pipelines
  '/projects/{id}/pipelines/{pipeline_id}/test_report_summary':
    get:
      summary: Get a pipeline’s test report summary
      description: 'Sample request:'
      operationId: getAPipelineTestReportSummary
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The ID of a pipeline
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAPipelineTestReportSummaryResponse'
      tags:
        - pipelines
  '/projects/{id}/pipeline':
    post:
      summary: Create a new pipeline
      description: Example of response
      operationId: createANewPipeline
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASinglePipelineResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewPipelineRequest'
      tags:
        - pipelines
  '/projects/{id}/pipelines/{pipeline_id}/retry':
    post:
      summary: Retry jobs in a pipeline
      description: 'Response:'
      operationId: retryJobsInAPipeline
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The ID of a pipeline
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASinglePipelineResponse'
      tags:
        - pipelines
  '/projects/{id}/pipelines/{pipeline_id}/cancel':
    post:
      summary: Cancel a pipeline’s jobs
      description: 'Response:'
      operationId: cancelAPipelineJobs
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: pipeline_id
          in: path
          description: The ID of a pipeline
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASinglePipelineResponse'
      tags:
        - pipelines
  /application/plan_limits:
    get:
      summary: Get current plan limits
      description: List the current limits of a plan on the GitLab instance.
      operationId: getCurrentPlanLimits
      parameters:
        - name: plan_name
          in: query
          description: 'Name of the plan to get the limits from. Default: default.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCurrentPlanLimitsResponse'
      tags:
        - plan_limits
    put:
      summary: Change plan limits
      description: Modify the limits of a plan on the GitLab instance.
      operationId: changePlanLimits
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changePlanLimitsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changePlanLimitsRequest'
      tags:
        - plan_limits
  '/projects/{id}/access_tokens':
    get:
      summary: List project access tokens
      description: Get a list of project access tokens.
      operationId: listProjectAccessTokens
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectAccessTokensResponse'
      tags:
        - project_access_tokens
    post:
      summary: Create a project access token
      description: Create a project access token.
      operationId: createAProjectAccessToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAProjectAccessTokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAProjectAccessTokenRequest'
      tags:
        - project_access_tokens
  '/projects/{id}/access_tokens/{token_id}':
    get:
      summary: Get a project access token
      description: Get a project access token by ID.
      operationId: getAProjectAccessToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: ID of the project access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAProjectAccessTokenResponse'
      tags:
        - project_access_tokens
    delete:
      summary: Revoke a project access token
      description: Revoke a project access token.
      operationId: revokeAProjectAccessToken
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: token_id
          in: path
          description: ID of the project access token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - project_access_tokens
  '/projects/{id}/badges':
    get:
      summary: List all badges of a project
      description: Gets a list of a project’s badges and its group badges.
      operationId: listAllBadgesOfAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Name of the badges to return (case-sensitive).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllBadgesOfAProjectResponse'
      tags:
        - project_badges
    post:
      summary: Add a badge to a project
      description: Adds a badge to a project.
      operationId: addABadgeToAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addABadgeToAProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addABadgeToAProjectRequest'
      tags:
        - project_badges
  '/projects/{id}/badges/{badge_id}':
    get:
      summary: Get a badge of a project
      description: Gets a badge of a project.
      operationId: getABadgeOfAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getABadgeOfAProjectResponse'
      tags:
        - project_badges
    put:
      summary: Edit a badge of a project
      description: Updates a badge of a project.
      operationId: editABadgeOfAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addABadgeToAProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addABadgeToAProjectRequest'
      tags:
        - project_badges
    delete:
      summary: Remove a badge from a project
      description: Removes a badge from a project. Only project badges are removed by using this endpoint.
      operationId: removeABadgeFromAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: badge_id
          in: path
          description: The badge ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - project_badges
  '/projects/{id}/badges/render':
    get:
      summary: Preview a badge from a project
      description: Returns how the link_url and image_url final URLs would be after resolving the placeholder interpolation.
      operationId: previewABadgeFromAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: link_url
          in: query
          description: URL of the badge link
          required: true
          schema:
            type: string
        - name: image_url
          in: query
          description: URL of the badge image
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/previewABadgeFromAProjectResponse'
      tags:
        - project_badges
  '/projects/{id}/clusters':
    get:
      summary: List project clusters
      description: Returns a list of project clusters.
      operationId: listProjectClusters
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectClustersResponse'
      tags:
        - project_clusters
  '/projects/{id}/clusters/{cluster_id}':
    get:
      summary: Get a single project cluster
      description: Gets a single project cluster.
      operationId: getASingleProjectCluster
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The ID of the cluster
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectClusterResponse'
      tags:
        - project_clusters
    put:
      summary: Edit project cluster
      description: Updates an existing project cluster.
      operationId: editProjectCluster
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The ID of the cluster
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectClusterResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editProjectClusterRequest'
      tags:
        - project_clusters
    delete:
      summary: Delete project cluster
      description: Deletes an existing project cluster. Does not remove existing resources within the connected Kubernetes cluster.
      operationId: deleteProjectCluster
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: cluster_id
          in: path
          description: The ID of the cluster
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - project_clusters
  '/projects/{id}/clusters/user':
    post:
      summary: Add existing cluster to project
      description: Adds an existing Kubernetes cluster to the project.
      operationId: addExistingClusterToProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addExistingClusterToProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addExistingClusterToProjectRequest'
      tags:
        - project_clusters
  '/projects/{id}/export':
    post:
      summary: Schedule an export
      description: Start a new export.
      operationId: scheduleAnExport
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduleAnExportResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleAnExportRequest'
      tags:
        - project_import_export
    get:
      summary: Export status
      description: Get the status of export.
      operationId: exportStatus
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportStatusResponse'
      tags:
        - project_import_export
  '/projects/{id}/export/download':
    get:
      summary: Export download
      description: Download the finished export.
      operationId: exportDownload
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - project_import_export
  /projects/import:
    post:
      summary: Import a file
      description: >-
        To upload a file from your file system, use the --form argument. This causes cURL to post data using the header
        Content-Type: multipart/form-data. The file= parameter must point to a file on your file system and be preceded
        by @. For example:
      operationId: importAFile
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importAFileResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importAFileRequest'
      tags:
        - project_import_export
  /projects/remote-import:
    post:
      summary: Import a file from a remote object storage
      description: This endpoint is behind a feature flag that is enabled by default.
      operationId: importAFileFromARemoteObjectStorage
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importAFileFromARemoteObjectStorageResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importAFileFromARemoteObjectStorageRequest'
      tags:
        - project_import_export
  /projects/remote-import-s3:
    post:
      summary: Import a file from AWS S3
      description: ''
      operationId: importAFileFromAwsS3
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importAFileFromARemoteObjectStorageResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/importAFileFromAwsS3Request'
      tags:
        - project_import_export
  '/projects/{id}/import':
    get:
      summary: Import status
      description: Get the status of an import.
      operationId: importStatus
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importStatusResponse'
      tags:
        - project_import_export
  '/projects/{id}/variables':
    get:
      summary: List project variables
      description: Get list of a project’s variables.
      operationId: listProjectVariables
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectVariablesResponse'
      tags:
        - project_level_variables
    post:
      summary: Create variable
      description: Create a new variable.
      operationId: createVariable
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showVariableDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/showVariableDetailsResponse'
      tags:
        - project_level_variables
  '/projects/{id}/variables/{key}':
    get:
      summary: Show variable details
      description: Get the details of a project’s specific variable.
      operationId: showVariableDetails
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: 'Available filters: [environment_scope]. See the filter parameter details.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showVariableDetailsResponse'
      tags:
        - project_level_variables
    put:
      summary: Update variable
      description: Update a project’s variable.
      operationId: updateVariable
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/showVariableDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateVariableRequest'
      tags:
        - project_level_variables
    delete:
      summary: Remove variable
      description: Remove a project’s variable.
      operationId: removeVariable
      parameters:
        - name: id
          in: path
          description: The ID of a project or URL-encoded NAMESPACE/PROJECT_NAME of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: The key of a variable
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: 'Available filters: [environment_scope]. See the filter parameter details.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - project_level_variables
  /project_repository_storage_moves:
    get:
      summary: Retrieve all project repository storage moves
      description: 'By default, GET requests return 20 results at a time because the API results are paginated.'
      operationId: retrieveAllProjectRepositoryStorageMoves
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllProjectRepositoryStorageMovesResponse'
      tags:
        - project_repository_storage_moves
    post:
      summary: Schedule repository storage moves for all projects on a storage shard
      description: Schedules repository storage moves for each project repository stored on the source storage shard.
      operationId: scheduleRepositoryStorageMovesForAllProjectsOnAStorageShard
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduleRepositoryStorageMovesForAllProjectsOnAStorageShardResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleRepositoryStorageMovesForAllProjectsOnAStorageShardRequest'
      tags:
        - project_repository_storage_moves
  '/projects/{project_id}/repository_storage_moves':
    get:
      summary: Retrieve all repository storage moves for a project
      description: 'By default, GET requests return 20 results at a time because the API results are paginated.'
      operationId: retrieveAllRepositoryStorageMovesForAProject
      parameters:
        - name: project_id
          in: path
          description: ID of the project
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllProjectRepositoryStorageMovesResponse'
      tags:
        - project_repository_storage_moves
    post:
      summary: Schedule a repository storage move for a project
      description: ''
      operationId: scheduleARepositoryStorageMoveForAProject
      parameters:
        - name: project_id
          in: path
          description: ID of the project
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectRepositoryStorageMoveResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleARepositoryStorageMoveForAProjectRequest'
      tags:
        - project_repository_storage_moves
  '/project_repository_storage_moves/{repository_storage_id}':
    get:
      summary: Get a single project repository storage move
      description: ''
      operationId: getASingleProjectRepositoryStorageMove
      parameters:
        - name: repository_storage_id
          in: path
          description: ID of the project repository storage move
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectRepositoryStorageMoveResponse'
      tags:
        - project_repository_storage_moves
  '/projects/{project_id}/repository_storage_moves/{repository_storage_id}':
    get:
      summary: Get a single repository storage move for a project
      description: ''
      operationId: getASingleRepositoryStorageMoveForAProject
      parameters:
        - name: project_id
          in: path
          description: ID of the project
          required: true
          schema:
            type: integer
        - name: repository_storage_id
          in: path
          description: ID of the project repository storage move
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectRepositoryStorageMoveResponse'
      tags:
        - project_repository_storage_moves
  '/projects/{id}/snippets':
    get:
      summary: List snippets
      description: Get a list of project snippets.
      operationId: listSnippets
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - project_snippets
    post:
      summary: Create new snippet
      description: Creates a new project snippet. The user must have permission to create new snippets.
      operationId: createNewSnippet
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createNewSnippetResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewSnippetRequest'
      tags:
        - project_snippets
  '/projects/{id}/snippets/{snippet_id}':
    get:
      summary: Single snippet
      description: Get a single project snippet.
      operationId: singleSnippet
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project’s snippet
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleSnippetResponse'
      tags:
        - project_snippets
    put:
      summary: Update snippet
      description: Updates an existing project snippet. The user must have permission to change an existing snippet.
      operationId: updateSnippet
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project’s snippet
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createNewSnippetResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSnippetRequest'
      tags:
        - project_snippets
    delete:
      summary: Delete snippet
      description: >-
        Deletes an existing project snippet. This returns a 204 No Content status code if the operation was successfully
        or 404 if the resource was not found.
      operationId: deleteSnippet
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project’s snippet
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - project_snippets
  '/projects/{id}/snippets/{snippet_id}/raw':
    get:
      summary: Snippet content
      description: Returns the raw project snippet as plain text.
      operationId: snippetContent
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project’s snippet
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - project_snippets
  '/projects/{id}/snippets/{snippet_id}/files/{ref}/{file_path}/raw':
    get:
      summary: Snippet repository file content
      description: Returns the raw file content as plain text.
      operationId: snippetRepositoryFileContent
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a project’s snippet
          required: true
          schema:
            type: integer
        - name: ref
          in: path
          description: 'The name of a branch, tag or commit e.g. master'
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: 'The URL-encoded path to the file, e.g. snippet%2Erb'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - project_snippets
  '/projects/{id}/snippets/{snippet_id}/user_agent_detail':
    get:
      summary: Get user agent details
      description: Available only for users with administrator access.
      operationId: getUserAgentDetails
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: snippet_id
          in: path
          description: The ID of a snippet
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserAgentDetailsResponse'
      tags:
        - project_snippets
  '/projects/{id}/templates/{type}':
    get:
      summary: Get all templates of a particular type
      description: ''
      operationId: getAllTemplatesOfAParticularType
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: >-
            The type of the template. Accepted values are: dockerfiles, gitignores, gitlab_ci_ymls, licenses, issues,
            merge_requests
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllTemplatesOfAParticularTypeResponse'
      tags:
        - project_templates
  '/projects/{id}/templates/{type}/{name}':
    get:
      summary: Get one template of a particular type
      description: ''
      operationId: getOneTemplateOfAParticularType
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: >-
            The type of the template. One of: dockerfiles, gitignores, gitlab_ci_ymls, licenses, issues, or
            merge_requests.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: 'The key of the template, as obtained from the collection endpoint'
          required: true
          schema:
            type: string
        - name: source_template_project_id
          in: query
          description: >-
            The project ID where a given template is being stored. This is useful when multiple templates from different
            projects have the same name. If multiple templates have the same name, the match from closest ancestor is
            returned if source_template_project_id is not specified
          required: false
          schema:
            type: integer
        - name: project
          in: query
          description: The project name to use when expanding placeholders in the template. Only affects licenses
          required: false
          schema:
            type: string
        - name: fullname
          in: query
          description: >-
            The full name of the copyright holder to use when expanding placeholders in the template. Only affects
            licenses
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOneTemplateOfAParticularTypeResponse'
      tags:
        - project_templates
  '/projects/{id}/vulnerabilities':
    get:
      summary: List project vulnerabilities
      description: List all of a project’s vulnerabilities.
      operationId: listProjectVulnerabilities
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectVulnerabilitiesResponse'
      tags:
        - project_vulnerabilities
    post:
      summary: New vulnerability
      description: Creates a new vulnerability.
      operationId: newVulnerability
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project which the authenticated user is a member of
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newVulnerabilityResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newVulnerabilityRequest'
      tags:
        - project_vulnerabilities
  /projects:
    get:
      summary: List projects assigned to a topic
      description: Use the Projects API to list all projects assigned to a specific topic.
      operationId: listProjectsAssignedToATopic
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - topics
  '/users/{user_id}/projects':
    get:
      summary: List user projects
      description: >-
        Get a list of visible projects owned by the given user. When accessed without authentication, only public
        projects are returned.
      operationId: listUserProjects
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user.
          required: true
          schema:
            type: string
        - name: archived
          in: query
          description: Limit by archived status.
          required: false
          schema:
            type: string
        - name: id_after
          in: query
          description: Limit results to projects with IDs greater than the specified ID.
          required: false
          schema:
            type: integer
        - name: id_before
          in: query
          description: Limit results to projects with IDs less than the specified ID.
          required: false
          schema:
            type: integer
        - name: membership
          in: query
          description: Limit by projects that the current user is a member of.
          required: false
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit by current user minimal access level.
          required: false
          schema:
            type: integer
        - name: order_by
          in: query
          description: >-
            Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. Default is
            created_at.
          required: false
          schema:
            type: string
        - name: owned
          in: query
          description: Limit by projects explicitly owned by the current user.
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return list of projects matching the search criteria.
          required: false
          schema:
            type: string
        - name: simple
          in: query
          description: >-
            Return only limited fields for each project. This is a no-op without authentication as then only simple
            fields are returned.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return projects sorted in asc or desc order. Default is desc.
          required: false
          schema:
            type: string
        - name: starred
          in: query
          description: Limit by projects starred by the current user.
          required: false
          schema:
            type: string
        - name: statistics
          in: query
          description: Include project statistics. Only available to Reporter or higher level role members.
          required: false
          schema:
            type: string
        - name: visibility
          in: query
          description: 'Limit by visibility public, internal, or private.'
          required: false
          schema:
            type: string
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response. (administrator only)
          required: false
          schema:
            type: string
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature.
          required: false
          schema:
            type: string
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature.
          required: false
          schema:
            type: string
        - name: with_programming_language
          in: query
          description: Limit by projects which use the given programming language.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUserProjectsResponse'
      tags:
        - projects
  '/users/{user_id}/starred_projects':
    get:
      summary: List projects starred by a user
      description: >-
        Get a list of visible projects starred by the given user. When accessed without authentication, only public
        projects are returned.
      operationId: listProjectsStarredByAUser
      parameters:
        - name: user_id
          in: path
          description: The ID or username of the user.
          required: true
          schema:
            type: string
        - name: archived
          in: query
          description: Limit by archived status.
          required: false
          schema:
            type: string
        - name: membership
          in: query
          description: Limit by projects that the current user is a member of.
          required: false
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit by current user minimal access level.
          required: false
          schema:
            type: integer
        - name: order_by
          in: query
          description: >-
            Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. Default is
            created_at.
          required: false
          schema:
            type: string
        - name: owned
          in: query
          description: Limit by projects explicitly owned by the current user.
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return list of projects matching the search criteria.
          required: false
          schema:
            type: string
        - name: simple
          in: query
          description: >-
            Return only limited fields for each project. This is a no-op without authentication as then only simple
            fields are returned.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return projects sorted in asc or desc order. Default is desc.
          required: false
          schema:
            type: string
        - name: starred
          in: query
          description: Limit by projects starred by the current user.
          required: false
          schema:
            type: string
        - name: statistics
          in: query
          description: Include project statistics. Only available to Reporter or higher level role members.
          required: false
          schema:
            type: string
        - name: visibility
          in: query
          description: 'Limit by visibility public, internal, or private.'
          required: false
          schema:
            type: string
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response. (administrator only)
          required: false
          schema:
            type: string
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature.
          required: false
          schema:
            type: string
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectsStarredByAUserResponse'
      tags:
        - projects
  '/projects/{id}':
    get:
      summary: Get single project
      description: >-
        Get a specific project. This endpoint can be accessed without authentication if the project is publicly
        accessible.
      operationId: getSingleProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: license
          in: query
          description: Include project license data.
          required: false
          schema:
            type: string
        - name: statistics
          in: query
          description: Include project statistics. Only available to Reporter or higher level role members.
          required: false
          schema:
            type: string
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response. (administrators only)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSingleProjectResponse'
      tags:
        - projects
    put:
      summary: Upload a project avatar
      description: Uploads an avatar to the specified project.
      operationId: uploadAProjectAvatar
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadAProjectAvatarResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadAProjectAvatarRequest'
      tags:
        - projects
    delete:
      summary: Delete project
      description: 'This endpoint:'
      operationId: deleteProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/users':
    get:
      summary: Get project users
      description: Get the users list of a project.
      operationId: getProjectUsers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Search for specific users.
          required: false
          schema:
            type: string
        - name: skip_users
          in: query
          description: Filter out users with the specified IDs.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getProjectUsersResponse'
      tags:
        - projects
  '/projects/{id}/groups':
    get:
      summary: List a project’s groups
      description: Get a list of ancestor groups for this project.
      operationId: listAProjectGroups
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Search for specific groups.
          required: false
          schema:
            type: string
        - name: shared_min_access_level
          in: query
          description: Limit to shared groups with at least this access level.
          required: false
          schema:
            type: integer
        - name: shared_visible_only
          in: query
          description: Limit to shared groups user has access to.
          required: false
          schema:
            type: string
        - name: skip_groups
          in: query
          description: Skip the group IDs passed.
          required: false
          schema:
            type: string
        - name: with_shared
          in: query
          description: Include projects shared with this group. Default is false.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAProjectGroupsResponse'
      tags:
        - projects
  '/projects/user/{user_id}':
    post:
      summary: Create project for user
      description: Creates a new project owned by the specified user. Available only for administrators.
      operationId: createProjectForUser
      parameters:
        - name: user_id
          in: path
          description: The user ID of the project owner.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProjectForUserRequest'
      tags:
        - projects
  '/projects/{id}/fork':
    post:
      summary: Fork project
      description: Forks a project into the user namespace of the authenticated user or the one provided.
      operationId: forkProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forkProjectRequest'
      tags:
        - projects
    delete:
      summary: Delete an existing forked from relationship
      description: ''
      operationId: deleteAnExistingForkedFromRelationship
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/forks':
    get:
      summary: List forks of a project
      description: >-
        List the projects accessible to the calling user that have an established, forked relationship with the
        specified project
      operationId: listForksOfAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: archived
          in: query
          description: Limit by archived status.
          required: false
          schema:
            type: string
        - name: membership
          in: query
          description: Limit by projects that the current user is a member of.
          required: false
          schema:
            type: string
        - name: min_access_level
          in: query
          description: Limit by current user minimal access level.
          required: false
          schema:
            type: integer
        - name: order_by
          in: query
          description: >-
            Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. Default is
            created_at.
          required: false
          schema:
            type: string
        - name: owned
          in: query
          description: Limit by projects explicitly owned by the current user.
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return list of projects matching the search criteria.
          required: false
          schema:
            type: string
        - name: simple
          in: query
          description: >-
            Return only limited fields for each project. This is a no-op without authentication as then only simple
            fields are returned.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return projects sorted in asc or desc order. Default is desc.
          required: false
          schema:
            type: string
        - name: starred
          in: query
          description: Limit by projects starred by the current user.
          required: false
          schema:
            type: string
        - name: statistics
          in: query
          description: Include project statistics. Only available to Reporter or higher level role members.
          required: false
          schema:
            type: string
        - name: visibility
          in: query
          description: 'Limit by visibility public, internal, or private.'
          required: false
          schema:
            type: string
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response. (administrators only)
          required: false
          schema:
            type: string
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature.
          required: false
          schema:
            type: string
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listForksOfAProjectResponse'
      tags:
        - projects
  '/projects/{id}/star':
    post:
      summary: Star a project
      description: Stars a given project. Returns status code 304 if the project is already starred.
      operationId: starAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/starAProjectResponse'
      tags:
        - projects
  '/projects/{id}/unstar':
    post:
      summary: Unstar a project
      description: Unstars a given project. Returns status code 304 if the project is not starred.
      operationId: unstarAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/starAProjectResponse'
      tags:
        - projects
  '/projects/{id}/starrers':
    get:
      summary: List starrers of a project
      description: List the users who starred the specified project.
      operationId: listStarrersOfAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Search for specific users.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listStarrersOfAProjectResponse'
      tags:
        - projects
  '/projects/{id}/languages':
    get:
      summary: Languages
      description: Get languages used in a project with percentage value.
      operationId: languages
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/languagesResponse'
      tags:
        - projects
  '/projects/{id}/archive':
    post:
      summary: Archive a project
      description: >-
        Archives the project if the user is either an administrator or the owner of this project. This action is
        idempotent, thus archiving an already archived project does not change the project.
      operationId: archiveAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/archiveAProjectResponse'
      tags:
        - projects
  '/projects/{id}/unarchive':
    post:
      summary: Unarchive a project
      description: >-
        Unarchives the project if the user is either an administrator or the owner of this project. This action is
        idempotent, thus unarchiving a non-archived project doesn’t change the project.
      operationId: unarchiveAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/archiveAProjectResponse'
      tags:
        - projects
  '/projects/{id}/restore':
    post:
      summary: Restore project marked for deletion
      description: Restores project marked for deletion.
      operationId: restoreProjectMarkedForDeletion
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/uploads':
    post:
      summary: Upload a file
      description: >-
        Uploads a file to the specified project to be used in an issue or merge request description, or a comment.
        GitLab versions 14.0 and later enforce this limit.
      operationId: uploadAFile
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadAFileResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadAFileRequest'
      tags:
        - projects
  '/projects/{id}/share':
    post:
      summary: Share project with group
      description: Allow to share project with group.
      operationId: shareProjectWithGroup
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shareProjectWithGroupRequest'
      tags:
        - projects
  '/projects/{id}/share/{group_id}':
    delete:
      summary: Delete a shared project link within a group
      description: Unshare the project from the group. Returns 204 and no content on success.
      operationId: deleteASharedProjectLinkWithinAGroup
      parameters:
        - name: group_id
          in: path
          description: The ID of the group.
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/import_project_members/{project_id}':
    post:
      summary: Import project members
      description: Import members from another project.
      operationId: importProjectMembers
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the target project to receive the members.
          required: true
          schema:
            type: string
        - name: project_id
          in: path
          description: The ID or URL-encoded path of the source project to import the members from.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/hooks':
    get:
      summary: List project hooks
      description: Get a list of project hooks.
      operationId: listProjectHooks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
    post:
      summary: Add project hook
      description: Adds a hook to a specified project.
      operationId: addProjectHook
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addProjectHookRequest'
      tags:
        - projects
  '/projects/{id}/hooks/{hook_id}':
    get:
      summary: Get project hook
      description: Get a specific hook for a project.
      operationId: getProjectHook
      parameters:
        - name: hook_id
          in: path
          description: The ID of a project hook.
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getProjectHookResponse'
      tags:
        - projects
    put:
      summary: Edit project hook
      description: Edits a hook for a specified project.
      operationId: editProjectHook
      parameters:
        - name: hook_id
          in: path
          description: The ID of the project hook.
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addProjectHookRequest'
      tags:
        - projects
    delete:
      summary: Delete project hook
      description: >-
        Removes a hook from a project. This is an idempotent method and can be called multiple times. Either the hook is
        available or not.
      operationId: deleteProjectHook
      parameters:
        - name: hook_id
          in: path
          description: The ID of the project hook.
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/fork/{forked_from_id}':
    post:
      summary: Create a forked from/to relation between existing projects
      description: ''
      operationId: createAForkedFromToRelationBetweenExistingProjects
      parameters:
        - name: forked_from_id
          in: path
          description: The ID of the project that was forked from.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/housekeeping':
    post:
      summary: Start the Housekeeping task for a project
      description: ''
      operationId: startTheHousekeepingTaskForAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/push_rule':
    get:
      summary: Get project push rules
      description: Get the push rules of a project.
      operationId: getProjectPushRules
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getProjectPushRulesResponse'
      tags:
        - projects
    post:
      summary: Add project push rule
      description: Adds a push rule to a specified project.
      operationId: addProjectPushRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addProjectPushRuleRequest'
      tags:
        - projects
    put:
      summary: Edit project push rule
      description: Edits a push rule for a specified project.
      operationId: editProjectPushRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addProjectPushRuleRequest'
      tags:
        - projects
    delete:
      summary: Delete project push rule
      description: >-
        Removes a push rule from a project. This is an idempotent method and can be called multiple times. Either the
        push rule is available or not.
      operationId: deleteProjectPushRule
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/transfer':
    put:
      summary: Transfer a project to a new namespace
      description: See the Project documentation for prerequisites to transfer a project.
      operationId: transferAProjectToANewNamespace
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transferAProjectToANewNamespaceResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transferAProjectToANewNamespaceRequest'
      tags:
        - projects
  '/projects/{id}/mirror/pull':
    post:
      summary: Start the pull mirroring process for a Project
      description: ''
      operationId: startThePullMirroringProcessForAProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/snapshot':
    get:
      summary: Download snapshot of a Git repository
      description: This endpoint may only be accessed by an administrative user.
      operationId: downloadSnapshotOfAGitRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: wiki
          in: query
          description: 'Whether to download the wiki, rather than project, repository.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - projects
  '/projects/{id}/storage':
    get:
      summary: Get the path to repository storage
      description: Get the path to repository storage for specified project. Available for administrators only.
      operationId: getThePathToRepositoryStorage
      parameters:
        - name: id
          in: path
          description: ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getThePathToRepositoryStorageResponse'
      tags:
        - projects
  '/projects/{id}/protected_branches':
    get:
      summary: List protected branches
      description: >-
        Gets a list of protected branches from a project as they are defined in the UI. If a wildcard is set, it is
        returned instead of the exact name of the branches that match that wildcard.
      operationId: listProtectedBranches
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Name or part of the name of protected branches to be searched for
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProtectedBranchesResponse'
      tags:
        - protected_branches
    post:
      summary: Protect repository branches
      description: Protects a single repository branch or several project repository branches using a wildcard protected branch.
      operationId: protectRepositoryBranches
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectRepositoryBranchesResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectRepositoryBranchesRequest'
      tags:
        - protected_branches
  '/projects/{id}/protected_branches/{name}':
    get:
      summary: Get a single protected branch or wildcard protected branch
      description: Gets a single protected branch or wildcard protected branch.
      operationId: getASingleProtectedBranchOrWildcardProtectedBranch
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the branch or wildcard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProtectedBranchOrWildcardProtectedBranchResponse'
      tags:
        - protected_branches
    delete:
      summary: Unprotect repository branches
      description: Unprotects the given protected branch or wildcard protected branch.
      operationId: unprotectRepositoryBranches
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the branch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - protected_branches
    patch:
      summary: Require code owner approvals for a single branch
      description: Update the “code owner approval required” option for the given protected branch.
      operationId: requireCodeOwnerApprovalsForASingleBranch
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the branch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requireCodeOwnerApprovalsForASingleBranchRequest'
      tags:
        - protected_branches
  '/projects/{id}/protected_environments':
    get:
      summary: List protected environments
      description: 'Gets a list of protected environments from a project:'
      operationId: listProtectedEnvironments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProtectedEnvironmentsResponse'
      tags:
        - protected_environments
    post:
      summary: Protect repository environments
      description: 'Protects a single environment:'
      operationId: protectRepositoryEnvironments
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectRepositoryEnvironmentsRequest'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectRepositoryEnvironmentsRequest'
      tags:
        - protected_environments
  '/projects/{id}/protected_environments/{name}':
    get:
      summary: Get a single protected environment
      description: 'Gets a single protected environment:'
      operationId: getASingleProtectedEnvironment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the protected environment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProtectedEnvironmentResponse'
      tags:
        - protected_environments
    delete:
      summary: Unprotect environment
      description: 'Unprotects the given protected environment:'
      operationId: unprotectEnvironment
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the protected environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - protected_environments
  '/projects/{id}/protected_tags':
    get:
      summary: List protected tags
      description: ''
      operationId: listProtectedTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProtectedTagsResponse'
      tags:
        - protected_tags
    post:
      summary: Protect repository tags
      description: Protects a single repository tag or several project repository tags using a wildcard protected tag.
      operationId: protectRepositoryTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProtectedTagOrWildcardProtectedTagResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectRepositoryTagsRequest'
      tags:
        - protected_tags
  '/projects/{id}/protected_tags/{name}':
    get:
      summary: Get a single protected tag or wildcard protected tag
      description: ''
      operationId: getASingleProtectedTagOrWildcardProtectedTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the tag or wildcard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProtectedTagOrWildcardProtectedTagResponse'
      tags:
        - protected_tags
    delete:
      summary: Unprotect repository tags
      description: Unprotects the given protected tag or wildcard protected tag.
      operationId: unprotectRepositoryTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - protected_tags
  '/projects/{id}/releases':
    get:
      summary: List Releases
      description: 'Paginated list of Releases, sorted by released_at.'
      operationId: listReleases
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: The field to use as order. Either released_at (default) or created_at.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: The direction of the order. Either desc (default) for descending order or asc for ascending order.
          required: false
          schema:
            type: string
        - name: include_html_description
          in: query
          description: 'If true, a response includes HTML rendered Markdown of the release description.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listReleasesResponse'
      tags:
        - releases__index
    post:
      summary: Create a release
      description: Create a release. Developer level access to the project is required to create a release.
      operationId: createARelease
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAReleaseResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAReleaseRequest'
      tags:
        - releases__index
  '/projects/{id}/releases/{tag_name}':
    get:
      summary: Get a Release by a tag name
      description: Get a Release for the given tag.
      operationId: getAReleaseByATagName
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The Git tag the release is associated with.
          required: true
          schema:
            type: string
        - name: include_html_description
          in: query
          description: 'If true, a response includes HTML rendered Markdown of the release description.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAReleaseByATagNameResponse'
      tags:
        - releases__index
    put:
      summary: Update a release
      description: Update a release. Developer level access to the project is required to update a release.
      operationId: updateARelease
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The Git tag the release is associated with.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAReleaseResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAReleaseRequest'
      tags:
        - releases__index
    delete:
      summary: Delete a Release
      description: >-
        Delete a release. Deleting a release doesn’t delete the associated tag. Maintainer level access to the project
        is required to delete a release.
      operationId: deleteARelease
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The Git tag the release is associated with.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAReleaseResponse'
      tags:
        - releases__index
  '/projects/{id}/releases/{tag_name}/evidence':
    post:
      summary: Collect release evidence
      description: Create Evidence for an existing Release.
      operationId: collectReleaseEvidence
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The Git tag the release is associated with.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collectReleaseEvidenceResponse'
      tags:
        - releases__index
  '/projects/{id}/releases/{tag_name}/assets/links':
    get:
      summary: Get links
      description: Get assets as links from a Release.
      operationId: getLinks
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the Release.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLinksResponse'
      tags:
        - releases__links
    post:
      summary: Create a link
      description: Create an asset as a link from a Release.
      operationId: createALink
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the Release.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createALinkResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createALinkRequest'
      tags:
        - releases__links
  '/projects/{id}/releases/{tag_name}/assets/links/{link_id}':
    get:
      summary: Get a link
      description: Get an asset as a link from a Release.
      operationId: getALink
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the Release.
          required: true
          schema:
            type: string
        - name: link_id
          in: path
          description: The ID of the link.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getALinkResponse'
      tags:
        - releases__links
    put:
      summary: Update a link
      description: Update an asset as a link from a Release.
      operationId: updateALink
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the Release.
          required: true
          schema:
            type: string
        - name: link_id
          in: path
          description: The ID of the link.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getALinkResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createALinkRequest'
      tags:
        - releases__links
    delete:
      summary: Delete a link
      description: Delete an asset as a link from a Release.
      operationId: deleteALink
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project.
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The tag associated with the Release.
          required: true
          schema:
            type: string
        - name: link_id
          in: path
          description: The ID of the link.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getALinkResponse'
      tags:
        - releases__links
  '/projects/{id}/remote_mirrors':
    get:
      summary: List a project’s remote mirrors
      description: 'Returns an Array of remote mirrors and their statuses:'
      operationId: listAProjectRemoteMirrors
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAProjectRemoteMirrorsResponse'
      tags:
        - remote_mirrors
    post:
      summary: Create a push mirror
      description: >-
        Push mirroring is disabled by default. You can enable it by including the optional parameter enabled when
        creating it:
      operationId: createAPushMirror
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectRemoteMirrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAPushMirrorRequest'
      tags:
        - remote_mirrors
  '/projects/{id}/remote_mirrors/{mirror_id}':
    get:
      summary: Get a single project’s remote mirror
      description: 'Returns a remote mirror and its statuses:'
      operationId: getASingleProjectRemoteMirror
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectRemoteMirrorResponse'
      tags:
        - remote_mirrors
    put:
      summary: Update a remote mirror’s attributes
      description: 'Toggle a remote mirror on or off, or change which types of branches are mirrored:'
      operationId: updateARemoteMirrorAttributes
      parameters:
        - name: mirror_id
          in: path
          description: The remote mirror ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleProjectRemoteMirrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateARemoteMirrorAttributesRequest'
      tags:
        - remote_mirrors
    delete:
      summary: Delete a remote mirror
      description: Delete a remote mirror.
      operationId: deleteARemoteMirror
      parameters:
        - name: mirror_id
          in: path
          description: Remote mirror ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - remote_mirrors
  '/projects/{id}/repository/tree':
    get:
      summary: List repository tree
      description: >-
        Get a list of repository files and directories in a project. This endpoint can be accessed without
        authentication if the repository is publicly accessible.
      operationId: listRepositoryTree
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: path
          in: query
          description: The path inside repository. Used to get content of subdirectories.
          required: false
          schema:
            type: string
        - name: ref
          in: query
          description: The name of a repository branch or tag or if not given the default branch.
          required: false
          schema:
            type: string
        - name: recursive
          in: query
          description: Boolean value used to get a recursive tree (false by default).
          required: false
          schema:
            type: string
        - name: per_page
          in: query
          description: 'Number of results to show per page. If not specified, defaults to 20. Learn more on pagination.'
          required: false
          schema:
            type: integer
        - name: pagination
          in: query
          description: 'If set to keyset, use the new keyset pagination method.'
          required: false
          schema:
            type: string
        - name: page_token
          in: query
          description: The tree record ID at which to fetch the next page. Used only with keyset pagination.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRepositoryTreeResponse'
      tags:
        - repositories
  '/projects/{id}/repository/blobs/{sha}':
    get:
      summary: Get a blob from repository
      description: >-
        Allows you to receive information about blob in repository like size and content. Blob content is Base64
        encoded. This endpoint can be accessed without authentication if the repository is publicly accessible.
      operationId: getABlobFromRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The blob SHA.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - repositories
  '/projects/{id}/repository/blobs/{sha}/raw':
    get:
      summary: Raw blob content
      description: >-
        Get the raw file contents for a blob by blob SHA. This endpoint can be accessed without authentication if the
        repository is publicly accessible.
      operationId: rawBlobContent
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: sha
          in: path
          description: The blob SHA.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - repositories
  '/projects/{id}/repository/archive[.format]':
    get:
      summary: Get file archive
      description: >-
        Get an archive of the repository. This endpoint can be accessed without authentication if the repository is
        publicly accessible.
      operationId: getFileArchive
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: sha
          in: query
          description: >-
            The commit SHA to download. A tag, branch reference, or SHA can be used. This defaults to the tip of the
            default branch if not specified.
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: The subpath of the repository to download. This defaults to the whole repository (empty string).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - repositories
  '/projects/{id}/repository/compare':
    get:
      summary: 'Compare branches, tags or commits'
      description: >-
        This endpoint can be accessed without authentication if the repository is publicly accessible. Diffs can have an
        empty diff string if diff limits are reached.
      operationId: compareBranchesTagsOrCommits
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: The commit SHA or branch name.
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: The commit SHA or branch name.
          required: true
          schema:
            type: string
        - name: from_project_id
          in: query
          description: The ID to compare from
          required: false
          schema:
            type: integer
        - name: straight
          in: query
          description: >-
            Comparison method, true for direct comparison between from and to (from..to), false to compare using merge
            base (from…to)’. Default is false.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/compareBranchesTagsOrCommitsResponse'
      tags:
        - repositories
  '/projects/{id}/repository/contributors':
    get:
      summary: Contributors
      description: >-
        Get repository contributors list. This endpoint can be accessed without authentication if the repository is
        publicly accessible.
      operationId: contributors
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: 'Return contributors ordered by name, email, or commits (orders by commit date) fields. Default is commits.'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return contributors sorted in asc or desc order. Default is asc.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contributorsResponse'
      tags:
        - repositories
  '/projects/{id}/repository/merge_base':
    get:
      summary: Merge Base
      description: 'Get the common ancestor for 2 or more refs (commit SHAs, branch names or tags).'
      operationId: mergeBase
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: refs
          in: query
          description: 'The refs to find the common ancestor of, multiple refs can be passed'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mergeBaseResponse'
      tags:
        - repositories
  '/projects/{id}/repository/changelog':
    post:
      summary: Add changelog data to a changelog file
      description: Generate changelog data based on commits in a repository.
      operationId: addChangelogDataToAChangelogFile
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addChangelogDataToAChangelogFileRequest'
      tags:
        - repositories
    get:
      summary: Generate changelog data
      description: 'Generate changelog data based on commits in a repository, without committing them to a changelog file.'
      operationId: generateChangelogData
      parameters:
        - name: version
          in: query
          description: The version to generate the changelog for. The format must follow semantic versioning.
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: >-
            The start of the range of commits (as a SHA) to use for generating the changelog. This commit itself isn’t
            included in the list.
          required: false
          schema:
            type: string
        - name: to
          in: query
          description: >-
            The end of the range of commits (as a SHA) to use for the changelog. This commit is included in the list.
            Defaults to the branch specified in the branch attribute.
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: >-
            The date and time of the release, ISO 8601 formatted. Example: 2016-03-11T03:45:40Z. Defaults to the current
            time.
          required: false
          schema:
            type: string
        - name: trailer
          in: query
          description: 'The Git trailer to use for including commits, defaults to Changelog.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generateChangelogDataResponse'
      tags:
        - repositories
  '/projects/{id}/repository/files/{file_path}':
    get:
      summary: Get file from repository
      description: >-
        Allows you to receive information about file in repository like name, size, content. File content is Base64
        encoded. This endpoint can be accessed without authentication if the repository is publicly accessible.
      operationId: getFileFromRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: URL encoded full path to new file. Ex. lib%2Fclass%2Erb.
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: 'The name of branch, tag or commit'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFileFromRepositoryResponse'
      tags:
        - repository_files
    post:
      summary: Create new file in repository
      description: This allows you to create a single file. For creating multiple files with a single request see the commits API.
      operationId: createNewFileInRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: 'URL-encoded full path to new file. For example: lib%2Fclass%2Erb.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createNewFileInRepositoryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewFileInRepositoryRequest'
      tags:
        - repository_files
    put:
      summary: Update existing file in repository
      description: This allows you to update a single file. For updating multiple files with a single request see the commits API.
      operationId: updateExistingFileInRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: 'URL-encoded full path to new file. For example: lib%2Fclass%2Erb.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createNewFileInRepositoryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateExistingFileInRepositoryRequest'
      tags:
        - repository_files
    delete:
      summary: Delete existing file in repository
      description: 'This allows you to delete a single file. For deleting multiple files with a single request, see the commits API.'
      operationId: deleteExistingFileInRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user.
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: 'URL-encoded full path to new file. For example: lib%2Fclass%2Erb.'
          required: true
          schema:
            type: string
        - name: branch
          in: query
          description: Name of the new branch to create. The commit is added to this branch.
          required: true
          schema:
            type: string
        - name: start_branch
          in: query
          description: Name of the base branch to create the new branch from.
          required: false
          schema:
            type: string
        - name: author_email
          in: query
          description: The commit author’s email address.
          required: false
          schema:
            type: string
        - name: author_name
          in: query
          description: The commit author’s name.
          required: false
          schema:
            type: string
        - name: commit_message
          in: query
          description: The commit message.
          required: true
          schema:
            type: string
        - name: last_commit_id
          in: query
          description: Last known file commit ID.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - repository_files
  '/projects/{id}/repository/files/{file_path}/blame':
    get:
      summary: Get file blame from repository
      description: Allows you to receive blame information. Each blame range contains lines and corresponding commit information.
      operationId: getFileBlameFromRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: URL encoded full path to new file. Ex. lib%2Fclass%2Erb.
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: 'The name of branch, tag or commit'
          required: true
          schema:
            type: string
        - name: range
          in: query
          description: Blame range
          required: false
          schema:
            type: string
        - name: 'range[start]'
          in: query
          description: The first line of the range to blame
          required: true
          schema:
            type: integer
        - name: 'range[end]'
          in: query
          description: The last line of the range to blame
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFileBlameFromRepositoryResponse'
      tags:
        - repository_files
  '/projects/{id}/repository/files/{file_path}/raw':
    get:
      summary: Get raw file from repository
      description: ''
      operationId: getRawFileFromRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: URL encoded full path to new file. Ex. lib%2Fclass%2Erb.
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: 'The name of branch, tag or commit. Default is the HEAD of the project.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - repository_files
  '/projects/{id}/repository/submodules/{submodule}':
    put:
      summary: Update existing submodule reference in repository
      description: >-
        In some workflows, especially automated ones, it can be useful to update a submodule’s reference to keep up to
        date other projects that use it. This endpoint allows you to update a Git submodule reference in a specific
        branch.
      operationId: updateExistingSubmoduleReferenceInRepository
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: submodule
          in: path
          description: 'URL-encoded full path to the submodule. For example, lib%2Fclass%2Erb'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateExistingSubmoduleReferenceInRepositoryResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateExistingSubmoduleReferenceInRepositoryRequest'
      tags:
        - repository_submodules
  '/projects/{id}/issues/{issue_iid}/resource_label_events':
    get:
      summary: List project issue label events
      description: Gets a list of all label events for a single issue.
      operationId: listProjectIssueLabelEvents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueLabelEventsResponse'
      tags:
        - resource_label_events
  '/projects/{id}/issues/{issue_iid}/resource_label_events/{resource_label_event_id}':
    get:
      summary: Get single issue label event
      description: Returns a single label event for a specific project issue
      operationId: getSingleIssueLabelEvent
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: issue_iid
          in: path
          description: The IID of an issue
          required: true
          schema:
            type: integer
        - name: resource_label_event_id
          in: path
          description: The ID of a label event
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - resource_label_events
  '/groups/{id}/epics/{epic_id}/resource_label_events':
    get:
      summary: List group epic label events
      description: Gets a list of all label events for a single epic.
      operationId: listGroupEpicLabelEvents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueLabelEventsResponse'
      tags:
        - resource_label_events
  '/groups/{id}/epics/{epic_id}/resource_label_events/{resource_label_event_id}':
    get:
      summary: Get single epic label event
      description: Returns a single label event for a specific group epic
      operationId: getSingleEpicLabelEvent
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group
          required: true
          schema:
            type: string
        - name: epic_id
          in: path
          description: The ID of an epic
          required: true
          schema:
            type: integer
        - name: resource_label_event_id
          in: path
          description: The ID of a label event
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - resource_label_events
  '/projects/{id}/merge_requests/{merge_request_iid}/resource_label_events':
    get:
      summary: List project merge request label events
      description: Gets a list of all label events for a single merge request.
      operationId: listProjectMergeRequestLabelEvents
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectIssueLabelEventsResponse'
      tags:
        - resource_label_events
  '/projects/{id}/merge_requests/{merge_request_iid}/resource_label_events/{resource_label_event_id}':
    get:
      summary: Get single merge request label event
      description: Returns a single label event for a specific project merge request
      operationId: getSingleMergeRequestLabelEvent
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
        - name: resource_label_event_id
          in: path
          description: The ID of a label event
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - resource_label_events
  /runners:
    get:
      summary: List owned runners
      description: Get a list of specific runners available to the user.
      operationId: listOwnedRunners
      parameters:
        - name: scope
          in: query
          description: >-
            Deprecated: Use type or status instead. The scope of specific runners to show, one of: active, paused,
            online and offline; showing all runners if none provided
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: 'The type of runners to show, one of: instance_type, group_type, project_type'
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: >-
            The status of runners to show, one of: online, offline and never_contacted. active and paused are also
            possible values which were deprecated in GitLab 14.8 and will be removed in GitLab 16.0
          required: false
          schema:
            type: string
        - name: paused
          in: query
          description: Whether to include only runners that are accepting or ignoring new jobs
          required: false
          schema:
            type: string
        - name: tag_list
          in: query
          description: List of the runner’s tags
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listOwnedRunnersResponse'
      tags:
        - runners
    post:
      summary: Register a new runner
      description: Register a new runner for the instance.
      operationId: registerANewRunner
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registerANewRunnerResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerANewRunnerRequest'
      tags:
        - runners
    delete:
      summary: Delete a runner by authentication token
      description: 'To delete the runner by using its authentication token:'
      operationId: deleteARunnerByAuthenticationToken
      parameters:
        - name: token
          in: query
          description: The runner’s authentication token.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - runners
  /runners/all:
    get:
      summary: List all runners
      description: >-
        Get a list of all runners in the GitLab instance (specific and shared). Access is restricted to users with
        administrator access.
      operationId: listAllRunners
      parameters:
        - name: scope
          in: query
          description: >-
            Deprecated: Use type or status instead. The scope of runners to show, one of: specific, shared, active,
            paused, online and offline; showing all runners if none provided
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: 'The type of runners to show, one of: instance_type, group_type, project_type'
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: >-
            The status of runners to show, one of: online and offline. active and paused are also possible values which
            were deprecated in GitLab 14.8 and will be removed in GitLab 16.0
          required: false
          schema:
            type: string
        - name: paused
          in: query
          description: Whether to include only runners that are accepting or ignoring new jobs
          required: false
          schema:
            type: string
        - name: tag_list
          in: query
          description: List of the runner’s tags
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listOwnedRunnersResponse'
      tags:
        - runners
  '/runners/{id}':
    get:
      summary: Get runner’s details
      description: Get details of a runner.
      operationId: getRunnerDetails
      parameters:
        - name: id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getRunnerDetailsResponse'
      tags:
        - runners
    put:
      summary: Update runner’s details
      description: Update details of a runner.
      operationId: updateRunnerDetails
      parameters:
        - name: id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateRunnerDetailsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRunnerDetailsRequest'
      tags:
        - runners
    delete:
      summary: Delete a runner by ID
      description: 'To delete the runner by ID, use your access token with the runner’s ID:'
      operationId: deleteARunnerById
      parameters:
        - name: id
          in: path
          description: >-
            The ID of a runner. The ID is visible in the UI under Settings > CI/CD. Expand Runners, and below the Remove
            Runner button is an ID preceded by the pound sign, for example, #6.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - runners
  '/runners/{id}/jobs':
    get:
      summary: List runner’s jobs
      description: List jobs that are being processed or were processed by specified runner.
      operationId: listRunnerJobs
      parameters:
        - name: id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
        - name: status
          in: query
          description: 'Status of the job; one of: running, success, failed, canceled'
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Order jobs by id.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: 'Sort jobs in asc or desc order (default: desc)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listRunnerJobsResponse'
      tags:
        - runners
  '/projects/{id}/runners':
    get:
      summary: List project’s runners
      description: 'List all runners available in the project, including from ancestor groups and any allowed shared runners.'
      operationId: listProjectRunners
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: >-
            Deprecated: Use type or status instead. The scope of specific runners to show, one of: active, paused,
            online and offline; showing all runners if none provided
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: 'The type of runners to show, one of: instance_type, group_type, project_type'
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: >-
            The status of runners to show, one of: online and offline. active and paused are also possible values which
            were deprecated in GitLab 14.8 and will be removed in GitLab 16.0
          required: false
          schema:
            type: string
        - name: paused
          in: query
          description: Whether to include only runners that are accepting or ignoring new jobs
          required: false
          schema:
            type: string
        - name: tag_list
          in: query
          description: List of the runner’s tags
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listOwnedRunnersResponse'
      tags:
        - runners
    post:
      summary: Enable a runner in project
      description: Enable an available specific runner in the project.
      operationId: enableARunnerInProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enableARunnerInProjectResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enableARunnerInProjectRequest'
      tags:
        - runners
  '/projects/{id}/runners/{runner_id}':
    delete:
      summary: Disable a runner from project
      description: >-
        Disable a specific runner from the project. It works only if the project isn’t the only project associated with
        the specified runner. If so, an error is returned. Use the call to delete a runner instead.
      operationId: disableARunnerFromProject
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: runner_id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - runners
  '/groups/{id}/runners':
    get:
      summary: List group’s runners
      description: 'List all runners available in the group as well as its ancestor groups, including any allowed shared runners.'
      operationId: listGroupRunners
      parameters:
        - name: id
          in: path
          description: The ID of the group owned by the authenticated user
          required: true
          schema:
            type: integer
        - name: type
          in: query
          description: >-
            The type of runners to show, one of: instance_type, group_type, project_type. The project_type value is
            deprecated and will be removed in GitLab 15.0
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: >-
            The status of runners to show, one of: online and offline. active and paused are also possible values which
            were deprecated in GitLab 14.8 and will be removed in GitLab 16.0
          required: false
          schema:
            type: string
        - name: paused
          in: query
          description: Whether to include only runners that are accepting or ignoring new jobs
          required: false
          schema:
            type: string
        - name: tag_list
          in: query
          description: List of the runner’s tags
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listOwnedRunnersResponse'
      tags:
        - runners
  /runners/verify:
    post:
      summary: Verify authentication for a registered runner
      description: Validates authentication credentials for a registered runner.
      operationId: verifyAuthenticationForARegisteredRunner
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verifyAuthenticationForARegisteredRunnerRequest'
      tags:
        - runners
  /runners/reset_registration_token:
    post:
      summary: Reset instance’s runner registration token
      description: Resets the runner registration token for the GitLab instance.
      operationId: resetInstanceRunnerRegistrationToken
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - runners
  '/projects/{id}/runners/reset_registration_token':
    post:
      summary: Reset project’s runner registration token
      description: Resets the runner registration token for a project.
      operationId: resetProjectRunnerRegistrationToken
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - runners
  '/groups/{id}/runners/reset_registration_token':
    post:
      summary: Reset group’s runner registration token
      description: Resets the runner registration token for a group.
      operationId: resetGroupRunnerRegistrationToken
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - runners
  '/runners/{id}/reset_authentication_token':
    post:
      summary: Reset runner’s authentication token by using the runner ID
      description: Resets the runner’s authentication token by using its runner ID.
      operationId: resetRunnerAuthenticationTokenByUsingTheRunnerId
      parameters:
        - name: id
          in: path
          description: The ID of a runner
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resetRunnerAuthenticationTokenByUsingTheRunnerIdResponse'
      tags:
        - runners
  /runners/reset_authentication_token:
    post:
      summary: Reset runner’s authentication token by using the current token
      description: Resets the runner’s authentication token by using the current token’s value as an input.
      operationId: resetRunnerAuthenticationTokenByUsingTheCurrentToken
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resetRunnerAuthenticationTokenByUsingTheRunnerIdResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verifyAuthenticationForARegisteredRunnerRequest'
      tags:
        - runners
  /search:
    get:
      summary: Advanced Search API
      description: Search globally across the GitLab instance.
      operationId: advancedSearchApi
      parameters:
        - name: scope
          in: query
          description: The scope to search in
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: The search query
          required: true
          schema:
            type: string
        - name: state
          in: query
          description: Filter by state. Issues and merge requests are supported; it is ignored for other scopes.
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter by confidentiality. Issues scope is supported; it is ignored for other scopes.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Allowed values are created_at only. If this is not set, the results are either sorted by created_at in
            descending order for basic search, or by the most relevant documents when using advanced search.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: >-
            Allowed values are asc or desc only. If this is not set, the results are either sorted by created_at in
            descending order for basic search, or by the most relevant documents when using advanced search.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - search
  '/groups/{id}/search':
    get:
      summary: Group Search API
      description: Search in the specified group.
      operationId: groupSearchApi
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group owned by the authenticated user
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: The scope to search in
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: The search query
          required: true
          schema:
            type: string
        - name: state
          in: query
          description: Filter by state. Issues and merge requests are supported; it is ignored for other scopes.
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter by confidentiality. Issues scope is supported; it is ignored for other scopes.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Allowed values are created_at only. If this is not set, the results are either sorted by created_at in
            descending order for basic search, or by the most relevant documents when using advanced search.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: >-
            Allowed values are asc or desc only. If this is not set, the results are either sorted by created_at in
            descending order for basic search, or by the most relevant documents when using advanced search.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - search
  '/projects/{id}/search':
    get:
      summary: Project Search API
      description: Search in the specified project.
      operationId: projectSearchApi
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: scope
          in: query
          description: The scope to search in
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: The search query
          required: true
          schema:
            type: string
        - name: ref
          in: query
          description: >-
            The name of a repository branch or tag to search on. The project’s default branch is used by default. This
            is only applicable for scopes: commits, blobs, and wiki_blobs.
          required: false
          schema:
            type: string
        - name: state
          in: query
          description: Filter by state. Issues and merge requests are supported; it is ignored for other scopes.
          required: false
          schema:
            type: string
        - name: confidential
          in: query
          description: Filter by confidentiality. Issues scope is supported; it is ignored for other scopes.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: >-
            Allowed values are created_at only. If this is not set, the results are either sorted by created_at in
            descending order for basic search, or by the most relevant documents when using advanced search.
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: >-
            Allowed values are asc or desc only. If this is not set, the results are either sorted by created_at in
            descending order for basic search, or by the most relevant documents when using advanced search.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - search
  /application/settings:
    get:
      summary: Get current application settings
      description: List the current application settings of the GitLab instance.
      operationId: getCurrentApplicationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCurrentApplicationSettingsResponse'
      tags:
        - settings
    put:
      summary: Change application settings
      description: Use an API call to modify GitLab instance application settings.
      operationId: changeApplicationSettings
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeApplicationSettingsResponse'
      tags:
        - settings
  /sidekiq/queue_metrics:
    get:
      summary: Get the current Queue Metrics
      description: 'List information about all the registered queues, their backlog and their latency.'
      operationId: getTheCurrentQueueMetrics
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTheCurrentQueueMetricsResponse'
      tags:
        - sidekiq_metrics
  /sidekiq/process_metrics:
    get:
      summary: Get the current Process Metrics
      description: List information about all the Sidekiq workers registered to process your queues.
      operationId: getTheCurrentProcessMetrics
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTheCurrentProcessMetricsResponse'
      tags:
        - sidekiq_metrics
  /sidekiq/job_stats:
    get:
      summary: Get the current Job Statistics
      description: List information about the jobs that Sidekiq has performed.
      operationId: getTheCurrentJobStatistics
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTheCurrentJobStatisticsResponse'
      tags:
        - sidekiq_metrics
  /sidekiq/compound_metrics:
    get:
      summary: Get a compound response of all the previously mentioned metrics
      description: List all the currently available information about Sidekiq.
      operationId: getACompoundResponseOfAllThePreviouslyMentionedMetrics
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getACompoundResponseOfAllThePreviouslyMentionedMetricsResponse'
      tags:
        - sidekiq_metrics
  /snippet_repository_storage_moves:
    get:
      summary: Retrieve all snippet repository storage moves
      description: 'By default, GET requests return 20 results at a time because the API results are paginated.'
      operationId: retrieveAllSnippetRepositoryStorageMoves
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllSnippetRepositoryStorageMovesResponse'
      tags:
        - snippet_repository_storage_moves
    post:
      summary: Schedule repository storage moves for all snippets on a storage shard
      description: Schedules repository storage moves for each snippet repository stored on the source storage shard.
      operationId: scheduleRepositoryStorageMovesForAllSnippetsOnAStorageShard
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduleRepositoryStorageMovesForAllSnippetsOnAStorageShardResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleRepositoryStorageMovesForAllSnippetsOnAStorageShardRequest'
      tags:
        - snippet_repository_storage_moves
  '/snippets/{snippet_id}/repository_storage_moves':
    get:
      summary: Retrieve all repository storage moves for a snippet
      description: 'By default, GET requests return 20 results at a time because the API results are paginated.'
      operationId: retrieveAllRepositoryStorageMovesForASnippet
      parameters:
        - name: snippet_id
          in: path
          description: ID of the snippet.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retrieveAllSnippetRepositoryStorageMovesResponse'
      tags:
        - snippet_repository_storage_moves
    post:
      summary: Schedule a repository storage move for a snippet
      description: 'Supported attributes:'
      operationId: scheduleARepositoryStorageMoveForASnippet
      parameters:
        - name: snippet_id
          in: path
          description: ID of the snippet.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleSnippetRepositoryStorageMoveResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleARepositoryStorageMoveForASnippetRequest'
      tags:
        - snippet_repository_storage_moves
  '/snippet_repository_storage_moves/{repository_storage_id}':
    get:
      summary: Get a single snippet repository storage move
      description: 'Supported attributes:'
      operationId: getASingleSnippetRepositoryStorageMove
      parameters:
        - name: repository_storage_id
          in: path
          description: ID of the snippet repository storage move.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleSnippetRepositoryStorageMoveResponse'
      tags:
        - snippet_repository_storage_moves
  '/snippets/{snippet_id}/repository_storage_moves/{repository_storage_id}':
    get:
      summary: Get a single repository storage move for a snippet
      description: 'Supported attributes:'
      operationId: getASingleRepositoryStorageMoveForASnippet
      parameters:
        - name: snippet_id
          in: path
          description: ID of the snippet.
          required: true
          schema:
            type: integer
        - name: repository_storage_id
          in: path
          description: ID of the snippet repository storage move.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleSnippetRepositoryStorageMoveResponse'
      tags:
        - snippet_repository_storage_moves
  /snippets:
    get:
      summary: List all snippets for a user
      description: Get a list of the current user’s snippets.
      operationId: listAllSnippetsForAUser
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllSnippetsForAUserResponse'
      tags:
        - snippets
    post:
      summary: Create new snippet
      description: Create a new snippet.
      operationId: createNewSnippet
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createNewSnippetResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewSnippetRequest'
      tags:
        - snippets
  '/snippets/{id}':
    get:
      summary: Get a single snippet
      description: Get a single snippet.
      operationId: getASingleSnippet
      parameters:
        - name: id
          in: path
          description: ID of snippet to retrieve.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleSnippetResponse'
      tags:
        - snippets
    put:
      summary: Update snippet
      description: Update an existing snippet.
      operationId: updateSnippet
      parameters:
        - name: id
          in: path
          description: ID of snippet to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createNewSnippetResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSnippetRequest'
      tags:
        - snippets
    delete:
      summary: Delete snippet
      description: Delete an existing snippet.
      operationId: deleteSnippet
      parameters:
        - name: id
          in: path
          description: ID of snippet to delete.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - snippets
  '/snippets/{id}/raw':
    get:
      summary: Single snippet contents
      description: Get a single snippet’s raw contents.
      operationId: singleSnippetContents
      parameters:
        - name: id
          in: path
          description: ID of snippet to retrieve.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - snippets
  '/snippets/{id}/files/{ref}/{file_path}/raw':
    get:
      summary: Snippet repository file content
      description: Returns the raw file content as plain text.
      operationId: snippetRepositoryFileContent
      parameters:
        - name: id
          in: path
          description: ID of snippet to retrieve.
          required: true
          schema:
            type: integer
        - name: ref
          in: path
          description: 'Reference to a tag, branch or commit.'
          required: true
          schema:
            type: string
        - name: file_path
          in: path
          description: URL-encoded path to the file.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - snippets
  /snippets/public:
    get:
      summary: List all public snippets
      description: List all public snippets.
      operationId: listAllPublicSnippets
      parameters:
        - name: per_page
          in: query
          description: Number of snippets to return per page.
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Page to retrieve.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllPublicSnippetsResponse'
      tags:
        - snippets
  '/snippets/{id}/user_agent_detail':
    get:
      summary: Get user agent details
      description: ''
      operationId: getUserAgentDetails
      parameters:
        - name: id
          in: path
          description: ID of snippet.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserAgentDetailsResponse'
      tags:
        - snippets
  /application/statistics:
    get:
      summary: Get current application statistics
      description: >-
        List the current statistics of the GitLab instance. You have to be an administrator in order to perform this
        action.
      operationId: getCurrentApplicationStatistics
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCurrentApplicationStatisticsResponse'
      tags:
        - statistics
  '/suggestions/{id}/apply':
    put:
      summary: Applying suggestions
      description: >-
        Applies a suggested patch in a merge request. Users must have at least the Developer role to perform such
        action.
      operationId: applyingSuggestions
      parameters:
        - name: id
          in: path
          description: The ID of a suggestion
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applyingSuggestionsResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applyingSuggestionsRequest'
      tags:
        - suggestions
  /hooks:
    get:
      summary: List system hooks
      description: Get a list of all system hooks.
      operationId: listSystemHooks
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSystemHooksResponse'
      tags:
        - system_hooks
    post:
      summary: Add new system hook
      description: Add a new system hook.
      operationId: addNewSystemHook
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSystemHooksResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addNewSystemHookRequest'
      tags:
        - system_hooks
  '/hooks/{id}':
    get:
      summary: Get system hook
      description: Get a system hook by its ID.
      operationId: getSystemHook
      parameters:
        - name: id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSystemHooksResponse'
      tags:
        - system_hooks
    post:
      summary: Test system hook
      description: ''
      operationId: testSystemHook
      parameters:
        - name: id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/testSystemHookResponse'
      tags:
        - system_hooks
    delete:
      summary: Delete system hook
      description: Deletes a system hook.
      operationId: deleteSystemHook
      parameters:
        - name: id
          in: path
          description: The ID of the hook
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - system_hooks
  '/projects/{id}/repository/tags':
    get:
      summary: List project repository tags
      description: >-
        Get a list of repository tags from a project, sorted by update date and time in descending order. This endpoint
        can be accessed without authentication if the repository is publicly accessible.
      operationId: listProjectRepositoryTags
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: order_by
          in: query
          description: Return tags ordered by name or updated fields. Default is updated
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return tags sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: >-
            Return list of tags matching the search criteria. You can use ^term and term$ to find tags that begin and
            end with term respectively. No other regular expressions are supported.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectRepositoryTagsResponse'
      tags:
        - tags
    post:
      summary: Create a new tag
      description: Creates a new tag in the repository that points to the supplied ref.
      operationId: createANewTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleRepositoryTagResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createANewTagRequest'
      tags:
        - tags
  '/projects/{id}/repository/tags/{tag_name}':
    get:
      summary: Get a single repository tag
      description: >-
        Get a specific repository tag determined by its name. This endpoint can be accessed without authentication if
        the repository is publicly accessible.
      operationId: getASingleRepositoryTag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASingleRepositoryTagResponse'
      tags:
        - tags
    delete:
      summary: Delete a tag
      description: Deletes a tag of a repository with given name.
      operationId: deleteATag
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project owned by the authenticated user
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The name of a tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - tags
  /todos:
    get:
      summary: Get a list of to-do items
      description: >-
        Returns a list of to-do items. When no filter is applied, it returns all pending to-do items for the current
        user. Different filters allow the user to refine the request.
      operationId: getAListOfToDoItems
      parameters:
        - name: action
          in: query
          description: >-
            The action to be filtered. Can be assigned, mentioned, build_failed, marked, approval_required, unmergeable,
            directly_addressed or merge_train_removed.
          required: false
          schema:
            type: string
        - name: author_id
          in: query
          description: The ID of an author
          required: false
          schema:
            type: integer
        - name: project_id
          in: query
          description: The ID of a project
          required: false
          schema:
            type: integer
        - name: group_id
          in: query
          description: The ID of a group
          required: false
          schema:
            type: integer
        - name: state
          in: query
          description: The state of the to-do item. Can be either pending or done
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: >-
            The type of to-do item. Can be either Issue, MergeRequest, Commit, Epic, DesignManagement::Design or
            AlertManagement::Alert
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAListOfToDoItemsResponse'
      tags:
        - todos
  '/todos/{id}/mark_as_done':
    post:
      summary: Mark a to-do item as done
      description: >-
        Marks a single pending to-do item given by its ID for the current user as done. The to-do item marked as done is
        returned in the response.
      operationId: markAToDoItemAsDone
      parameters:
        - name: id
          in: path
          description: The ID of to-do item
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/markAToDoItemAsDoneResponse'
      tags:
        - todos
  /todos/mark_as_done:
    post:
      summary: Mark all to-do items as done
      description: >-
        Marks all pending to-do items for the current user as done. It returns the HTTP status code 204 with an empty
        response.
      operationId: markAllToDoItemsAsDone
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - todos
  /topics:
    get:
      summary: List topics
      description: Returns a list of project topics in the GitLab instance ordered by number of associated projects.
      operationId: listTopics
      parameters:
        - name: page
          in: query
          description: Page to retrieve. Defaults to 1.
          required: false
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of records to return per page. Defaults to 20.
          required: false
          schema:
            type: integer
        - name: search
          in: query
          description: Search topics against their name.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listTopicsResponse'
      tags:
        - topics
    post:
      summary: Create a project topic
      description: Create a new project topic. Only available to administrators.
      operationId: createAProjectTopic
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getATopicResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAProjectTopicRequest'
      tags:
        - topics
  '/topics/{id}':
    get:
      summary: Get a topic
      description: Get a project topic by ID.
      operationId: getATopic
      parameters:
        - name: id
          in: path
          description: ID of project topic
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getATopicResponse'
      tags:
        - topics
    put:
      summary: Update a project topic
      description: Update a project topic. Only available to administrators.
      operationId: updateAProjectTopic
      parameters:
        - name: id
          in: path
          description: ID of project topic
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getATopicResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAProjectTopicRequest'
      tags:
        - topics
    delete:
      summary: Delete a project topic
      description: >-
        You must be an administrator to delete a project. When you delete a project topic, you also delete the topic
        assignment for projects.
      operationId: deleteAProjectTopic
      parameters:
        - name: id
          in: path
          description: ID of project topic
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - topics
  /usage_data/metric_definitions:
    get:
      summary: Export metric definitions as a single YAML file
      description: 'Export all metric definitions as a single YAML file, similar to the Metrics Dictionary, for easier importing.'
      operationId: exportMetricDefinitionsAsASingleYamlFile
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - usage_data
  /usage_data/queries:
    get:
      summary: Export Service Ping SQL queries
      description: This action is available only for the GitLab instance Administrator users.
      operationId: exportServicePingSqlQueries
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportServicePingSqlQueriesResponse'
      tags:
        - usage_data
  /users:
    get:
      summary: For administrators
      description: 'Users on GitLab Premium or higher also see the group_saml provider option and provisioned_by_group_id parameter:'
      operationId: forAdministrators
      parameters:
        - name: order_by
          in: query
          description: 'Return users ordered by id, name, username, created_at, or updated_at fields. Default is id'
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return users sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: two_factor
          in: query
          description: >-
            Filter users by Two-factor authentication. Filter values are enabled or disabled. By default it returns all
            users
          required: false
          schema:
            type: string
        - name: without_projects
          in: query
          description: >-
            Filter users without projects. Default is false, which means that all users are returned, with and without
            projects.
          required: false
          schema:
            type: string
        - name: admins
          in: query
          description: Return only administrators. Default is false
          required: false
          schema:
            type: string
        - name: saml_provider_id
          in: query
          description: 'Return only users created by the specified SAML provider ID. If not included, it returns all users.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forAdministratorsResponse'
      tags:
        - users
    post:
      summary: User creation
      description: >-
        Creates a new user. Note only administrators can create new users. Either password, reset_password, or
        force_random_password must be specified. If reset_password and force_random_password are both false, then
        password is required.
      operationId: userCreation
      parameters: []
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreationRequest'
      tags:
        - users
  '/users/{id}':
    get:
      summary: For administrator
      description: 'Users on GitLab.com Premium or higher also see the group_saml option and provisioned_by_group_id parameter:'
      operationId: forAdministrator
      parameters:
        - name: id
          in: path
          description: The ID of a user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forAdministratorResponse'
      tags:
        - users
    put:
      summary: User modification
      description: Modifies an existing user. Only administrators can change attributes of a user.
      operationId: userModification
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreationRequest'
      tags:
        - users
    delete:
      summary: User deletion
      description: >-
        Deletes a user. Available only for administrators. This returns a 204 No Content status code if the operation
        was successfully, 404 if the resource was not found or 409 if the user cannot be soft deleted.
      operationId: userDeletion
      parameters:
        - name: id
          in: path
          description: The ID of a user
          required: true
          schema:
            type: integer
        - name: hard_delete
          in: query
          description: >-
            If true, contributions that would usually be moved to Ghost User are deleted instead, as well as groups
            owned solely by this user.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/identities/{provider}':
    delete:
      summary: Delete authentication identity from user
      description: >-
        Deletes a user’s authentication identity using the provider name associated with that identity. Available only
        for administrators.
      operationId: deleteAuthenticationIdentityFromUser
      parameters:
        - name: id
          in: path
          description: The ID of a user
          required: true
          schema:
            type: integer
        - name: provider
          in: path
          description: External provider name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - users
  /user:
    get:
      summary: List current user (for administrators)
      description: ''
      operationId: listCurrentUserForAdministrators
      parameters:
        - name: sudo
          in: query
          description: the ID of a user to make the call in their place
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listCurrentUserForAdministratorsResponse'
      tags:
        - users
  /user/status:
    get:
      summary: User status
      description: Get the status of the currently signed in user.
      operationId: userStatus
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userStatusResponse'
      tags:
        - users
    put:
      summary: Set user status
      description: Set the status of the current user.
      operationId: setUserStatus
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setUserStatusResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setUserStatusRequest'
      tags:
        - users
  '/users/{id_or_username}/status':
    get:
      summary: Get the status of a user
      description: Get the status of a user. This endpoint can be accessed without authentication.
      operationId: getTheStatusOfAUser
      parameters:
        - name: id_or_username
          in: path
          description: The ID or username of the user to get a status of
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userStatusResponse'
      tags:
        - users
  /user/preferences:
    get:
      summary: Get user preferences
      description: Get a list of currently authenticated user’s preferences.
      operationId: getUserPreferences
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserPreferencesResponse'
      tags:
        - users
    put:
      summary: User preference modification
      description: Update the current user’s preferences.
      operationId: userPreferenceModification
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserPreferencesResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreationRequest'
      tags:
        - users
  '/users/{id}/follow':
    post:
      summary: Follow and unfollow users
      description: Follow a user.
      operationId: followAndUnfollowUsers
      parameters:
        - name: id
          in: path
          description: The ID of the user to follow
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/followAndUnfollowUsersResponse'
      tags:
        - users
  '/users/{id}/followers':
    get:
      summary: Followers and following
      description: Get the followers of a user.
      operationId: followersAndFollowing
      parameters:
        - name: id
          in: path
          description: The ID of the user to follow
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forNormalUsersResponse'
      tags:
        - users
  /user_counts:
    get:
      summary: User counts
      description: Get the counts (same as in top right menu) of the currently signed in user.
      operationId: userCounts
      parameters:
        - name: assigned_issues
          in: query
          required: false
          schema:
            type: string
        - name: assigned_merge_requests
          in: query
          required: false
          schema:
            type: string
        - name: merge_requests
          in: query
          required: false
          schema:
            type: string
        - name: review_requested_merge_requests
          in: query
          required: false
          schema:
            type: string
        - name: todos
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userCountsResponse'
      tags:
        - users
  /user/keys:
    get:
      summary: List SSH keys
      description: Get a list of currently authenticated user’s SSH keys.
      operationId: listSshKeys
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listSshKeysResponse'
      tags:
        - users
    post:
      summary: Add SSH key
      description: Creates a new key owned by the currently authenticated user.
      operationId: addSshKey
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addSshKeyResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addSshKeyRequest'
      tags:
        - users
  '/users/{id_or_username}/keys':
    get:
      summary: List SSH keys for user
      description: Get a list of a specified user’s SSH keys.
      operationId: listSshKeysForUser
      parameters:
        - name: id_or_username
          in: path
          description: The ID or username of the user to get the SSH keys for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/user/keys/{key_id}':
    get:
      summary: Single SSH key
      description: Get a single key.
      operationId: singleSshKey
      parameters:
        - name: key_id
          in: path
          description: The ID of an SSH key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleSshKeyResponse'
      tags:
        - users
    delete:
      summary: Delete SSH key for current user
      description: >-
        Deletes key owned by currently authenticated user. This returns a 204 No Content status code if the operation
        was successfully or 404 if the resource was not found.
      operationId: deleteSshKeyForCurrentUser
      parameters:
        - name: key_id
          in: path
          description: SSH key ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/keys/{key_id}':
    get:
      summary: Single SSH key for given user
      description: Get a single key for a given user.
      operationId: singleSshKeyForGivenUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
        - name: key_id
          in: path
          description: SSH key ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleSshKeyResponse'
      tags:
        - users
    delete:
      summary: Delete SSH key for given user
      description: Deletes key owned by a specified user. Available only for administrator.
      operationId: deleteSshKeyForGivenUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
        - name: key_id
          in: path
          description: SSH key ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/keys':
    post:
      summary: Add SSH key for user
      description: Create new key owned by specified user. Available only for administrator.
      operationId: addSshKeyForUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addSshKeyRequest'
      tags:
        - users
  /user/gpg_keys:
    get:
      summary: List all GPG keys
      description: Get a list of currently authenticated user’s GPG keys.
      operationId: listAllGpgKeys
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllGpgKeysResponse'
      tags:
        - users
    post:
      summary: Add a GPG key
      description: Creates a new GPG key owned by the currently authenticated user.
      operationId: addAGpgKey
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllGpgKeysResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAGpgKeyRequest'
      tags:
        - users
  '/user/gpg_keys/{key_id}':
    get:
      summary: Get a specific GPG key
      description: Get a specific GPG key of currently authenticated user.
      operationId: getASpecificGpgKey
      parameters:
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASpecificGpgKeyResponse'
      tags:
        - users
    delete:
      summary: Delete a GPG key
      description: Delete a GPG key owned by currently authenticated user.
      operationId: deleteAGpgKey
      parameters:
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/gpg_keys':
    get:
      summary: List all GPG keys for given user
      description: Get a list of a specified user’s GPG keys. This endpoint can be accessed without authentication.
      operationId: listAllGpgKeysForGivenUser
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllGpgKeysResponse'
      tags:
        - users
    post:
      summary: Add a GPG key for a given user
      description: Create new GPG key owned by the specified user. Available only for administrator.
      operationId: addAGpgKeyForAGivenUser
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAllGpgKeysResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAGpgKeyForAGivenUserRequest'
      tags:
        - users
  '/users/{id}/gpg_keys/{key_id}':
    get:
      summary: Get a specific GPG key for a given user
      description: >-
        Get a specific GPG key for a given user. Introduced in GitLab 13.5, this endpoint can be accessed without
        administrator authentication.
      operationId: getASpecificGpgKeyForAGivenUser
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getASpecificGpgKeyResponse'
      tags:
        - users
    delete:
      summary: Delete a GPG key for a given user
      description: Delete a GPG key owned by a specified user. Available only for administrator.
      operationId: deleteAGpgKeyForAGivenUser
      parameters:
        - name: id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: key_id
          in: path
          description: The ID of the GPG key
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  /user/emails:
    get:
      summary: List emails
      description: Get a list of currently authenticated user’s emails.
      operationId: listEmails
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listEmailsResponse'
      tags:
        - users
    post:
      summary: Add email
      description: Creates a new email owned by the currently authenticated user.
      operationId: addEmail
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addEmailResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addEmailRequest'
      tags:
        - users
  '/users/{id}/emails':
    get:
      summary: List emails for user
      description: Get a list of a specified user’s emails. Available only for administrator
      operationId: listEmailsForUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
    post:
      summary: Add email for user
      description: Create new email owned by specified user. Available only for administrator
      operationId: addEmailForUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addEmailForUserRequest'
      tags:
        - users
  '/user/emails/{email_id}':
    get:
      summary: Single email
      description: Get a single email.
      operationId: singleEmail
      parameters:
        - name: email_id
          in: path
          description: Email ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleEmailResponse'
      tags:
        - users
    delete:
      summary: Delete email for current user
      description: >-
        Deletes email owned by currently authenticated user. This returns a 204 No Content status code if the operation
        was successfully or 404 if the resource was not found.
      operationId: deleteEmailForCurrentUser
      parameters:
        - name: email_id
          in: path
          description: Email ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/emails/{email_id}':
    delete:
      summary: Delete email for given user
      description: Deletes email owned by a specified user. Available only for administrator.
      operationId: deleteEmailForGivenUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
        - name: email_id
          in: path
          description: Email ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/block':
    post:
      summary: Block user
      description: Blocks the specified user. Available only for administrator.
      operationId: blockUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/unblock':
    post:
      summary: Unblock user
      description: Unblocks the specified user. Available only for administrator.
      operationId: unblockUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/deactivate':
    post:
      summary: Deactivate user
      description: Deactivates the specified user. Available only for administrator.
      operationId: deactivateUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/activate':
    post:
      summary: Activate user
      description: Activates the specified user. Available only for administrator.
      operationId: activateUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/ban':
    post:
      summary: Ban user
      description: Bans the specified user. Available only for administrator.
      operationId: banUser
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{id}/unban':
    post:
      summary: Unban user
      description: Unbans the specified user. Available only for administrator.
      operationId: unbanUser
      parameters: []
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{user_id}/impersonation_tokens':
    get:
      summary: Get all impersonation tokens of a user
      description: Requires administrator access.
      operationId: getAllImpersonationTokensOfAUser
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: state
          in: query
          description: 'filter tokens based on state (all, active, inactive)'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllImpersonationTokensOfAUserResponse'
      tags:
        - users
    post:
      summary: Create an impersonation token
      description: >-
        Requires administrator access. Token values are returned once. Make sure you save it because you can’t access it
        again.
      operationId: createAnImpersonationToken
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAnImpersonationTokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnImpersonationTokenRequest'
      tags:
        - users
  '/users/{id}/approve':
    post:
      summary: Approve user
      description: Approves the specified user. Available only for administrators.
      operationId: approveUser
      parameters:
        - name: id
          in: path
          description: ID of specified user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/approveUserResponse'
      tags:
        - users
  '/users/{id}/reject':
    post:
      summary: Reject user
      description: Rejects specified user that is pending approval. Available only for administrators.
      operationId: rejectUser
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/approveUserResponse'
      tags:
        - users
  '/users/{user_id}/impersonation_tokens/{impersonation_token_id}':
    get:
      summary: Get an impersonation token of a user
      description: It shows a user’s impersonation token.
      operationId: getAnImpersonationTokenOfAUser
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: impersonation_token_id
          in: path
          description: The ID of the impersonation token
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAnImpersonationTokenOfAUserResponse'
      tags:
        - users
    delete:
      summary: Revoke an impersonation token
      description: Requires administrator access.
      operationId: revokeAnImpersonationToken
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: impersonation_token_id
          in: path
          description: The ID of the impersonation token
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      tags:
        - users
  '/users/{user_id}/personal_access_tokens':
    post:
      summary: Create a personal access token
      description: >-
        Use this API to create a new personal access token. Token values are returned once so, make sure you save it as
        you can’t access it again. This API can only be used by GitLab administrators.
      operationId: createAPersonalAccessToken
      parameters:
        - name: user_id
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAPersonalAccessTokenResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnImpersonationTokenRequest'
      tags:
        - users
  /user/activities:
    get:
      summary: Get user activities (administrator only)
      description: 'Get the last activity date for all users, sorted from oldest to newest.'
      operationId: getUserActivitiesAdministratorOnly
      parameters:
        - name: from
          in: query
          description: 'Date string in the format YEAR-MONTH-DAY. For example, 2016-03-11. Defaults to 6 months ago.'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserActivitiesAdministratorOnlyResponse'
      tags:
        - users
  '/users/{id}/memberships':
    get:
      summary: User memberships (administrator only)
      description: >-
        Lists all projects and groups a user is a member of. This endpoint is available for administrators only. It
        returns the source_id, source_name, source_type and access_level of a membership. Source can be of type
        Namespace (representing a group) or Project. The response represents only direct memberships. Inherited
        memberships, for example in subgroups, are not included. Access levels are represented by an integer value. For
        more details, read about the meaning of access level values.
      operationId: userMembershipsAdministratorOnly
      parameters:
        - name: id
          in: path
          description: The ID of a specified user
          required: true
          schema:
            type: integer
        - name: type
          in: query
          description: Filter memberships by type. Can be either Project or Namespace
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userMembershipsAdministratorOnlyResponse'
      tags:
        - users
  /version:
    get:
      summary: Version API
      description: Retrieve version information for this GitLab instance. Responds 200 OK for authenticated users.
      operationId: versionApi
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/versionApiResponse'
      tags:
        - version
  '/projects/{id}/merge_requests/{merge_request_iid}/visual_review_discussions':
    post:
      summary: Create new merge request thread
      description: >-
        Creates a new thread to a single project merge request. This is similar to creating a note but other comments
        (replies) can be added to it later.
      operationId: createNewMergeRequestThread
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project
          required: true
          schema:
            type: string
        - name: merge_request_iid
          in: path
          description: The IID of a merge request
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNewMergeRequestThreadRequest'
      tags:
        - visual_review_discussions
  '/vulnerabilities/{id}':
    get:
      summary: Single vulnerability
      description: Gets a single vulnerability
      operationId: singleVulnerability
      parameters:
        - name: id
          in: path
          description: The ID of a Vulnerability to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleVulnerabilityResponse'
      tags:
        - vulnerabilities
  '/vulnerabilities/{id}/confirm':
    post:
      summary: Confirm vulnerability
      description: Confirms a given vulnerability. Returns status code 304 if the vulnerability is already confirmed.
      operationId: confirmVulnerability
      parameters:
        - name: id
          in: path
          description: The ID of a vulnerability to confirm
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleVulnerabilityResponse'
      tags:
        - vulnerabilities
  '/vulnerabilities/{id}/resolve':
    post:
      summary: Resolve vulnerability
      description: Resolves a given vulnerability. Returns status code 304 if the vulnerability is already resolved.
      operationId: resolveVulnerability
      parameters:
        - name: id
          in: path
          description: The ID of a Vulnerability to resolve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleVulnerabilityResponse'
      tags:
        - vulnerabilities
  '/vulnerabilities/{id}/dismiss':
    post:
      summary: Dismiss vulnerability
      description: Dismisses a given vulnerability. Returns status code 304 if the vulnerability is already dismissed.
      operationId: dismissVulnerability
      parameters:
        - name: id
          in: path
          description: The ID of a vulnerability to dismiss
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleVulnerabilityResponse'
      tags:
        - vulnerabilities
  '/vulnerabilities/{id}/revert':
    post:
      summary: Revert vulnerability to detected state
      description: >-
        Reverts a given vulnerability to detected state. Returns status code 304 if the vulnerability is already in
        detected state.
      operationId: revertVulnerabilityToDetectedState
      parameters:
        - name: id
          in: path
          description: The ID of a vulnerability to revert to detected state
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singleVulnerabilityResponse'
      tags:
        - vulnerabilities
  '/security/projects/{id}/vulnerability_exports':
    post:
      summary: Create a project-level vulnerability export
      description: Creates a new vulnerability export for a project.
      operationId: createAProjectLevelVulnerabilityExport
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project which the authenticated user is a member of
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAProjectLevelVulnerabilityExportResponse'
      tags:
        - vulnerability_exports
  '/security/groups/{id}/vulnerability_exports':
    post:
      summary: Create a group-level vulnerability export
      description: Creates a new vulnerability export for a group.
      operationId: createAGroupLevelVulnerabilityExport
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the group which the authenticated user is a member of
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAProjectLevelVulnerabilityExportResponse'
      tags:
        - vulnerability_exports
  /security/vulnerability_exports:
    post:
      summary: Create an instance-level vulnerability export
      description: Creates a new vulnerability export for the projects of the user selected in the Security Dashboard.
      operationId: createAnInstanceLevelVulnerabilityExport
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAProjectLevelVulnerabilityExportResponse'
      tags:
        - vulnerability_exports
  '/security/vulnerability_exports/{id}':
    get:
      summary: Get single vulnerability export
      description: Gets a single vulnerability export.
      operationId: getSingleVulnerabilityExport
      parameters:
        - name: id
          in: path
          description: The vulnerability export’s ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAProjectLevelVulnerabilityExportResponse'
      tags:
        - vulnerability_exports
  '/security/vulnerability_exports/{id}/download':
    get:
      summary: Download vulnerability export
      description: Downloads a single vulnerability export.
      operationId: downloadVulnerabilityExport
      parameters:
        - name: id
          in: path
          description: The vulnerability export’s ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
      tags:
        - vulnerability_exports
  '/projects/{id}/vulnerability_findings':
    get:
      summary: List project vulnerability findings
      description: List all of a project’s vulnerability findings.
      operationId: listProjectVulnerabilityFindings
      parameters:
        - name: id
          in: path
          description: The ID or URL-encoded path of the project which the authenticated user is a member of.
          required: true
          schema:
            type: string
        - name: report_type
          in: query
          description: >-
            Returns vulnerability findings belonging to specified report type. Valid values: sast, dast,
            dependency_scanning, or container_scanning. Defaults to all.
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: 'Returns vulnerability findings for the given scope: all or dismissed. Defaults to dismissed.'
          required: false
          schema:
            type: string
        - name: severity
          in: query
          description: >-
            Returns vulnerability findings belonging to specified severity level: info, unknown, low, medium, high, or
            critical. Defaults to all.
          required: false
          schema:
            type: string
        - name: confidence
          in: query
          description: >-
            Returns vulnerability findings belonging to specified confidence level: ignore, unknown, experimental, low,
            medium, high, or confirmed. Defaults to all.
          required: false
          schema:
            type: string
        - name: pipeline_id
          in: query
          description: Returns vulnerability findings belonging to specified pipeline.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listProjectVulnerabilityFindingsResponse'
      tags:
        - vulnerability_findings
components:
  schemas:
    listAccessRequestsForAGroupOrProjectResponse:
      type: array
      items:
        $ref: '#/components/schemas/requestAccessToAGroupOrProjectResponse'
    requestAccessToAGroupOrProjectResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        requested_at:
          type: string
          format: date-time
    approveAnAccessRequestRequest:
      type: object
      properties:
        access_level:
          type: integer
    approveAnAccessRequestResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        access_level:
          type: integer
    sidekiqQueuesAdministrationApiResponse:
      type: object
      properties:
        completed:
          type: boolean
        deleted_jobs:
          type: integer
        queue_size:
          type: integer
    getCurrentAppearanceConfigurationResponse:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        logo:
          type: string
        header_logo:
          type: string
        favicon:
          type: string
        new_project_guidelines:
          type: string
        profile_image_guidelines:
          type: string
        header_message:
          type: string
        footer_message:
          type: string
        message_background_color:
          type: string
        message_font_color:
          type: string
        email_header_and_footer_enabled:
          type: boolean
    changeAppearanceConfigurationRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        new_project_guidelines:
          type: string
        profile_image_guidelines:
          type: string
        header_message:
          type: string
        footer_message:
          type: string
        message_background_color:
          type: string
        message_font_color:
          type: string
        email_header_and_footer_enabled:
          type: boolean
    changeLogoRequest:
      type: object
      properties:
        logo:
          type: string
    changeLogoResponse:
      type: string
    createAnApplicationRequest:
      type: object
      properties:
        name:
          type: string
        redirect_uri:
          type: string
        scopes:
          type: string
        confidential:
          type: boolean
      required:
        - name
        - redirect_uri
        - scopes
    createAnApplicationResponse:
      type: object
      properties:
        id:
          type: integer
        application_id:
          type: string
        application_name:
          type: string
        secret:
          type: string
        callback_url:
          type: string
        confidential:
          type: boolean
    listAllApplicationsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          application_id:
            type: string
          application_name:
            type: string
          callback_url:
            type: string
          confidential:
            type: boolean
    retrieveAllInstanceAuditEventsResponse:
      type: array
      items:
        $ref: '#/components/schemas/retrieveSingleInstanceAuditEventResponse'
    retrieveSingleInstanceAuditEventResponse:
      type: object
      properties:
        id:
          type: integer
        author_id:
          type: integer
        entity_id:
          type: integer
        entity_type:
          type: string
        details:
          type: object
          properties:
            custom_message:
              type: string
            author_name:
              type: string
            target_id:
              type: string
            target_type:
              type: string
            target_details:
              type: string
            ip_address:
              type: string
            entity_path:
              type: string
        created_at:
          type: string
          format: date-time
    getASingleAvatarUrlResponse:
      type: object
      properties:
        avatar_url:
          type: string
    listAnAwardableAwardEmojisResponse:
      type: array
      items:
        $ref: '#/components/schemas/getSingleAwardEmojiResponse'
    getSingleAwardEmojiResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        user:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        awardable_id:
          type: integer
        awardable_type:
          type: string
    awardANewEmojiRequest:
      type: object
      properties:
        issue_iid/merge_request_iid/snippet_id:
          type: integer
        name:
          type: string
      required:
        - issue_iid/merge_request_iid/snippet_id
        - name
    awardANewEmojiOnACommentRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    listProjectIssueBoardsResponse:
      type: array
      items:
        $ref: '#/components/schemas/showASingleIssueBoardResponse'
    showASingleIssueBoardResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        project:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
            http_url_to_repo:
              type: string
            web_url:
              type: string
        milestone:
          type: object
          properties:
            id:
              type: integer
            title:
              type: string
        lists:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              label:
                type: object
                properties:
                  name:
                    type: string
                  color:
                    type: string
                  description:
                    type: string
              position:
                type: integer
              max_issue_count:
                type: integer
              max_issue_weight:
                type: integer
              limit_metric:
                type: string
    createAnIssueBoardRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    createAnIssueBoardResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
            http_url_to_repo:
              type: string
            web_url:
              type: string
        name:
          type: string
        lists:
          type: array
          items: {}
        group:
          type: string
        milestone:
          type: string
        assignee:
          type: string
        labels:
          type: array
          items: {}
        weight:
          type: string
    updateAnIssueBoardRequest:
      type: object
      properties:
        name:
          type: string
        assignee_id:
          type: integer
        milestone_id:
          type: integer
        labels:
          type: string
        weight:
          type: integer
    listBoardListsInAProjectIssueBoardResponse:
      type: array
      items:
        $ref: '#/components/schemas/showASingleBoardListResponse'
    showASingleBoardListResponse:
      type: object
      properties:
        id:
          type: integer
        label:
          type: object
          properties:
            name:
              type: string
            color:
              type: string
            description:
              type: string
        position:
          type: integer
        max_issue_count:
          type: integer
        max_issue_weight:
          type: integer
        limit_metric:
          type: string
    createABoardListRequest:
      type: object
      properties:
        label_id:
          type: integer
        assignee_id:
          type: integer
        milestone_id:
          type: integer
    reorderAListInABoardRequest:
      type: object
      properties:
        position:
          type: integer
      required:
        - position
    listRepositoryBranchesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getSingleRepositoryBranchResponse'
    getSingleRepositoryBranchResponse:
      type: object
      properties:
        name:
          type: string
        merged:
          type: boolean
        protected:
          type: boolean
        default:
          type: boolean
        developers_can_push:
          type: boolean
        developers_can_merge:
          type: boolean
        can_push:
          type: boolean
        web_url:
          type: string
        commit:
          type: object
          properties:
            author_email:
              type: string
            author_name:
              type: string
            authored_date:
              type: string
            committed_date:
              type: string
            committer_email:
              type: string
            committer_name:
              type: string
            id:
              type: string
            short_id:
              type: string
            title:
              type: string
            message:
              type: string
            parent_ids:
              type: array
              items:
                type: string
    createRepositoryBranchRequest:
      type: object
      properties:
        branch:
          type: string
        ref:
          type: string
      required:
        - branch
        - ref
    getAllBroadcastMessagesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASpecificBroadcastMessageResponse'
    getASpecificBroadcastMessageResponse:
      type: object
      properties:
        message:
          type: string
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        color:
          type: string
        font:
          type: string
        id:
          type: integer
        active:
          type: boolean
        target_access_levels:
          type: array
          items:
            type: integer
        target_path:
          type: string
        broadcast_type:
          type: string
        dismissable:
          type: boolean
    createABroadcastMessageRequest:
      type: object
      properties:
        message:
          type: string
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        color:
          type: string
        font:
          type: string
        target_access_levels:
          type: array
          items:
            type: integer
        target_path:
          type: string
        broadcast_type:
          type: string
        dismissable:
          type: boolean
      required:
        - message
    listTheAgentsForAProjectResponse:
      type: array
      items:
        $ref: '#/components/schemas/getDetailsAboutAnAgentResponse'
    getDetailsAboutAnAgentResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        config_project:
          type: object
          properties:
            id:
              type: integer
            description:
              type: string
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
            created_at:
              type: string
              format: date-time
        created_at:
          type: string
          format: date-time
        created_by_user_id:
          type: integer
    registerAnAgentWithAProjectRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    listTokensForAnAgentResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          description:
            type: string
          agent_id:
            type: integer
          status:
            type: string
          created_at:
            type: string
            format: date-time
          created_by_user_id:
            type: integer
    getASingleAgentTokenResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        agent_id:
          type: integer
        status:
          type: string
        created_at:
          type: string
          format: date-time
        created_by_user_id:
          type: integer
        last_used_at:
          type: string
    createAnAgentTokenRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
      required:
        - name
    createAnAgentTokenResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        agent_id:
          type: integer
        status:
          type: string
        created_at:
          type: string
          format: date-time
        created_by_user_id:
          type: integer
        last_used_at:
          type: string
        token:
          type: string
    listRepositoryCommitsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          short_id:
            type: string
          title:
            type: string
          author_name:
            type: string
          author_email:
            type: string
          authored_date:
            type: string
          committer_name:
            type: string
          committer_email:
            type: string
          committed_date:
            type: string
          created_at:
            type: string
            format: date-time
          message:
            type: string
          parent_ids:
            type: array
            items:
              type: string
          web_url:
            type: string
    createACommitWithMultipleFilesAndActionsRequest:
      type: object
      properties:
        branch:
          type: string
        commit_message:
          type: string
        start_branch:
          type: string
        start_sha:
          type: string
        start_project:
          oneOf:
            - type: integer
            - type: string
        'actions[]':
          type: array
          items:
            type: string
        author_email:
          type: string
        author_name:
          type: string
        stats:
          type: boolean
        force:
          type: boolean
      required:
        - branch
        - commit_message
        - 'actions[]'
    createACommitWithMultipleFilesAndActionsResponse:
      type: object
      properties:
        id:
          type: string
        short_id:
          type: string
        title:
          type: string
        author_name:
          type: string
        author_email:
          type: string
        committer_name:
          type: string
        committer_email:
          type: string
        created_at:
          type: string
          format: date-time
        message:
          type: string
        parent_ids:
          type: array
          items:
            type: string
        committed_date:
          type: string
        authored_date:
          type: string
        stats:
          type: object
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
        status:
          type: string
        web_url:
          type: string
    getASingleCommitResponse:
      type: object
      properties:
        id:
          type: string
        short_id:
          type: string
        title:
          type: string
        author_name:
          type: string
        author_email:
          type: string
        committer_name:
          type: string
        committer_email:
          type: string
        created_at:
          type: string
          format: date-time
        message:
          type: string
        committed_date:
          type: string
        authored_date:
          type: string
        parent_ids:
          type: array
          items:
            type: string
        last_pipeline:
          type: object
          properties:
            id:
              type: integer
            ref:
              type: string
            sha:
              type: string
            status:
              type: string
        stats:
          type: object
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
        status:
          type: string
        web_url:
          type: string
    getReferencesACommitIsPushedToResponse:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
          name:
            type: string
    cherryPickACommitRequest:
      type: object
      properties:
        branch:
          type: string
        dry_run:
          type: boolean
        message:
          type: string
      required:
        - branch
    cherryPickACommitResponse:
      type: object
      properties:
        dry_run:
          type: string
        message:
          type: string
        error_code:
          type: string
        id:
          type: string
        short_id:
          type: string
        author_name:
          type: string
        author_email:
          type: string
        authored_date:
          type: string
        created_at:
          type: string
          format: date-time
        committer_name:
          type: string
        committer_email:
          type: string
        committed_date:
          type: string
        title:
          type: string
        parent_ids:
          type: array
          items:
            type: string
        web_url:
          type: string
    revertACommitRequest:
      type: object
      properties:
        branch:
          type: string
        dry_run:
          type: boolean
      required:
        - branch
    getTheDiffOfACommitResponse:
      type: array
      items:
        type: object
        properties:
          diff:
            type: string
          new_path:
            type: string
          old_path:
            type: string
          a_mode:
            type: string
          b_mode:
            type: string
          new_file:
            type: boolean
          renamed_file:
            type: boolean
          deleted_file:
            type: boolean
    getTheCommentsOfACommitResponse:
      type: array
      items:
        type: object
        properties:
          note:
            type: string
          author:
            type: object
            properties:
              id:
                type: integer
              username:
                type: string
              email:
                type: string
              name:
                type: string
              state:
                type: string
              created_at:
                type: string
                format: date-time
    postCommentToCommitRequest:
      type: object
      properties:
        note:
          type: string
        path:
          type: string
        line:
          type: integer
        line_type:
          type: string
      required:
        - note
    postCommentToCommitResponse:
      type: object
      properties:
        author:
          type: object
          properties:
            web_url:
              type: string
            avatar_url:
              type: string
            username:
              type: string
            state:
              type: string
            name:
              type: string
            id:
              type: integer
        created_at:
          type: string
          format: date-time
        line_type:
          type: string
        path:
          type: string
        line:
          type: integer
        note:
          type: string
    getTheDiscussionsOfACommitResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          individual_note:
            type: boolean
          notes:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                type:
                  type: string
                body:
                  type: string
                attachment:
                  type: string
                author:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    username:
                      type: string
                    web_url:
                      type: string
                    state:
                      type: string
                    avatar_url:
                      type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                system:
                  type: boolean
                noteable_id:
                  type: string
                noteable_type:
                  type: string
                resolvable:
                  type: boolean
                confidential:
                  type: string
                noteable_iid:
                  type: string
                commands_changes:
                  type: object
                  properties: {}
    listTheStatusesOfACommitResponse:
      type: array
      items:
        type: object
        properties:
          status:
            type: string
          created_at:
            type: string
            format: date-time
          started_at:
            type: string
          name:
            type: string
          allow_failure:
            type: boolean
          author:
            type: object
            properties:
              username:
                type: string
              state:
                type: string
              web_url:
                type: string
              avatar_url:
                type: string
              id:
                type: integer
              name:
                type: string
          description:
            type: string
          sha:
            type: string
          target_url:
            type: string
          finished_at:
            type: string
          id:
            type: integer
          ref:
            type: string
    postTheBuildStatusToACommitRequest:
      type: object
      properties:
        state:
          type: string
        ref:
          type: string
        name or context:
          type: string
        target_url:
          type: string
        description:
          type: string
        coverage:
          type: number
        pipeline_id:
          type: integer
      required:
        - state
    postTheBuildStatusToACommitResponse:
      type: object
      properties:
        author:
          type: object
          properties:
            web_url:
              type: string
            name:
              type: string
            avatar_url:
              type: string
            username:
              type: string
            state:
              type: string
            id:
              type: integer
        name:
          type: string
        sha:
          type: string
        status:
          type: string
        coverage:
          type: integer
        description:
          type: string
        id:
          type: integer
        target_url:
          type: string
        ref:
          type: string
        started_at:
          type: string
        created_at:
          type: string
          format: date-time
        allow_failure:
          type: boolean
        finished_at:
          type: string
          format: date-time
    listMergeRequestsAssociatedWithACommitResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          project_id:
            type: integer
          title:
            type: string
          description:
            type: string
          state:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          target_branch:
            type: string
          source_branch:
            type: string
          upvotes:
            type: integer
          downvotes:
            type: integer
          author:
            type: object
            properties:
              web_url:
                type: string
              name:
                type: string
              avatar_url:
                type: string
              username:
                type: string
              state:
                type: string
              id:
                type: integer
          assignee:
            type: string
          source_project_id:
            type: integer
          target_project_id:
            type: integer
          labels:
            type: array
            items: {}
          draft:
            type: boolean
          work_in_progress:
            type: boolean
          milestone:
            type: string
          merge_when_pipeline_succeeds:
            type: boolean
          merge_status:
            type: string
          sha:
            type: string
          merge_commit_sha:
            type: string
          squash_commit_sha:
            type: string
          user_notes_count:
            type: integer
          discussion_locked:
            type: string
          should_remove_source_branch:
            type: string
          force_remove_source_branch:
            type: boolean
          web_url:
            type: string
          time_stats:
            type: object
            properties:
              time_estimate:
                type: integer
              total_time_spent:
                type: integer
              human_time_estimate:
                type: string
              human_total_time_spent:
                type: string
    getGpgSignatureOfACommitResponse:
      type: object
      properties:
        message:
          type: string
        signature_type:
          type: string
        verification_status:
          type: string
        x509_certificate:
          type: object
          properties:
            id:
              type: integer
            subject:
              type: string
            subject_key_identifier:
              type: string
            email:
              type: string
            serial_number:
              type: integer
            certificate_status:
              type: string
            x509_issuer:
              type: object
              properties:
                id:
                  type: integer
                subject:
                  type: string
                subject_key_identifier:
                  type: string
                crl_url:
                  type: string
        commit_source:
          type: string
        gpg_key_id:
          type: integer
        gpg_key_primary_keyid:
          type: string
        gpg_key_user_name:
          type: string
        gpg_key_user_email:
          type: string
        gpg_key_subkey_id:
          type: string
    changeTheVisibilityOfTheContainerRegistryRequest:
      type: object
      properties:
        container_registry_access_level:
          type: string
    changeTheVisibilityOfTheContainerRegistryResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        container_registry_access_level:
          type: string
    withinAProjectResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          version:
            type: string
          package_type:
            type: string
          created_at:
            type: string
            format: date-time
    withinAGroupResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          version:
            type: string
          package_type:
            type: string
          _links:
            type: object
            properties:
              web_path:
                type: string
              delete_api_path:
                type: string
          created_at:
            type: string
            format: date-time
          pipelines:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                status:
                  type: string
                ref:
                  type: string
                sha:
                  type: string
                web_url:
                  type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    avatar_url:
                      type: string
    getDetailsOfASingleRepositoryResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        project_id:
          type: integer
        location:
          type: string
        created_at:
          type: string
          format: date-time
        cleanup_policy_started_at:
          type: string
          format: date-time
        tags_count:
          type: integer
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              path:
                type: string
              location:
                type: string
        size:
          type: integer
    getDetailsOfARegistryRepositoryTagResponse:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        location:
          type: string
        revision:
          type: string
        short_revision:
          type: string
        digest:
          type: string
        created_at:
          type: string
          format: date-time
        total_size:
          type: integer
    listCustomAttributesResponse:
      type: array
      items:
        $ref: '#/components/schemas/deleteAPipelineScheduleVariableResponse'
    singleCustomAttributeResponse:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    setCustomAttributeRequest:
      type: object
      properties:
        value:
          type: string
      required:
        - value
    listProjectDependenciesResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          version:
            type: string
          package_manager:
            type: string
          dependency_file_path:
            type: string
          vulnerabilities:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                severity:
                  type: string
    listAllDeployKeysResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          key:
            type: string
          fingerprint:
            type: string
          created_at:
            type: string
            format: date-time
          projects_with_write_access:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                description:
                  type: string
                name:
                  type: string
                name_with_namespace:
                  type: string
                path:
                  type: string
                path_with_namespace:
                  type: string
                created_at:
                  type: string
                  format: date-time
    listProjectDeployKeysResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleDeployKeyResponse'
    getASingleDeployKeyResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        key:
          type: string
        created_at:
          type: string
          format: date-time
        can_push:
          type: boolean
    addDeployKeyRequest:
      type: object
      properties:
        title:
          type: string
        key:
          type: string
        can_push:
          type: boolean
      required:
        - title
        - key
    updateDeployKeyRequest:
      type: object
      properties:
        title:
          type: string
        can_push:
          type: boolean
    listAllDeployTokensResponse:
      type: array
      items:
        $ref: '#/components/schemas/getAProjectDeployTokenResponse'
    getAProjectDeployTokenResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        expires_at:
          type: string
          format: date-time
        revoked:
          type: boolean
        expired:
          type: boolean
        scopes:
          type: array
          items:
            type: string
    createAProjectDeployTokenRequest:
      type: object
      properties:
        name:
          type: string
        expires_at:
          type: string
          format: date-time
        username:
          type: string
        scopes:
          type: array
          items:
            type: string
    createAProjectDeployTokenResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        expires_at:
          type: string
          format: date-time
        token:
          type: string
        revoked:
          type: boolean
        expired:
          type: boolean
        scopes:
          type: array
          items:
            type: string
    listProjectDeploymentsResponse:
      type: array
      items:
        type: object
        properties:
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          status:
            type: string
          deployable:
            type: object
            properties:
              commit:
                type: object
                properties:
                  author_email:
                    type: string
                  author_name:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  id:
                    type: string
                  message:
                    type: string
                  short_id:
                    type: string
                  title:
                    type: string
              coverage:
                type: string
              created_at:
                type: string
                format: date-time
              finished_at:
                type: string
                format: date-time
              id:
                type: integer
              name:
                type: string
              ref:
                type: string
              runner:
                type: string
              stage:
                type: string
              started_at:
                type: string
              status:
                type: string
              tag:
                type: boolean
              user:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  username:
                    type: string
                  state:
                    type: string
                  avatar_url:
                    type: string
                  web_url:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  bio:
                    type: string
                  location:
                    type: string
                  public_email:
                    type: string
                  skype:
                    type: string
                  linkedin:
                    type: string
                  twitter:
                    type: string
                  website_url:
                    type: string
                  organization:
                    type: string
              pipeline:
                type: object
                properties:
                  created_at:
                    type: string
                    format: date-time
                  id:
                    type: integer
                  ref:
                    type: string
                  sha:
                    type: string
                  status:
                    type: string
                  updated_at:
                    type: string
                    format: date-time
                  web_url:
                    type: string
          environment:
            type: object
            properties:
              external_url:
                type: string
              id:
                type: integer
              name:
                type: string
          id:
            type: integer
          iid:
            type: integer
          ref:
            type: string
          sha:
            type: string
          user:
            type: object
            properties:
              avatar_url:
                type: string
              id:
                type: integer
              name:
                type: string
              state:
                type: string
              username:
                type: string
              web_url:
                type: string
    getASpecificDeploymentResponse:
      type: object
      properties:
        approval_summary:
          type: object
          properties:
            rules:
              type: array
              items:
                type: object
                properties:
                  user_id:
                    type: string
                  group_id:
                    type: integer
                  access_level:
                    type: string
                  access_level_description:
                    type: string
                  required_approvals:
                    type: integer
                  deployment_approvals:
                    type: array
                    items: {}
        status:
          type: string
        pending_approval_count:
          type: integer
        approvals:
          type: array
          items:
            type: object
            properties:
              user:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  name:
                    type: string
                  state:
                    type: string
                  avatar_url:
                    type: string
                  web_url:
                    type: string
              status:
                type: string
              created_at:
                type: string
                format: date-time
              comment:
                type: string
        id:
          type: integer
        iid:
          type: integer
        ref:
          type: string
        sha:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        environment:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            external_url:
              type: string
        deployable:
          type: object
          properties:
            id:
              type: integer
            status:
              type: string
            stage:
              type: string
            name:
              type: string
            ref:
              type: string
            tag:
              type: boolean
            coverage:
              type: string
            created_at:
              type: string
              format: date-time
            started_at:
              type: string
            finished_at:
              type: string
              format: date-time
            user:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                username:
                  type: string
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
                created_at:
                  type: string
                  format: date-time
                bio:
                  type: string
                location:
                  type: string
                skype:
                  type: string
                linkedin:
                  type: string
                twitter:
                  type: string
                website_url:
                  type: string
                organization:
                  type: string
            commit:
              type: object
              properties:
                id:
                  type: string
                short_id:
                  type: string
                title:
                  type: string
                author_name:
                  type: string
                author_email:
                  type: string
                created_at:
                  type: string
                  format: date-time
                message:
                  type: string
            pipeline:
              type: object
              properties:
                created_at:
                  type: string
                  format: date-time
                id:
                  type: integer
                ref:
                  type: string
                sha:
                  type: string
                status:
                  type: string
                updated_at:
                  type: string
                  format: date-time
                web_url:
                  type: string
            runner:
              type: string
    createADeploymentRequest:
      type: object
      properties:
        environment:
          type: string
        sha:
          type: string
        ref:
          type: string
        tag:
          type: boolean
        status:
          type: string
      required:
        - environment
        - sha
        - ref
        - tag
    createADeploymentResponse:
      type: object
      properties:
        status:
          type: string
        pending_approval_count:
          type: integer
        approvals:
          type: array
          items: {}
        id:
          type: integer
        iid:
          type: integer
        ref:
          type: string
        sha:
          type: string
        created_at:
          type: string
          format: date-time
        user:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        environment:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            external_url:
              type: string
        deployable:
          type: string
    updateADeploymentRequest:
      type: object
      properties:
        status:
          type: string
    approveOrRejectABlockedDeploymentRequest:
      type: object
      properties:
        status:
          type: string
        comment:
          type: string
        represented_as:
          type: string
      required:
        - status
    approveOrRejectABlockedDeploymentResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            name:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        comment:
          type: string
    listProjectIssueDiscussionItemsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          individual_note:
            type: boolean
          notes:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                type:
                  type: string
                body:
                  type: string
                attachment:
                  type: string
                author:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    username:
                      type: string
                    state:
                      type: string
                    avatar_url:
                      type: string
                    web_url:
                      type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                system:
                  type: boolean
                noteable_id:
                  type: integer
                noteable_type:
                  type: string
                noteable_iid:
                  type: string
    createNewIssueThreadRequest:
      type: object
      properties:
        body:
          type: string
        created_at:
          type: string
      required:
        - body
    addNoteToExistingIssueThreadRequest:
      type: object
      properties:
        note_id:
          type: integer
        body:
          type: string
        created_at:
          type: string
      required:
        - note_id
        - body
    modifyExistingIssueThreadNoteRequest:
      type: object
      properties:
        body:
          type: string
      required:
        - body
    createNewMergeRequestThreadRequest:
      type: object
      properties:
        body:
          type: string
        position:
          type: object
          additionalProperties: true
        'position[base_sha]':
          type: string
        'position[start_sha]':
          type: string
        'position[head_sha]':
          type: string
        'position[position_type]':
          type: string
        'position[new_path]':
          type: string
        'position[new_line]':
          type: integer
        'position[old_path]':
          type: string
        'position[old_line]':
          type: integer
        'position[width]':
          type: integer
        'position[height]':
          type: integer
        'position[x]':
          type: integer
        'position[y]':
          type: integer
      required:
        - body
        - 'position[base_sha]'
        - 'position[start_sha]'
        - 'position[head_sha]'
        - 'position[position_type]'
    resolveAMergeRequestThreadRequest:
      type: object
      properties:
        resolved:
          type: boolean
      required:
        - resolved
    modifyAnExistingMergeRequestThreadNoteRequest:
      type: object
      properties:
        body:
          type: string
        resolved:
          type: boolean
    createNewCommitThreadRequest:
      type: object
      properties:
        body:
          type: string
        created_at:
          type: string
        position:
          type: object
          additionalProperties: true
        'position[base_sha]':
          type: string
        'position[start_sha]':
          type: string
        'position[head_sha]':
          type: string
        'position[position_type]':
          type: string
        'position[new_path]':
          type: string
        'position[new_line]':
          type: integer
        'position[old_path]':
          type: string
        'position[old_line]':
          type: integer
        'position[width]':
          type: integer
        'position[height]':
          type: integer
        'position[x]':
          type: integer
        'position[y]':
          type: integer
      required:
        - body
        - 'position[base_sha]'
        - 'position[start_sha]'
        - 'position[head_sha]'
        - 'position[position_type]'
    listEnvironmentsResponse:
      type: string
    getASpecificEnvironmentResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
        external_url:
          type: string
        state:
          type: string
        tier:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        enable_advanced_logs_querying:
          type: boolean
        logs_api_path:
          type: string
        last_deployment:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            ref:
              type: string
            sha:
              type: string
            created_at:
              type: string
              format: date-time
            status:
              type: string
            user:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                state:
                  type: string
                username:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            deployable:
              type: object
              properties:
                id:
                  type: integer
                status:
                  type: string
                stage:
                  type: string
                name:
                  type: string
                ref:
                  type: string
                tag:
                  type: boolean
                coverage:
                  type: string
                created_at:
                  type: string
                  format: date-time
                started_at:
                  type: string
                  format: date-time
                finished_at:
                  type: string
                  format: date-time
                duration:
                  type: number
                user:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    username:
                      type: string
                    state:
                      type: string
                    avatar_url:
                      type: string
                    web_url:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    bio:
                      type: string
                    location:
                      type: string
                    public_email:
                      type: string
                    skype:
                      type: string
                    linkedin:
                      type: string
                    twitter:
                      type: string
                    website_url:
                      type: string
                    organization:
                      type: string
                commit:
                  type: object
                  properties:
                    id:
                      type: string
                    short_id:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    parent_ids:
                      type: array
                      items:
                        type: string
                    title:
                      type: string
                    message:
                      type: string
                    author_name:
                      type: string
                    author_email:
                      type: string
                    authored_date:
                      type: string
                    committer_name:
                      type: string
                    committer_email:
                      type: string
                    committed_date:
                      type: string
                pipeline:
                  type: object
                  properties:
                    id:
                      type: integer
                    sha:
                      type: string
                    ref:
                      type: string
                    status:
                      type: string
                    web_url:
                      type: string
                web_url:
                  type: string
                artifacts:
                  type: array
                  items:
                    type: object
                    properties:
                      file_type:
                        type: string
                      size:
                        type: integer
                      filename:
                        type: string
                      file_format:
                        type: string
                runner:
                  type: string
                artifacts_expire_at:
                  type: string
    createANewEnvironmentRequest:
      type: object
      properties:
        name:
          type: string
        external_url:
          type: string
        tier:
          type: string
      required:
        - name
    createANewEnvironmentResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
        external_url:
          type: string
        state:
          type: string
        tier:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    deleteMultipleStoppedReviewAppsResponse:
      type: object
      properties:
        scheduled_entries:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              slug:
                type: string
              external_url:
                type: string
        unprocessable_entries:
          type: array
          items: {}
    stopAnEnvironmentResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string
        external_url:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    listIssuesForAnEpicResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          project_id:
            type: integer
          title:
            type: string
          description:
            type: string
          state:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          closed_at:
            type: string
          labels:
            type: array
            items: {}
          milestone:
            type: object
            properties:
              id:
                type: integer
              iid:
                type: integer
              project_id:
                type: integer
              title:
                type: string
              description:
                type: string
              state:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              due_date:
                type: string
              start_date:
                type: string
          assignees:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                username:
                  type: string
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
          assignee:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          author:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          user_notes_count:
            type: integer
          upvotes:
            type: integer
          downvotes:
            type: integer
          due_date:
            type: string
          confidential:
            type: boolean
          weight:
            type: string
          discussion_locked:
            type: string
          web_url:
            type: string
          time_stats:
            type: object
            properties:
              time_estimate:
                type: integer
              total_time_spent:
                type: integer
              human_time_estimate:
                type: string
              human_total_time_spent:
                type: string
          _links:
            type: object
            properties:
              self:
                type: string
              notes:
                type: string
              award_emoji:
                type: string
              project:
                type: string
          epic_issue_id:
            type: integer
    assignAnIssueToTheEpicResponse:
      type: object
      properties:
        id:
          type: integer
        epic:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            title:
              type: string
            description:
              type: string
            author:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                username:
                  type: string
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            start_date:
              type: string
            end_date:
              type: string
        issue:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            closed_at:
              type: string
            labels:
              type: array
              items: {}
            milestone:
              type: object
              properties:
                id:
                  type: integer
                iid:
                  type: integer
                project_id:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                state:
                  type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                due_date:
                  type: string
                start_date:
                  type: string
            assignees:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  username:
                    type: string
                  state:
                    type: string
                  avatar_url:
                    type: string
                  web_url:
                    type: string
            assignee:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                username:
                  type: string
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            author:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                username:
                  type: string
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            user_notes_count:
              type: integer
            upvotes:
              type: integer
            downvotes:
              type: integer
            due_date:
              type: string
            confidential:
              type: boolean
            weight:
              type: string
            discussion_locked:
              type: string
            web_url:
              type: string
            time_stats:
              type: object
              properties:
                time_estimate:
                  type: integer
                total_time_spent:
                  type: integer
                human_time_estimate:
                  type: string
                human_total_time_spent:
                  type: string
    updateEpicIssueAssociationRequest:
      type: object
      properties:
        move_before_id:
          oneOf:
            - type: integer
            - type: string
        move_after_id:
          oneOf:
            - type: integer
            - type: string
    updateEpicIssueAssociationResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          project_id:
            type: integer
          title:
            type: string
          description:
            type: string
          state:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          closed_at:
            type: string
          labels:
            type: array
            items: {}
          milestone:
            type: object
            properties:
              id:
                type: integer
              iid:
                type: integer
              project_id:
                type: integer
              title:
                type: string
              description:
                type: string
              state:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              due_date:
                type: string
              start_date:
                type: string
          assignees:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                username:
                  type: string
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
          assignee:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          author:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          user_notes_count:
            type: integer
          upvotes:
            type: integer
          downvotes:
            type: integer
          due_date:
            type: string
          confidential:
            type: boolean
          weight:
            type: string
          discussion_locked:
            type: string
          web_url:
            type: string
          time_stats:
            type: object
            properties:
              time_estimate:
                type: integer
              total_time_spent:
                type: integer
              human_time_estimate:
                type: string
              human_total_time_spent:
                type: string
          _links:
            type: object
            properties:
              self:
                type: string
              notes:
                type: string
              award_emoji:
                type: string
              project:
                type: string
          subscribed:
            type: boolean
          epic_issue_id:
            type: integer
          relative_position:
            type: integer
    listEpicsRelatedToAGivenEpicResponse:
      type: array
      items:
        $ref: '#/components/schemas/assignAChildEpicResponse'
    assignAChildEpicResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        group_id:
          type: integer
        parent_id:
          type: integer
        title:
          type: string
        description:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        start_date:
          type: string
        start_date_is_fixed:
          type: boolean
        start_date_fixed:
          type: string
        start_date_from_milestones:
          type: string
        start_date_from_inherited_source:
          type: string
        end_date:
          type: string
        due_date:
          type: string
        due_date_is_fixed:
          type: boolean
        due_date_fixed:
          type: string
        due_date_from_milestones:
          type: string
        due_date_from_inherited_source:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        labels:
          type: array
          items: {}
    createAndAssignAChildEpicRequest:
      type: object
      properties:
        title:
          type: string
        confidential:
          type: boolean
      required:
        - title
    createAndAssignAChildEpicResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        title:
          type: string
        group_id:
          type: integer
        parent_id:
          type: integer
        has_children:
          type: boolean
        has_issues:
          type: boolean
        reference:
          type: string
        url:
          type: string
        relation_url:
          type: string
    reOrderAChildEpicRequest:
      type: object
      properties:
        move_before_id:
          type: integer
        move_after_id:
          type: integer
    listEpicsForAGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/newEpicResponse'
    singleEpicResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        group_id:
          type: integer
        parent_id:
          type: string
        parent_iid:
          type: string
        title:
          type: string
        description:
          type: string
        state:
          type: string
        web_url:
          type: string
        reference:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        start_date:
          type: string
        start_date_is_fixed:
          type: boolean
        start_date_fixed:
          type: string
        start_date_from_milestones:
          type: string
        start_date_from_inherited_source:
          type: string
        end_date:
          type: string
        due_date:
          type: string
        due_date_is_fixed:
          type: boolean
        due_date_fixed:
          type: string
        due_date_from_milestones:
          type: string
        due_date_from_inherited_source:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
        labels:
          type: array
          items: {}
        upvotes:
          type: integer
        downvotes:
          type: integer
        color:
          type: string
        subscribed:
          type: boolean
        _links:
          type: object
          properties:
            self:
              type: string
            epic_issues:
              type: string
            group:
              type: string
            parent:
              type: string
    newEpicRequest:
      type: object
      properties:
        title:
          type: string
        labels:
          type: string
        description:
          type: string
        color:
          type: string
        confidential:
          type: boolean
        created_at:
          type: string
        start_date_is_fixed:
          type: boolean
        start_date_fixed:
          type: string
        due_date_is_fixed:
          type: boolean
        due_date_fixed:
          type: string
        parent_id:
          oneOf:
            - type: integer
            - type: string
      required:
        - title
    newEpicResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        group_id:
          type: integer
        parent_id:
          type: integer
        parent_iid:
          type: integer
        title:
          type: string
        description:
          type: string
        state:
          type: string
        confidential:
          type: string
        web_url:
          type: string
        reference:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        author:
          type: object
          properties:
            name:
              type: string
            avatar_url:
              type: string
            state:
              type: string
            web_url:
              type: string
            id:
              type: integer
            username:
              type: string
        start_date:
          type: string
        start_date_is_fixed:
          type: boolean
        start_date_fixed:
          type: string
        start_date_from_milestones:
          type: string
        start_date_from_inherited_source:
          type: string
        end_date:
          type: string
        due_date:
          type: string
        due_date_is_fixed:
          type: boolean
        due_date_fixed:
          type: string
        due_date_from_milestones:
          type: string
        due_date_from_inherited_source:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
        labels:
          type: array
          items: {}
        upvotes:
          type: integer
        downvotes:
          type: integer
        color:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            epic_issues:
              type: string
            group:
              type: string
            parent:
              type: string
    updateEpicRequest:
      type: object
      properties:
        add_labels:
          type: string
        confidential:
          type: boolean
        description:
          type: string
        due_date_fixed:
          type: string
        due_date_is_fixed:
          type: boolean
        labels:
          type: string
        parent_id:
          oneOf:
            - type: integer
            - type: string
        remove_labels:
          type: string
        start_date_fixed:
          type: string
        start_date_is_fixed:
          type: boolean
        state_event:
          type: string
        title:
          type: string
        updated_at:
          type: string
        color:
          type: string
    updateEpicResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        group_id:
          type: integer
        parent_id:
          type: integer
        parent_iid:
          type: integer
        title:
          type: string
        description:
          type: string
        state:
          type: string
        confidential:
          type: string
        web_url:
          type: string
        reference:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        author:
          type: object
          properties:
            name:
              type: string
            avatar_url:
              type: string
            state:
              type: string
            web_url:
              type: string
            id:
              type: integer
            username:
              type: string
        start_date:
          type: string
        start_date_is_fixed:
          type: boolean
        start_date_fixed:
          type: string
        start_date_from_milestones:
          type: string
        start_date_from_inherited_source:
          type: string
        end_date:
          type: string
        due_date:
          type: string
        due_date_is_fixed:
          type: boolean
        due_date_fixed:
          type: string
        due_date_from_milestones:
          type: string
        due_date_from_inherited_source:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
        labels:
          type: array
          items: {}
        upvotes:
          type: integer
        downvotes:
          type: integer
        color:
          type: string
    createAToDoItemResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
        author:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        action_name:
          type: string
        target_type:
          type: string
        target:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            target_branch:
              type: string
            source_branch:
              type: string
            upvotes:
              type: integer
            downvotes:
              type: integer
            author:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                id:
                  type: integer
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
                discussion_locked:
                  type: boolean
            assignee:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                id:
                  type: integer
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            assignees:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  username:
                    type: string
                  id:
                    type: integer
                  state:
                    type: string
                  avatar_url:
                    type: string
                  web_url:
                    type: string
            reviewers:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  username:
                    type: string
                  id:
                    type: integer
                  state:
                    type: string
                  avatar_url:
                    type: string
                  web_url:
                    type: string
            source_project_id:
              type: integer
            target_project_id:
              type: integer
            labels:
              type: array
              items: {}
            draft:
              type: boolean
            work_in_progress:
              type: boolean
            milestone:
              type: object
              properties:
                id:
                  type: integer
                iid:
                  type: integer
                project_id:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                state:
                  type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                due_date:
                  type: string
            merge_when_pipeline_succeeds:
              type: boolean
            merge_status:
              type: string
            subscribed:
              type: boolean
            sha:
              type: string
            merge_commit_sha:
              type: string
            squash_commit_sha:
              type: string
            user_notes_count:
              type: integer
            changes_count:
              type: string
            should_remove_source_branch:
              type: boolean
            force_remove_source_branch:
              type: boolean
            squash:
              type: boolean
            web_url:
              type: string
            references:
              type: object
              properties:
                short:
                  type: string
                relative:
                  type: string
                full:
                  type: string
        target_url:
          type: string
        body:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
    getErrorTrackingSettingsResponse:
      type: object
      properties:
        active:
          type: boolean
        project_name:
          type: string
        sentry_external_url:
          type: string
        api_url:
          type: string
        integrated:
          type: boolean
    enableOrDisableTheErrorTrackingProjectSettingsRequest:
      type: object
      properties:
        active:
          type: boolean
        integrated:
          type: boolean
      required:
        - active
    listProjectClientKeysResponse:
      type: array
      items:
        $ref: '#/components/schemas/createAClientKeyResponse'
    createAClientKeyResponse:
      type: object
      properties:
        id:
          type: integer
        active:
          type: boolean
        public_key:
          type: string
        sentry_dsn:
          type: string
    listCurrentlyAuthenticatedUserEventsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          project_id:
            type: integer
          action_name:
            type: string
          target_id:
            type: integer
          target_type:
            type: string
          author_id:
            type: integer
          target_title:
            type: string
          created_at:
            type: string
            format: date-time
          author:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          author_username:
            type: string
    getUserContributionEventsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          project_id:
            type: integer
          action_name:
            type: string
          target_id:
            type: integer
          target_type:
            type: string
          author_id:
            type: integer
          target_title:
            type: string
          author:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          author_username:
            type: string
    listAProjectVisibleEventsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          project_id:
            type: integer
          action_name:
            type: string
          target_id:
            type: integer
          target_iid:
            type: integer
          target_type:
            type: string
          author_id:
            type: integer
          target_title:
            type: string
          created_at:
            type: string
            format: date-time
          author:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          author_username:
            type: string
    listAllFeatureFlagUserListsForAProjectResponse:
      type: array
      items:
        $ref: '#/components/schemas/createAFeatureFlagUserListResponse'
    createAFeatureFlagUserListRequest:
      type: object
      properties:
        name:
          type: string
        user_xids:
          type: string
      required:
        - name
        - user_xids
    createAFeatureFlagUserListResponse:
      type: object
      properties:
        name:
          type: string
        user_xids:
          type: string
        id:
          type: integer
        iid:
          type: integer
        project_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    listFeatureFlagsForAProjectResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleFeatureFlagResponse'
    getASingleFeatureFlagResponse:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        version:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        scopes:
          type: array
          items: {}
        strategies:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              parameters:
                type: object
                properties: {}
              scopes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    environment_scope:
                      type: string
    createAFeatureFlagRequest:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        description:
          type: string
        active:
          type: boolean
        'strategies:scopes:environment_scope':
          type: string
      required:
        - name
        - version
    updateAFeatureFlagRequest:
      type: object
      properties:
        description:
          type: string
        active:
          type: boolean
        name:
          type: string
        'strategies:scopes:environment_scope':
          type: string
    listAllFeaturesResponse:
      type: array
      items:
        $ref: '#/components/schemas/setOrCreateAFeatureResponse'
    listAllFeatureDefinitionsResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          introduced_by_url:
            type: string
          rollout_issue_url:
            type: string
          milestone:
            type: string
          log_state_changes:
            type: string
          type:
            type: string
          group:
            type: string
          default_enabled:
            type: boolean
    setOrCreateAFeatureRequest:
      type: object
      properties:
        value:
          oneOf:
            - type: integer
            - type: string
        key:
          type: string
        feature_group:
          type: string
        user:
          type: string
        group:
          type: string
        namespace:
          type: string
        project:
          type: string
        force:
          type: boolean
      required:
        - value
    setOrCreateAFeatureResponse:
      type: object
      properties:
        name:
          type: string
        state:
          type: string
        gates:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: boolean
        definition:
          type: object
          properties:
            name:
              type: string
            introduced_by_url:
              type: string
            rollout_issue_url:
              type: string
            group:
              type: string
            type:
              type: string
            default_enabled:
              type: boolean
    listFreezePeriodsResponse:
      type: array
      items:
        $ref: '#/components/schemas/getAFreezePeriodByAFreeze_period_idResponse'
    getAFreezePeriodByAFreeze_period_idResponse:
      type: object
      properties:
        id:
          type: integer
        freeze_start:
          type: string
        freeze_end:
          type: string
        cron_timezone:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    createAFreezePeriodRequest:
      type: object
      properties:
        freeze_start:
          type: string
        freeze_end:
          type: string
        cron_timezone:
          type: string
      required:
        - freeze_start
        - freeze_end
    createANewGeoNodeRequest:
      type: object
      properties:
        primary:
          type: boolean
        enabled:
          type: boolean
        name:
          type: string
        url:
          type: string
        internal_url:
          type: string
        files_max_capacity:
          type: integer
        repos_max_capacity:
          type: integer
        verification_max_capacity:
          type: integer
        container_repositories_max_capacity:
          type: integer
        sync_object_storage:
          type: boolean
        selective_sync_type:
          type: string
        selective_sync_shards:
          type: array
          items:
            type: string
        selective_sync_namespace_ids:
          type: array
          items:
            type: string
        minimum_reverification_interval:
          type: integer
      required:
        - name
        - url
    createANewGeoNodeResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        internal_url:
          type: string
        primary:
          type: boolean
        enabled:
          type: boolean
        current:
          type: boolean
        files_max_capacity:
          type: integer
        repos_max_capacity:
          type: integer
        verification_max_capacity:
          type: integer
        selective_sync_type:
          type: string
        selective_sync_shards:
          type: array
          items: {}
        selective_sync_namespace_ids:
          type: array
          items:
            type: integer
        minimum_reverification_interval:
          type: integer
        container_repositories_max_capacity:
          type: integer
        sync_object_storage:
          type: boolean
        clone_protocol:
          type: string
        web_edit_url:
          type: string
        web_geo_projects_url:
          type: string
        web_geo_replication_details_url:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            status:
              type: string
            repair:
              type: string
    retrieveConfigurationAboutAllGeoNodesResponse:
      type: array
      items:
        $ref: '#/components/schemas/retrieveConfigurationAboutASpecificGeoNodeResponse'
    retrieveConfigurationAboutASpecificGeoNodeResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        internal_url:
          type: string
        primary:
          type: boolean
        enabled:
          type: boolean
        current:
          type: boolean
        files_max_capacity:
          type: integer
        repos_max_capacity:
          type: integer
        container_repositories_max_capacity:
          type: integer
        verification_max_capacity:
          type: integer
        selective_sync_type:
          type: string
        selective_sync_shards:
          type: array
          items: {}
        selective_sync_namespace_ids:
          type: array
          items:
            type: integer
        minimum_reverification_interval:
          type: integer
        clone_protocol:
          type: string
        web_edit_url:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            status:
              type: string
            repair:
              type: string
    editAGeoNodeRequest:
      type: object
      properties:
        enabled:
          type: boolean
        name:
          type: string
        url:
          type: string
        internal_url:
          type: string
        files_max_capacity:
          type: integer
        repos_max_capacity:
          type: integer
        verification_max_capacity:
          type: integer
        container_repositories_max_capacity:
          type: integer
        sync_object_storage:
          type: boolean
        selective_sync_type:
          type: string
        selective_sync_shards:
          type: array
          items:
            type: string
        selective_sync_namespace_ids:
          type: array
          items:
            type: string
        minimum_reverification_interval:
          type: integer
      required:
        - name
        - url
    repairAGeoNodeResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        internal_url:
          type: string
        primary:
          type: boolean
        enabled:
          type: boolean
        current:
          type: boolean
        files_max_capacity:
          type: integer
        repos_max_capacity:
          type: integer
        container_repositories_max_capacity:
          type: integer
        verification_max_capacity:
          type: integer
        clone_protocol:
          type: string
        web_edit_url:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            status:
              type: string
            repair:
              type: string
    retrieveStatusAboutAllGeoNodesResponse:
      type: array
      items:
        type: object
        properties:
          geo_node_id:
            type: integer
          healthy:
            type: boolean
          health:
            type: string
          health_status:
            type: string
          missing_oauth_application:
            type: boolean
          db_replication_lag_seconds:
            type: string
          lfs_objects_count:
            type: integer
          lfs_objects_checksum_total_count:
            type: integer
          lfs_objects_checksummed_count:
            type: integer
          lfs_objects_checksum_failed_count:
            type: integer
          lfs_objects_synced_count:
            type: string
          lfs_objects_failed_count:
            type: string
          lfs_objects_registry_count:
            type: string
          lfs_objects_verification_total_count:
            type: string
          lfs_objects_verified_count:
            type: string
          lfs_objects_verification_failed_count:
            type: string
          lfs_objects_synced_in_percentage:
            type: string
          lfs_objects_verified_in_percentage:
            type: string
          job_artifacts_count:
            type: integer
          job_artifacts_synced_count:
            type: integer
          job_artifacts_failed_count:
            type: integer
          job_artifacts_synced_missing_on_primary_count:
            type: integer
          job_artifacts_synced_in_percentage:
            type: string
          container_repositories_count:
            type: integer
          container_repositories_synced_count:
            type: string
          container_repositories_failed_count:
            type: string
          container_repositories_synced_in_percentage:
            type: string
          design_repositories_count:
            type: integer
          design_repositories_synced_count:
            type: string
          design_repositories_failed_count:
            type: string
          design_repositories_synced_in_percentage:
            type: string
          projects_count:
            type: integer
          repositories_count:
            type: integer
          repositories_failed_count:
            type: string
          repositories_synced_count:
            type: string
          repositories_synced_in_percentage:
            type: string
          wikis_count:
            type: integer
          wikis_failed_count:
            type: string
          wikis_synced_count:
            type: string
          wikis_synced_in_percentage:
            type: string
          replication_slots_count:
            type: integer
          replication_slots_used_count:
            type: integer
          replication_slots_used_in_percentage:
            type: string
          replication_slots_max_retained_wal_bytes:
            type: integer
          repositories_checked_count:
            type: integer
          repositories_checked_failed_count:
            type: integer
          repositories_checked_in_percentage:
            type: string
          repositories_checksummed_count:
            type: integer
          repositories_checksum_failed_count:
            type: integer
          repositories_checksummed_in_percentage:
            type: string
          wikis_checksummed_count:
            type: integer
          wikis_checksum_failed_count:
            type: integer
          wikis_checksummed_in_percentage:
            type: string
          repositories_verified_count:
            type: integer
          repositories_verification_failed_count:
            type: integer
          repositories_verified_in_percentage:
            type: string
          repositories_checksum_mismatch_count:
            type: integer
          wikis_verified_count:
            type: integer
          wikis_verification_failed_count:
            type: integer
          wikis_verified_in_percentage:
            type: string
          wikis_checksum_mismatch_count:
            type: integer
          repositories_retrying_verification_count:
            type: integer
          wikis_retrying_verification_count:
            type: integer
          last_event_id:
            type: integer
          last_event_timestamp:
            type: integer
          cursor_last_event_id:
            type: string
          cursor_last_event_timestamp:
            type: integer
          last_successful_status_check_timestamp:
            type: integer
          version:
            type: string
          revision:
            type: string
          merge_request_diffs_count:
            type: integer
          merge_request_diffs_checksum_total_count:
            type: integer
          merge_request_diffs_checksummed_count:
            type: integer
          merge_request_diffs_checksum_failed_count:
            type: integer
          merge_request_diffs_synced_count:
            type: string
          merge_request_diffs_failed_count:
            type: string
          merge_request_diffs_registry_count:
            type: string
          merge_request_diffs_verification_total_count:
            type: string
          merge_request_diffs_verified_count:
            type: string
          merge_request_diffs_verification_failed_count:
            type: string
          merge_request_diffs_synced_in_percentage:
            type: string
          merge_request_diffs_verified_in_percentage:
            type: string
          package_files_count:
            type: integer
          package_files_checksum_total_count:
            type: integer
          package_files_checksummed_count:
            type: integer
          package_files_checksum_failed_count:
            type: integer
          package_files_synced_count:
            type: string
          package_files_failed_count:
            type: string
          package_files_registry_count:
            type: string
          package_files_verification_total_count:
            type: string
          package_files_verified_count:
            type: string
          package_files_verification_failed_count:
            type: string
          package_files_synced_in_percentage:
            type: string
          package_files_verified_in_percentage:
            type: string
          pages_deployments_count:
            type: integer
          pages_deployments_checksum_total_count:
            type: integer
          pages_deployments_checksummed_count:
            type: integer
          pages_deployments_checksum_failed_count:
            type: integer
          pages_deployments_synced_count:
            type: string
          pages_deployments_failed_count:
            type: string
          pages_deployments_registry_count:
            type: string
          pages_deployments_verification_total_count:
            type: string
          pages_deployments_verified_count:
            type: string
          pages_deployments_verification_failed_count:
            type: string
          pages_deployments_synced_in_percentage:
            type: string
          pages_deployments_verified_in_percentage:
            type: string
          terraform_state_versions_count:
            type: integer
          terraform_state_versions_checksum_total_count:
            type: integer
          terraform_state_versions_checksummed_count:
            type: integer
          terraform_state_versions_checksum_failed_count:
            type: integer
          terraform_state_versions_synced_count:
            type: string
          terraform_state_versions_failed_count:
            type: string
          terraform_state_versions_registry_count:
            type: string
          terraform_state_versions_verification_total_count:
            type: string
          terraform_state_versions_verified_count:
            type: string
          terraform_state_versions_verification_failed_count:
            type: string
          terraform_state_versions_synced_in_percentage:
            type: string
          terraform_state_versions_verified_in_percentage:
            type: string
          snippet_repositories_count:
            type: integer
          snippet_repositories_checksum_total_count:
            type: integer
          snippet_repositories_checksummed_count:
            type: integer
          snippet_repositories_checksum_failed_count:
            type: integer
          snippet_repositories_synced_count:
            type: string
          snippet_repositories_failed_count:
            type: string
          snippet_repositories_registry_count:
            type: string
          snippet_repositories_verification_total_count:
            type: string
          snippet_repositories_verified_count:
            type: string
          snippet_repositories_verification_failed_count:
            type: string
          snippet_repositories_synced_in_percentage:
            type: string
          snippet_repositories_verified_in_percentage:
            type: string
          group_wiki_repositories_count:
            type: integer
          group_wiki_repositories_checksum_total_count:
            type: integer
          group_wiki_repositories_checksummed_count:
            type: integer
          group_wiki_repositories_checksum_failed_count:
            type: integer
          group_wiki_repositories_synced_count:
            type: string
          group_wiki_repositories_failed_count:
            type: string
          group_wiki_repositories_registry_count:
            type: string
          group_wiki_repositories_verification_total_count:
            type: string
          group_wiki_repositories_verified_count:
            type: string
          group_wiki_repositories_verification_failed_count:
            type: string
          group_wiki_repositories_synced_in_percentage:
            type: string
          group_wiki_repositories_verified_in_percentage:
            type: string
          pipeline_artifacts_count:
            type: integer
          pipeline_artifacts_checksum_total_count:
            type: integer
          pipeline_artifacts_checksummed_count:
            type: integer
          pipeline_artifacts_checksum_failed_count:
            type: integer
          pipeline_artifacts_synced_count:
            type: string
          pipeline_artifacts_failed_count:
            type: string
          pipeline_artifacts_registry_count:
            type: string
          pipeline_artifacts_verification_total_count:
            type: string
          pipeline_artifacts_verified_count:
            type: string
          pipeline_artifacts_verification_failed_count:
            type: string
          pipeline_artifacts_synced_in_percentage:
            type: string
          pipeline_artifacts_verified_in_percentage:
            type: string
          uploads_count:
            type: integer
          uploads_synced_count:
            type: string
          uploads_failed_count:
            type: integer
          uploads_registry_count:
            type: string
          uploads_synced_in_percentage:
            type: string
          uploads_checksum_total_count:
            type: integer
          uploads_checksummed_count:
            type: integer
          uploads_checksum_failed_count:
            type: string
          uploads_verification_total_count:
            type: string
          uploads_verified_count:
            type: string
          uploads_verification_failed_count:
            type: string
          uploads_verified_in_percentage:
            type: string
          job_artifacts_checksum_total_count:
            type: integer
          job_artifacts_checksummed_count:
            type: integer
          job_artifacts_checksum_failed_count:
            type: integer
          job_artifacts_registry_count:
            type: integer
          job_artifacts_verification_total_count:
            type: integer
          job_artifacts_verified_count:
            type: integer
          job_artifacts_verification_failed_count:
            type: integer
          job_artifacts_verified_in_percentage:
            type: string
    retrieveStatusAboutASpecificGeoNodeResponse:
      type: object
      properties:
        geo_node_id:
          type: integer
        healthy:
          type: boolean
        health:
          type: string
        health_status:
          type: string
        missing_oauth_application:
          type: boolean
        db_replication_lag_seconds:
          type: integer
        lfs_objects_count:
          type: integer
        lfs_objects_checksum_total_count:
          type: integer
        lfs_objects_checksummed_count:
          type: integer
        lfs_objects_checksum_failed_count:
          type: integer
        lfs_objects_synced_count:
          type: string
        lfs_objects_failed_count:
          type: string
        lfs_objects_registry_count:
          type: string
        lfs_objects_verification_total_count:
          type: string
        lfs_objects_verified_count:
          type: string
        lfs_objects_verification_failed_count:
          type: string
        lfs_objects_synced_in_percentage:
          type: string
        lfs_objects_verified_in_percentage:
          type: string
        job_artifacts_count:
          type: integer
        job_artifacts_synced_count:
          type: integer
        job_artifacts_failed_count:
          type: integer
        job_artifacts_synced_missing_on_primary_count:
          type: integer
        job_artifacts_synced_in_percentage:
          type: string
        container_repositories_count:
          type: integer
        container_repositories_synced_count:
          type: string
        container_repositories_failed_count:
          type: string
        container_repositories_synced_in_percentage:
          type: string
        design_repositories_count:
          type: integer
        design_repositories_synced_count:
          type: string
        design_repositories_failed_count:
          type: string
        design_repositories_synced_in_percentage:
          type: string
        projects_count:
          type: integer
        repositories_count:
          type: integer
        repositories_failed_count:
          type: integer
        repositories_synced_count:
          type: integer
        repositories_synced_in_percentage:
          type: string
        wikis_count:
          type: integer
        wikis_failed_count:
          type: integer
        wikis_synced_count:
          type: integer
        wikis_synced_in_percentage:
          type: string
        replication_slots_count:
          type: string
        replication_slots_used_count:
          type: string
        replication_slots_used_in_percentage:
          type: string
        replication_slots_max_retained_wal_bytes:
          type: string
        last_event_id:
          type: integer
        last_event_timestamp:
          type: integer
        cursor_last_event_id:
          type: integer
        cursor_last_event_timestamp:
          type: integer
        last_successful_status_check_timestamp:
          type: integer
        version:
          type: string
        revision:
          type: string
        merge_request_diffs_count:
          type: integer
        merge_request_diffs_checksum_total_count:
          type: integer
        merge_request_diffs_checksummed_count:
          type: integer
        merge_request_diffs_checksum_failed_count:
          type: integer
        merge_request_diffs_synced_count:
          type: integer
        merge_request_diffs_failed_count:
          type: integer
        merge_request_diffs_registry_count:
          type: integer
        merge_request_diffs_verification_total_count:
          type: integer
        merge_request_diffs_verified_count:
          type: integer
        merge_request_diffs_verification_failed_count:
          type: integer
        merge_request_diffs_synced_in_percentage:
          type: string
        merge_request_diffs_verified_in_percentage:
          type: string
        package_files_count:
          type: integer
        package_files_checksum_total_count:
          type: integer
        package_files_checksummed_count:
          type: integer
        package_files_checksum_failed_count:
          type: integer
        package_files_synced_count:
          type: integer
        package_files_failed_count:
          type: integer
        package_files_registry_count:
          type: integer
        package_files_verification_total_count:
          type: integer
        package_files_verified_count:
          type: integer
        package_files_verification_failed_count:
          type: integer
        package_files_synced_in_percentage:
          type: string
        package_files_verified_in_percentage:
          type: string
        terraform_state_versions_count:
          type: integer
        terraform_state_versions_checksum_total_count:
          type: integer
        terraform_state_versions_checksummed_count:
          type: integer
        terraform_state_versions_checksum_failed_count:
          type: integer
        terraform_state_versions_synced_count:
          type: integer
        terraform_state_versions_failed_count:
          type: integer
        terraform_state_versions_registry_count:
          type: integer
        terraform_state_versions_verification_total_count:
          type: integer
        terraform_state_versions_verified_count:
          type: integer
        terraform_state_versions_verification_failed_count:
          type: integer
        terraform_state_versions_synced_in_percentage:
          type: string
        terraform_state_versions_verified_in_percentage:
          type: string
        snippet_repositories_count:
          type: integer
        snippet_repositories_checksum_total_count:
          type: integer
        snippet_repositories_checksummed_count:
          type: integer
        snippet_repositories_checksum_failed_count:
          type: integer
        snippet_repositories_synced_count:
          type: integer
        snippet_repositories_failed_count:
          type: integer
        snippet_repositories_registry_count:
          type: integer
        snippet_repositories_verification_total_count:
          type: integer
        snippet_repositories_verified_count:
          type: integer
        snippet_repositories_verification_failed_count:
          type: integer
        snippet_repositories_synced_in_percentage:
          type: string
        snippet_repositories_verified_in_percentage:
          type: string
        group_wiki_repositories_count:
          type: integer
        group_wiki_repositories_checksum_total_count:
          type: integer
        group_wiki_repositories_checksummed_count:
          type: integer
        group_wiki_repositories_checksum_failed_count:
          type: integer
        group_wiki_repositories_synced_count:
          type: integer
        group_wiki_repositories_failed_count:
          type: integer
        group_wiki_repositories_registry_count:
          type: integer
        group_wiki_repositories_verification_total_count:
          type: integer
        group_wiki_repositories_verified_count:
          type: integer
        group_wiki_repositories_verification_failed_count:
          type: integer
        group_wiki_repositories_synced_in_percentage:
          type: string
        group_wiki_repositories_verified_in_percentage:
          type: string
        pipeline_artifacts_count:
          type: integer
        pipeline_artifacts_checksum_total_count:
          type: integer
        pipeline_artifacts_checksummed_count:
          type: integer
        pipeline_artifacts_checksum_failed_count:
          type: integer
        pipeline_artifacts_synced_count:
          type: integer
        pipeline_artifacts_failed_count:
          type: integer
        pipeline_artifacts_registry_count:
          type: integer
        pipeline_artifacts_verification_total_count:
          type: integer
        pipeline_artifacts_verified_count:
          type: integer
        pipeline_artifacts_verification_failed_count:
          type: integer
        pipeline_artifacts_synced_in_percentage:
          type: string
        pipeline_artifacts_verified_in_percentage:
          type: string
        uploads_count:
          type: integer
        uploads_synced_count:
          type: string
        uploads_failed_count:
          type: integer
        uploads_registry_count:
          type: string
        uploads_synced_in_percentage:
          type: string
        uploads_checksum_total_count:
          type: integer
        uploads_checksummed_count:
          type: integer
        uploads_checksum_failed_count:
          type: string
        uploads_verification_total_count:
          type: string
        uploads_verified_count:
          type: string
        uploads_verification_failed_count:
          type: string
        uploads_verified_in_percentage:
          type: string
        job_artifacts_checksum_total_count:
          type: integer
        job_artifacts_checksummed_count:
          type: integer
        job_artifacts_checksum_failed_count:
          type: integer
        job_artifacts_registry_count:
          type: integer
        job_artifacts_verification_total_count:
          type: integer
        job_artifacts_verified_count:
          type: integer
        job_artifacts_verification_failed_count:
          type: integer
        job_artifacts_verified_in_percentage:
          type: string
    retrieveProjectSyncOrVerificationFailuresThatOccurredOnTheCurrentNodeResponse:
      type: array
      items:
        type: object
        properties:
          project_id:
            type: integer
          last_repository_synced_at:
            type: string
            format: date-time
          last_repository_successful_sync_at:
            type: string
            format: date-time
          last_wiki_synced_at:
            type: string
            format: date-time
          last_wiki_successful_sync_at:
            type: string
            format: date-time
          repository_retry_count:
            type: string
          wiki_retry_count:
            type: integer
          last_repository_sync_failure:
            type: string
          last_wiki_sync_failure:
            type: string
          last_repository_verification_failure:
            type: string
          last_wiki_verification_failure:
            type: string
          repository_verification_checksum_sha:
            type: string
          wiki_verification_checksum_sha:
            type: string
          repository_checksum_mismatch:
            type: boolean
          wiki_checksum_mismatch:
            type: boolean
    listGroupAccessTokensResponse:
      type: array
      items:
        $ref: '#/components/schemas/getAGroupAccessTokenResponse'
    getAGroupAccessTokenResponse:
      type: object
      properties:
        user_id:
          type: integer
        scopes:
          type: array
          items:
            type: string
        name:
          type: string
        expires_at:
          type: string
          format: date-time
        id:
          type: integer
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
        revoked:
          type: boolean
        access_level:
          type: integer
    createAGroupAccessTokenRequest:
      type: object
      properties:
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        access_level:
          type: integer
        expires_at:
          type: string
          format: date
      required:
        - name
        - scopes
    createAGroupAccessTokenResponse:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
        active:
          type: boolean
        name:
          type: string
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        user_id:
          type: integer
        id:
          type: integer
        expires_at:
          type: string
          format: date-time
        token:
          type: string
        access_level:
          type: integer
    getCountOfRecentlyCreatedIssuesForGroupResponse:
      type: object
      properties:
        issues_count:
          type: integer
    getCountOfRecentlyCreatedMergeRequestsForGroupResponse:
      type: object
      properties:
        merge_requests_count:
          type: integer
    getCountOfMembersRecentlyAddedToGroupResponse:
      type: object
      properties:
        new_members_count:
          type: integer
    listAllBadgesOfAGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/addABadgeToAProjectResponse'
    getABadgeOfAGroupResponse:
      type: object
      properties:
        id:
          type: integer
        link_url:
          type: string
        image_url:
          type: string
        rendered_link_url:
          type: string
        rendered_image_url:
          type: string
        kind:
          type: string
    addABadgeToAGroupRequest:
      type: object
      properties:
        link_url:
          type: string
        image_url:
          type: string
      required:
        - link_url
        - image_url
    previewABadgeFromAGroupResponse:
      type: object
      properties:
        link_url:
          type: string
        image_url:
          type: string
        rendered_link_url:
          type: string
        rendered_image_url:
          type: string
    listAllGroupIssueBoardsInAGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/singleGroupIssueBoardResponse'
    singleGroupIssueBoardResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        group:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            web_url:
              type: string
        milestone:
          type: object
          properties:
            id:
              type: integer
            title:
              type: string
        lists:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              label:
                type: object
                properties:
                  name:
                    type: string
                  color:
                    type: string
                  description:
                    type: string
              position:
                type: integer
    createAGroupIssueBoardRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    createAGroupIssueBoardResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        project:
          type: string
        lists:
          type: array
          items: {}
        group:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            web_url:
              type: string
        milestone:
          type: string
        assignee:
          type: string
        labels:
          type: array
          items: {}
        weight:
          type: string
    updateAGroupIssueBoardRequest:
      type: object
      properties:
        name:
          type: string
        hide_backlog_list:
          type: boolean
        hide_closed_list:
          type: boolean
        assignee_id:
          type: integer
        milestone_id:
          type: integer
        labels:
          type: string
        weight:
          type: integer
    listGroupIssueBoardListsResponse:
      type: array
      items:
        $ref: '#/components/schemas/singleGroupIssueBoardListResponse'
    singleGroupIssueBoardListResponse:
      type: object
      properties:
        id:
          type: integer
        label:
          type: object
          properties:
            name:
              type: string
            color:
              type: string
            description:
              type: string
        position:
          type: integer
    newGroupIssueBoardListRequest:
      type: object
      properties:
        label_id:
          type: integer
      required:
        - label_id
    newGroupIssueBoardListResponse:
      type: object
      properties:
        id:
          type: integer
        label:
          type: string
        position:
          type: integer
        milestone:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            group_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            due_date:
              type: string
            start_date:
              type: string
            web_url:
              type: string
    editGroupIssueBoardListRequest:
      type: object
      properties:
        position:
          type: integer
      required:
        - position
    listGroupIterationsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          sequence:
            type: integer
          group_id:
            type: integer
          title:
            type: string
          description:
            type: string
          state:
            type: integer
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          due_date:
            type: string
          start_date:
            type: string
          web_url:
            type: string
    listGroupLabelsResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleGroupLabelResponse'
    getASingleGroupLabelResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        text_color:
          type: string
        description:
          type: string
        description_html:
          type: string
        open_issues_count:
          type: integer
        closed_issues_count:
          type: integer
        open_merge_requests_count:
          type: integer
        subscribed:
          type: boolean
    createANewGroupLabelRequest:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
        description:
          type: string
      required:
        - name
        - color
    updateAGroupLabelRequest:
      type: object
      properties:
        new_name:
          type: string
        color:
          type: string
        description:
          type: string
    listGroupVariablesResponse:
      type: array
      items:
        $ref: '#/components/schemas/showVariableDetailsResponse'
    showVariableDetailsResponse:
      type: object
      properties:
        key:
          type: string
        variable_type:
          type: string
        value:
          type: string
        protected:
          type: boolean
        masked:
          type: boolean
        environment_scope:
          type: string
    updateVariableRequest:
      type: object
      properties:
        value:
          type: string
        variable_type:
          type: string
        protected:
          type: boolean
        masked:
          type: boolean
        environment_scope:
          type: string
        filter:
          type: object
          additionalProperties: true
      required:
        - value
    listGroupMilestonesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          group_id:
            type: integer
          title:
            type: string
          description:
            type: string
          due_date:
            type: string
          start_date:
            type: string
          state:
            type: string
          updated_at:
            type: string
            format: date-time
          created_at:
            type: string
            format: date-time
          expired:
            type: boolean
          web_url:
            type: string
    createNewMilestoneRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        due_date:
          type: string
        start_date:
          type: string
      required:
        - title
    editMilestoneRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        due_date:
          type: string
        start_date:
          type: string
        state_event:
          type: string
    listGroupReleasesResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          tag_name:
            type: string
          description:
            type: string
          created_at:
            type: string
            format: date-time
          released_at:
            type: string
            format: date-time
          author:
            type: object
            properties:
              id:
                type: integer
              username:
                type: string
              name:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          commit:
            type: object
            properties:
              id:
                type: string
              short_id:
                type: string
              created_at:
                type: string
                format: date-time
              parent_ids:
                type: array
                items: {}
              title:
                type: string
              message:
                type: string
              author_name:
                type: string
              author_email:
                type: string
              authored_date:
                type: string
              committer_name:
                type: string
              committer_email:
                type: string
              committed_date:
                type: string
              trailers:
                type: object
                properties: {}
              web_url:
                type: string
          upcoming_release:
            type: boolean
          commit_path:
            type: string
          tag_path:
            type: string
    retrieveAllGroupRepositoryStorageMovesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleGroupRepositoryStorageMoveResponse'
    getASingleGroupRepositoryStorageMoveResponse:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        state:
          type: string
        source_storage_name:
          type: string
        destination_storage_name:
          type: string
        group:
          type: object
          properties:
            id:
              type: integer
            web_url:
              type: string
            name:
              type: string
    scheduleARepositoryStorageMoveForAGroupRequest:
      type: object
      properties:
        destination_storage_name:
          type: string
    scheduleRepositoryStorageMovesForAllGroupsOnAStorageShardRequest:
      type: object
      properties:
        source_storage_name:
          type: string
        destination_storage_name:
          type: string
      required:
        - source_storage_name
    scheduleRepositoryStorageMovesForAllGroupsOnAStorageShardResponse:
      type: object
      properties:
        message:
          type: string
    listWikiPagesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getAWikiPageResponse'
    getAWikiPageResponse:
      type: object
      properties:
        content:
          type: string
        format:
          type: string
        slug:
          type: string
        title:
          type: string
        encoding:
          type: string
    createANewWikiPageRequest:
      type: object
      properties:
        content:
          type: string
        title:
          type: string
        format:
          type: string
      required:
        - content
        - title
    uploadAnAttachmentToTheWikiRepositoryRequest:
      type: object
      properties:
        file:
          type: string
        branch:
          type: string
      required:
        - file
    uploadAnAttachmentToTheWikiRepositoryResponse:
      type: object
      properties:
        file_name:
          type: string
        file_path:
          type: string
        branch:
          type: string
        link:
          type: object
          properties:
            url:
              type: string
            markdown:
              type: string
    listGroupsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          path:
            type: string
          description:
            type: string
          visibility:
            type: string
          share_with_group_lock:
            type: boolean
          require_two_factor_authentication:
            type: boolean
          two_factor_grace_period:
            type: integer
          project_creation_level:
            type: string
          auto_devops_enabled:
            type: string
          subgroup_creation_level:
            type: string
          emails_disabled:
            type: string
          mentions_disabled:
            type: string
          lfs_enabled:
            type: boolean
          default_branch_protection:
            type: integer
          avatar_url:
            type: string
          web_url:
            type: string
          request_access_enabled:
            type: boolean
          full_name:
            type: string
          full_path:
            type: string
          file_template_project_id:
            type: integer
          parent_id:
            type: string
          created_at:
            type: string
            format: date-time
          statistics:
            type: object
            properties:
              storage_size:
                type: integer
              repository_size:
                type: integer
              wiki_size:
                type: integer
              lfs_objects_size:
                type: integer
              job_artifacts_size:
                type: integer
              pipeline_artifacts_size:
                type: integer
              packages_size:
                type: integer
              snippets_size:
                type: integer
              uploads_size:
                type: integer
    listAGroupSubgroupsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          path:
            type: string
          description:
            type: string
          visibility:
            type: string
          share_with_group_lock:
            type: boolean
          require_two_factor_authentication:
            type: boolean
          two_factor_grace_period:
            type: integer
          project_creation_level:
            type: string
          auto_devops_enabled:
            type: string
          subgroup_creation_level:
            type: string
          emails_disabled:
            type: string
          mentions_disabled:
            type: string
          lfs_enabled:
            type: boolean
          default_branch_protection:
            type: integer
          avatar_url:
            type: string
          web_url:
            type: string
          request_access_enabled:
            type: boolean
          full_name:
            type: string
          full_path:
            type: string
          file_template_project_id:
            type: integer
          parent_id:
            type: integer
          created_at:
            type: string
            format: date-time
    listAGroupProjectsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
          default_branch:
            type: string
          tag_list:
            type: array
            items: {}
          topics:
            type: array
            items: {}
          archived:
            type: boolean
          visibility:
            type: string
          ssh_url_to_repo:
            type: string
          http_url_to_repo:
            type: string
          web_url:
            type: string
          name:
            type: string
          name_with_namespace:
            type: string
          path:
            type: string
          path_with_namespace:
            type: string
          issues_enabled:
            type: boolean
          merge_requests_enabled:
            type: boolean
          wiki_enabled:
            type: boolean
          jobs_enabled:
            type: boolean
          snippets_enabled:
            type: boolean
          created_at:
            type: string
            format: date-time
          last_activity_at:
            type: string
            format: date-time
          shared_runners_enabled:
            type: boolean
          creator_id:
            type: integer
          namespace:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              path:
                type: string
              kind:
                type: string
          avatar_url:
            type: string
          star_count:
            type: integer
          forks_count:
            type: integer
          open_issues_count:
            type: integer
          public_jobs:
            type: boolean
          shared_with_groups:
            type: array
            items: {}
          request_access_enabled:
            type: boolean
    listAGroupSharedProjectsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
          name:
            type: string
          name_with_namespace:
            type: string
          path:
            type: string
          path_with_namespace:
            type: string
          created_at:
            type: string
            format: date-time
          default_branch:
            type: string
          tag_list:
            type: array
            items: {}
          topics:
            type: array
            items: {}
          ssh_url_to_repo:
            type: string
          http_url_to_repo:
            type: string
          web_url:
            type: string
          readme_url:
            type: string
          avatar_url:
            type: string
          star_count:
            type: integer
          forks_count:
            type: integer
          last_activity_at:
            type: string
            format: date-time
          namespace:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              path:
                type: string
              kind:
                type: string
              full_path:
                type: string
              parent_id:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          _links:
            type: object
            properties:
              self:
                type: string
              issues:
                type: string
              merge_requests:
                type: string
              repo_branches:
                type: string
              labels:
                type: string
              events:
                type: string
              members:
                type: string
          empty_repo:
            type: boolean
          archived:
            type: boolean
          visibility:
            type: string
          resolve_outdated_diff_discussions:
            type: boolean
          container_registry_enabled:
            type: boolean
          container_expiration_policy:
            type: object
            properties:
              cadence:
                type: string
              enabled:
                type: boolean
              keep_n:
                type: string
              older_than:
                type: string
              name_regex:
                type: string
              name_regex_keep:
                type: string
              next_run_at:
                type: string
                format: date-time
          issues_enabled:
            type: boolean
          merge_requests_enabled:
            type: boolean
          wiki_enabled:
            type: boolean
          jobs_enabled:
            type: boolean
          snippets_enabled:
            type: boolean
          can_create_merge_request_in:
            type: boolean
          issues_access_level:
            type: string
          repository_access_level:
            type: string
          merge_requests_access_level:
            type: string
          forking_access_level:
            type: string
          wiki_access_level:
            type: string
          builds_access_level:
            type: string
          snippets_access_level:
            type: string
          pages_access_level:
            type: string
          security_and_compliance_access_level:
            type: string
          emails_disabled:
            type: string
          shared_runners_enabled:
            type: boolean
          lfs_enabled:
            type: boolean
          creator_id:
            type: integer
          import_status:
            type: string
          open_issues_count:
            type: integer
          ci_default_git_depth:
            type: integer
          ci_forward_deployment_enabled:
            type: boolean
          public_jobs:
            type: boolean
          build_timeout:
            type: integer
          auto_cancel_pending_pipelines:
            type: string
          ci_config_path:
            type: string
          shared_with_groups:
            type: array
            items:
              type: object
              properties:
                group_id:
                  type: integer
                group_name:
                  type: string
                group_full_path:
                  type: string
                group_access_level:
                  type: integer
                expires_at:
                  type: string
          only_allow_merge_if_pipeline_succeeds:
            type: boolean
          request_access_enabled:
            type: boolean
          only_allow_merge_if_all_discussions_are_resolved:
            type: boolean
          remove_source_branch_after_merge:
            type: boolean
          printing_merge_request_link_enabled:
            type: boolean
          merge_method:
            type: string
          suggestion_commit_message:
            type: string
          auto_devops_enabled:
            type: boolean
          auto_devops_deploy_strategy:
            type: string
          autoclose_referenced_issues:
            type: boolean
          repository_storage:
            type: string
    detailsOfAGroupResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        description:
          type: string
        visibility:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        request_access_enabled:
          type: boolean
        full_name:
          type: string
        full_path:
          type: string
        file_template_project_id:
          type: integer
        parent_id:
          type: string
        membership_lock:
          type: boolean
        marked_for_deletion_on:
          type: string
        shared_runners_minutes_limit:
          type: integer
        extra_shared_runners_minutes_limit:
          type: integer
        runners_token:
          type: string
        created_at:
          type: string
          format: date-time
        shared_with_groups:
          type: array
          items:
            type: object
            properties:
              group_id:
                type: integer
              group_name:
                type: string
              group_full_path:
                type: string
              group_access_level:
                type: integer
              expires_at:
                type: string
        prevent_sharing_groups_outside_hierarchy:
          type: boolean
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              description:
                type: string
              default_branch:
                type: string
              tag_list:
                type: array
                items: {}
              topics:
                type: array
                items: {}
              archived:
                type: boolean
              visibility:
                type: string
              ssh_url_to_repo:
                type: string
              http_url_to_repo:
                type: string
              web_url:
                type: string
              name:
                type: string
              name_with_namespace:
                type: string
              path:
                type: string
              path_with_namespace:
                type: string
              issues_enabled:
                type: boolean
              merge_requests_enabled:
                type: boolean
              wiki_enabled:
                type: boolean
              jobs_enabled:
                type: boolean
              snippets_enabled:
                type: boolean
              container_registry_enabled:
                type: boolean
              created_at:
                type: string
                format: date-time
              last_activity_at:
                type: string
                format: date-time
              shared_runners_enabled:
                type: boolean
              creator_id:
                type: integer
              namespace:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  path:
                    type: string
                  kind:
                    type: string
              avatar_url:
                type: string
              star_count:
                type: integer
              forks_count:
                type: integer
              open_issues_count:
                type: integer
              public_jobs:
                type: boolean
              shared_with_groups:
                type: array
                items: {}
              request_access_enabled:
                type: boolean
        shared_projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              description:
                type: string
              default_branch:
                type: string
              tag_list:
                type: array
                items: {}
              topics:
                type: array
                items: {}
              archived:
                type: boolean
              visibility:
                type: string
              ssh_url_to_repo:
                type: string
              http_url_to_repo:
                type: string
              web_url:
                type: string
              name:
                type: string
              name_with_namespace:
                type: string
              path:
                type: string
              path_with_namespace:
                type: string
              issues_enabled:
                type: boolean
              merge_requests_enabled:
                type: boolean
              wiki_enabled:
                type: boolean
              jobs_enabled:
                type: boolean
              snippets_enabled:
                type: boolean
              container_registry_enabled:
                type: boolean
              created_at:
                type: string
                format: date-time
              last_activity_at:
                type: string
                format: date-time
              shared_runners_enabled:
                type: boolean
              creator_id:
                type: integer
              namespace:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  path:
                    type: string
                  kind:
                    type: string
              avatar_url:
                type: string
              star_count:
                type: integer
              forks_count:
                type: integer
              open_issues_count:
                type: integer
              public_jobs:
                type: boolean
              shared_with_groups:
                type: array
                items:
                  type: object
                  properties:
                    group_id:
                      type: integer
                    group_name:
                      type: string
                    group_full_path:
                      type: string
                    group_access_level:
                      type: integer
                    expires_at:
                      type: string
    newGroupRequest:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        auto_devops_enabled:
          type: boolean
        default_branch_protection:
          type: integer
        description:
          type: string
        emails_disabled:
          type: boolean
        lfs_enabled:
          type: boolean
        mentions_disabled:
          type: boolean
        parent_id:
          type: integer
        project_creation_level:
          type: string
        request_access_enabled:
          type: boolean
        require_two_factor_authentication:
          type: boolean
        share_with_group_lock:
          type: boolean
        subgroup_creation_level:
          type: string
        two_factor_grace_period:
          type: integer
        visibility:
          type: string
        membership_lock:
          type: boolean
        extra_shared_runners_minutes_limit:
          type: integer
        shared_runners_minutes_limit:
          type: integer
      required:
        - name
        - path
    transferAGroupToANewParentGroupTurnASubgroupToATopLevelGroupRequest:
      type: object
      properties:
        group_id:
          type: integer
    updateGroupRequest:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        auto_devops_enabled:
          type: boolean
        default_branch_protection:
          type: integer
        description:
          type: string
        emails_disabled:
          type: boolean
        lfs_enabled:
          type: boolean
        mentions_disabled:
          type: boolean
        prevent_sharing_groups_outside_hierarchy:
          type: boolean
        project_creation_level:
          type: string
        request_access_enabled:
          type: boolean
        require_two_factor_authentication:
          type: boolean
        shared_runners_setting:
          type: string
        share_with_group_lock:
          type: boolean
        subgroup_creation_level:
          type: string
        two_factor_grace_period:
          type: integer
        visibility:
          type: string
        extra_shared_runners_minutes_limit:
          type: integer
        file_template_project_id:
          type: integer
        membership_lock:
          type: boolean
        prevent_forking_outside_group:
          type: boolean
        shared_runners_minutes_limit:
          type: integer
    updateGroupResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        description:
          type: string
        visibility:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        request_access_enabled:
          type: boolean
        full_name:
          type: string
        full_path:
          type: string
        file_template_project_id:
          type: integer
        parent_id:
          type: string
        created_at:
          type: string
          format: date-time
        prevent_sharing_groups_outside_hierarchy:
          type: boolean
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              description:
                type: string
              default_branch:
                type: string
              tag_list:
                type: array
                items: {}
              topics:
                type: array
                items: {}
              public:
                type: boolean
              archived:
                type: boolean
              visibility:
                type: string
              ssh_url_to_repo:
                type: string
              http_url_to_repo:
                type: string
              web_url:
                type: string
              name:
                type: string
              name_with_namespace:
                type: string
              path:
                type: string
              path_with_namespace:
                type: string
              issues_enabled:
                type: boolean
              merge_requests_enabled:
                type: boolean
              wiki_enabled:
                type: boolean
              jobs_enabled:
                type: boolean
              snippets_enabled:
                type: boolean
              created_at:
                type: string
                format: date-time
              last_activity_at:
                type: string
                format: date-time
              shared_runners_enabled:
                type: boolean
              creator_id:
                type: integer
              namespace:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  path:
                    type: string
                  kind:
                    type: string
              avatar_url:
                type: string
              star_count:
                type: integer
              forks_count:
                type: integer
              open_issues_count:
                type: integer
              public_jobs:
                type: boolean
              shared_with_groups:
                type: array
                items: {}
              request_access_enabled:
                type: boolean
    searchForGroupResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          path:
            type: string
          description:
            type: string
    listProvisionedUsersResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          username:
            type: string
          name:
            type: string
          state:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          created_at:
            type: string
            format: date-time
          bio:
            type: string
          location:
            type: string
          public_email:
            type: string
          skype:
            type: string
          linkedin:
            type: string
          twitter:
            type: string
          website_url:
            type: string
          organization:
            type: string
          job_title:
            type: string
          pronouns:
            type: string
          bot:
            type: boolean
          work_information:
            type: string
          followers:
            type: integer
          following:
            type: integer
          local_time:
            type: string
          last_sign_in_at:
            type: string
          confirmed_at:
            type: string
            format: date-time
          last_activity_on:
            type: string
          email:
            type: string
          theme_id:
            type: integer
          color_scheme_id:
            type: integer
          projects_limit:
            type: integer
          current_sign_in_at:
            type: string
          identities:
            type: array
            items: {}
          can_create_group:
            type: boolean
          can_create_project:
            type: boolean
          two_factor_enabled:
            type: boolean
          external:
            type: boolean
          private_profile:
            type: boolean
          commit_email:
            type: string
          shared_runners_minutes_limit:
            type: string
          extra_shared_runners_minutes_limit:
            type: string
    getGroupHookResponse:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        group_id:
          type: integer
        push_events:
          type: boolean
        issues_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        job_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
        deployment_events:
          type: boolean
        releases_events:
          type: boolean
        subgroup_events:
          type: boolean
        enable_ssl_verification:
          type: boolean
        created_at:
          type: string
          format: date-time
    addGroupHookRequest:
      type: object
      properties:
        url:
          type: string
        push_events:
          type: boolean
        issues_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        job_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
        deployment_events:
          type: boolean
        releases_events:
          type: boolean
        subgroup_events:
          type: boolean
        enable_ssl_verification:
          type: boolean
        token:
          type: string
      required:
        - url
    addLdapGroupLinkWithCnOrFilterRequest:
      type: object
      properties:
        cn:
          type: string
        filter:
          type: string
        group_access:
          type: integer
        provider:
          type: string
      required:
        - group_access
        - provider
    createALinkToShareAGroupWithAnotherGroupRequest:
      type: object
      properties:
        group_id:
          type: integer
        group_access:
          type: integer
        expires_at:
          type: string
      required:
        - group_id
        - group_access
    getGroupPushRulesResponse:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        commit_committer_check:
          type: boolean
        reject_unsigned_commits:
          type: boolean
        commit_message_regex:
          type: string
        commit_message_negative_regex:
          type: string
        branch_name_regex:
          type: string
        deny_delete_tag:
          type: boolean
        member_check:
          type: boolean
        prevent_secrets:
          type: boolean
        author_email_regex:
          type: string
        file_name_regex:
          type: string
        max_file_size:
          type: integer
    addGroupPushRuleRequest:
      type: object
      properties:
        deny_delete_tag:
          type: boolean
        member_check:
          type: boolean
        prevent_secrets:
          type: boolean
        commit_message_regex:
          type: string
        commit_message_negative_regex:
          type: string
        branch_name_regex:
          type: string
        author_email_regex:
          type: string
        file_name_regex:
          type: string
        max_file_size:
          type: integer
        commit_committer_check:
          type: boolean
        reject_unsigned_commits:
          type: boolean
    addGroupPushRuleResponse:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        commit_message_regex:
          type: string
        commit_message_negative_regex:
          type: string
        branch_name_regex:
          type: string
        deny_delete_tag:
          type: boolean
        member_check:
          type: boolean
        prevent_secrets:
          type: boolean
        author_email_regex:
          type: string
        file_name_regex:
          type: string
        max_file_size:
          type: integer
    importRepositoryFromGithubRequest:
      type: object
      properties:
        personal_access_token:
          type: string
        repo_id:
          type: integer
        new_name:
          type: string
        target_namespace:
          type: string
        github_hostname:
          type: string
      required:
        - personal_access_token
        - repo_id
        - target_namespace
    importRepositoryFromGithubResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        full_path:
          type: string
        full_name:
          type: string
    importRepositoryFromBitbucketServerRequest:
      type: object
      properties:
        bitbucket_server_url:
          type: string
        bitbucket_server_username:
          type: string
        personal_access_token:
          type: string
        bitbucket_server_project:
          type: string
        bitbucket_server_repo:
          type: string
        new_name:
          type: string
        target_namespace:
          type: string
      required:
        - bitbucket_server_url
        - bitbucket_server_username
        - personal_access_token
        - bitbucket_server_project
        - bitbucket_server_repo
    listInstanceClustersResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleInstanceClusterResponse'
    getASingleInstanceClusterResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        managed:
          type: boolean
        enabled:
          type: boolean
        domain:
          type: string
        provider_type:
          type: string
        platform_type:
          type: string
        environment_scope:
          type: string
        cluster_type:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        platform_kubernetes:
          type: object
          properties:
            api_url:
              type: string
            namespace:
              type: string
            authorization_type:
              type: string
            ca_cert:
              type: string
        provider_gcp:
          type: string
        management_project:
          type: string
    addExistingInstanceClusterRequest:
      type: object
      properties:
        name:
          type: string
        domain:
          type: string
        environment_scope:
          type: string
        management_project_id:
          type: integer
        enabled:
          type: boolean
        managed:
          type: boolean
        'platform_kubernetes_attributes[api_url]':
          type: string
        'platform_kubernetes_attributes[token]':
          type: string
        'platform_kubernetes_attributes[ca_cert]':
          type: string
        'platform_kubernetes_attributes[namespace]':
          type: string
        'platform_kubernetes_attributes[authorization_type]':
          type: string
      required:
        - name
        - 'platform_kubernetes_attributes[api_url]'
        - 'platform_kubernetes_attributes[token]'
    editInstanceClusterRequest:
      type: object
      properties:
        name:
          type: string
        domain:
          type: string
        environment_scope:
          type: string
        management_project_id:
          type: integer
        enabled:
          type: boolean
        managed:
          type: boolean
        'platform_kubernetes_attributes[api_url]':
          type: string
        'platform_kubernetes_attributes[token]':
          type: string
        'platform_kubernetes_attributes[ca_cert]':
          type: string
        'platform_kubernetes_attributes[namespace]':
          type: string
    editInstanceClusterResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        managed:
          type: boolean
        enabled:
          type: boolean
        domain:
          type: string
        provider_type:
          type: string
        platform_type:
          type: string
        environment_scope:
          type: string
        cluster_type:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        platform_kubernetes:
          type: object
          properties:
            api_url:
              type: string
            namespace:
              type: string
            authorization_type:
              type: string
            ca_cert:
              type: string
        provider_gcp:
          type: string
        management_project:
          type: string
        project:
          type: string
    listAllInstanceVariablesResponse:
      type: array
      items:
        $ref: '#/components/schemas/showInstanceVariableDetailsResponse'
    showInstanceVariableDetailsResponse:
      type: object
      properties:
        key:
          type: string
        variable_type:
          type: string
        value:
          type: string
        protected:
          type: boolean
        masked:
          type: boolean
    updateInstanceVariableRequest:
      type: object
      properties:
        value:
          type: string
        variable_type:
          type: string
        protected:
          type: boolean
        masked:
          type: boolean
      required:
        - value
    listAllActiveIntegrationsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          slug:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          active:
            type: boolean
          commit_events:
            type: boolean
          push_events:
            type: boolean
          issues_events:
            type: boolean
          confidential_issues_events:
            type: boolean
          merge_requests_events:
            type: boolean
          tag_push_events:
            type: boolean
          note_events:
            type: boolean
          confidential_note_events:
            type: boolean
          pipeline_events:
            type: boolean
          wiki_page_events:
            type: boolean
          job_events:
            type: boolean
          comment_on_event_enabled:
            type: boolean
    createEditAsanaIntegrationRequest:
      type: object
      properties:
        api_key:
          type: string
        restrict_to_branch:
          type: string
    createEditAssemblaIntegrationRequest:
      type: object
      properties:
        token:
          type: string
        subdomain:
          type: string
    createEditAtlassianBambooCiIntegrationRequest:
      type: object
      properties:
        bamboo_url:
          type: string
        enable_ssl_verification:
          type: boolean
        build_key:
          type: string
        username:
          type: string
        password:
          type: string
    createEditBugzillaIntegrationRequest:
      type: object
      properties:
        new_issue_url:
          type: string
        issues_url:
          type: string
        project_url:
          type: string
    createEditBuildkiteIntegrationRequest:
      type: object
      properties:
        token:
          type: string
        project_url:
          type: string
        enable_ssl_verification:
          type: boolean
        push_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
    createEditCampfireIntegrationRequest:
      type: object
      properties:
        token:
          type: string
        subdomain:
          type: string
        room:
          type: string
    createEditDatadogIntegrationRequest:
      type: object
      properties:
        api_key:
          type: string
        api_url:
          type: string
        datadog_env:
          type: string
        datadog_service:
          type: string
        datadog_site:
          type: string
        datadog_tags:
          type: string
    createEditUnifyCircuitIntegrationRequest:
      type: object
      properties:
        webhook:
          type: string
        notify_only_broken_pipelines:
          type: boolean
        branches_to_be_notified:
          type: string
        push_events:
          type: boolean
        issues_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
    createEditDiscordIntegrationRequest:
      type: object
      properties:
        webhook:
          type: string
    createEditDroneCiIntegrationRequest:
      type: object
      properties:
        token:
          type: string
        drone_url:
          type: string
        enable_ssl_verification:
          type: boolean
        push_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
    createEditEmailsOnPushIntegrationRequest:
      type: object
      properties:
        recipients:
          type: string
        disable_diffs:
          type: boolean
        send_from_committer_email:
          type: boolean
        push_events:
          type: boolean
        tag_push_events:
          type: boolean
        branches_to_be_notified:
          type: string
    createEditConfluenceIntegrationRequest:
      type: object
      properties:
        confluence_url:
          type: string
    createEditExternalWikiIntegrationRequest:
      type: object
      properties:
        external_wiki_url:
          type: string
    createEditFlowdockIntegrationRequest:
      type: object
      properties:
        token:
          type: string
    createEditGithubIntegrationRequest:
      type: object
      properties:
        token:
          type: string
        repository_url:
          type: string
        static_context:
          type: boolean
    createEditHangoutsChatIntegrationRequest:
      type: object
      properties:
        webhook:
          type: string
        notify_only_broken_pipelines:
          type: boolean
        notify_only_default_branch:
          type: boolean
        branches_to_be_notified:
          type: string
        push_events:
          type: boolean
        issues_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
    createEditIrkerIrcGatewayIntegrationRequest:
      type: object
      properties:
        recipients:
          type: string
        default_irc_uri:
          type: string
        server_host:
          type: string
        server_port:
          type: integer
        colorize_messages:
          type: boolean
    createEditJiraIntegrationRequest:
      type: object
      properties:
        url:
          type: string
        api_url:
          type: string
        username:
          type: string
        password:
          type: string
        active:
          type: boolean
        jira_issue_transition_automatic:
          type: boolean
        jira_issue_transition_id:
          type: string
        commit_events:
          type: boolean
        merge_requests_events:
          type: boolean
        comment_on_event_enabled:
          type: boolean
      required:
        - url
        - username
        - password
    getSlackSlashCommandIntegrationSettingsResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        slug:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        active:
          type: boolean
        push_events:
          type: boolean
        issues_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        note_events:
          type: boolean
        job_events:
          type: boolean
        pipeline_events:
          type: boolean
        comment_on_event_enabled:
          type: boolean
        properties:
          type: object
          properties:
            token:
              type: string
    createEditMattermostSlashCommandIntegrationRequest:
      type: object
      properties:
        token:
          type: string
        username:
          type: string
      required:
        - token
    createEditPackagistIntegrationRequest:
      type: object
      properties:
        username:
          type: string
        token:
          type: string
        server:
          type: boolean
        push_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
      required:
        - username
        - token
    createEditPipelineEmailsIntegrationRequest:
      type: object
      properties:
        recipients:
          type: string
        add_pusher:
          type: boolean
        notify_only_broken_pipelines:
          type: boolean
        branches_to_be_notified:
          type: string
        notify_only_default_branch:
          type: boolean
        pipeline_events:
          type: boolean
      required:
        - recipients
    createEditPivotalTrackerIntegrationRequest:
      type: object
      properties:
        token:
          type: string
        restrict_to_branch:
          type: boolean
    createEditPrometheusIntegrationRequest:
      type: object
      properties:
        api_url:
          type: string
        google_iap_audience_client_id:
          type: string
        google_iap_service_account_json:
          type: string
    createEditPushoverIntegrationRequest:
      type: object
      properties:
        api_key:
          type: string
        user_key:
          type: string
        priority:
          type: string
        device:
          type: string
        sound:
          type: string
    createEditSlackIntegrationRequest:
      type: object
      properties:
        webhook:
          type: string
        username:
          type: string
        channel:
          type: string
        notify_only_broken_pipelines:
          type: boolean
        notify_only_default_branch:
          type: boolean
        branches_to_be_notified:
          type: string
        commit_events:
          type: boolean
        confidential_issue_channel:
          type: string
        confidential_issues_events:
          type: boolean
        confidential_note_channel:
          type: string
        confidential_note_events:
          type: boolean
        deployment_channel:
          type: string
        deployment_events:
          type: boolean
        issue_channel:
          type: string
        issues_events:
          type: boolean
        job_events:
          type: boolean
        merge_request_channel:
          type: string
        merge_requests_events:
          type: boolean
        note_channel:
          type: string
        note_events:
          type: boolean
        pipeline_channel:
          type: string
        pipeline_events:
          type: boolean
        push_channel:
          type: string
        push_events:
          type: boolean
        tag_push_channel:
          type: string
        tag_push_events:
          type: boolean
        wiki_page_channel:
          type: string
        wiki_page_events:
          type: boolean
    createEditMattermostNotificationsIntegrationRequest:
      type: object
      properties:
        webhook:
          type: string
        username:
          type: string
        channel:
          type: string
        notify_only_broken_pipelines:
          type: boolean
        notify_only_default_branch:
          type: boolean
        branches_to_be_notified:
          type: string
        push_events:
          type: boolean
        issues_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
        push_channel:
          type: string
        issue_channel:
          type: string
        confidential_issue_channel:
          type: string
        merge_request_channel:
          type: string
        note_channel:
          type: string
        confidential_note_channel:
          type: string
        tag_push_channel:
          type: string
        pipeline_channel:
          type: string
        wiki_page_channel:
          type: string
    createEditJetbrainsTeamcityCiIntegrationRequest:
      type: object
      properties:
        teamcity_url:
          type: string
        enable_ssl_verification:
          type: boolean
        build_type:
          type: string
        username:
          type: string
        password:
          type: string
        push_events:
          type: boolean
        merge_requests_events:
          type: boolean
    createEditJenkinsCiIntegrationRequest:
      type: object
      properties:
        jenkins_url:
          type: string
        enable_ssl_verification:
          type: boolean
        project_name:
          type: string
        username:
          type: string
        password:
          type: string
        push_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
    createEditMockciIntegrationRequest:
      type: object
      properties:
        mock_service_url:
          type: string
        enable_ssl_verification:
          type: boolean
    createEditYoutrackIntegrationRequest:
      type: object
      properties:
        issues_url:
          type: string
        project_url:
          type: string
    addAMemberToAGroupOrProjectRequest:
      type: object
      properties:
        user_id:
          oneOf:
            - type: integer
            - type: string
        access_level:
          type: integer
        expires_at:
          type: string
        invite_source:
          type: string
        tasks_to_be_done:
          type: array
          items:
            type: string
        tasks_project_id:
          type: integer
      required:
        - user_id
        - access_level
    addAMemberToAGroupOrProjectResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            name:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        expires_at:
          type: string
          format: date-time
        access_level:
          type: integer
        email:
          type: string
        group_saml_identity:
          type: string
    listAllInvitationsPendingForAGroupOrProjectResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          invite_email:
            type: string
          created_at:
            type: string
            format: date-time
          access_level:
            type: integer
          expires_at:
            type: string
            format: date-time
          user_name:
            type: string
          created_by_name:
            type: string
    updateAnInvitationToAGroupOrProjectRequest:
      type: object
      properties:
        access_level:
          type: integer
        expires_at:
          type: string
    listIssueRelationsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          issue_link_id:
            type: integer
          project_id:
            type: integer
          created_at:
            type: string
            format: date-time
          title:
            type: string
          state:
            type: string
          assignees:
            type: array
            items: {}
          assignee:
            type: string
          labels:
            type: array
            items:
              type: string
          author:
            type: object
            properties:
              name:
                type: string
              avatar_url:
                type: string
              state:
                type: string
              web_url:
                type: string
              id:
                type: integer
              username:
                type: string
          description:
            type: string
          updated_at:
            type: string
            format: date-time
          milestone:
            type: string
          user_notes_count:
            type: integer
          due_date:
            type: string
          web_url:
            type: string
          confidential:
            type: boolean
          weight:
            type: string
          link_type:
            type: string
          link_created_at:
            type: string
            format: date-time
          link_updated_at:
            type: string
            format: date-time
    createAnIssueLinkRequest:
      type: object
      properties:
        target_project_id:
          oneOf:
            - type: integer
            - type: string
        target_issue_iid:
          oneOf:
            - type: integer
            - type: string
        link_type:
          type: string
      required:
        - target_project_id
        - target_issue_iid
    createAnIssueLinkResponse:
      type: object
      properties:
        source_issue:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            created_at:
              type: string
              format: date-time
            title:
              type: string
            state:
              type: string
            assignees:
              type: array
              items: {}
            assignee:
              type: string
            labels:
              type: array
              items:
                type: string
            author:
              type: object
              properties:
                name:
                  type: string
                avatar_url:
                  type: string
                state:
                  type: string
                web_url:
                  type: string
                id:
                  type: integer
                username:
                  type: string
            description:
              type: string
            updated_at:
              type: string
              format: date-time
            milestone:
              type: string
            subscribed:
              type: boolean
            user_notes_count:
              type: integer
            due_date:
              type: string
            web_url:
              type: string
            confidential:
              type: boolean
            weight:
              type: string
        target_issue:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            created_at:
              type: string
              format: date-time
            title:
              type: string
            state:
              type: string
            assignees:
              type: array
              items: {}
            assignee:
              type: string
            labels:
              type: array
              items:
                type: string
            author:
              type: object
              properties:
                name:
                  type: string
                avatar_url:
                  type: string
                state:
                  type: string
                web_url:
                  type: string
                id:
                  type: integer
                username:
                  type: string
            description:
              type: string
            updated_at:
              type: string
              format: date-time
            milestone:
              type: string
            subscribed:
              type: boolean
            user_notes_count:
              type: integer
            due_date:
              type: string
            web_url:
              type: string
            confidential:
              type: boolean
            weight:
              type: string
        link_type:
          type: string
    listIssuesResponse:
      type: array
      items:
        type: object
        properties:
          state:
            type: string
          description:
            type: string
          health_status:
            type: string
    listGroupIssuesResponse:
      type: array
      items:
        type: object
        properties:
          project_id:
            type: integer
          description:
            type: string
          health_status:
            type: string
    singleIssueResponse:
      type: object
      properties:
        project_id:
          type: integer
        description:
          type: string
        weight:
          type: string
        id:
          type: integer
        milestone:
          type: object
          properties:
            due_date:
              type: string
            project_id:
              type: integer
            state:
              type: string
            description:
              type: string
            iid:
              type: integer
            id:
              type: integer
            title:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            closed_at:
              type: string
              format: date-time
        author:
          type: object
          properties:
            state:
              type: string
            web_url:
              type: string
            avatar_url:
              type: string
            username:
              type: string
            id:
              type: integer
            name:
              type: string
        state:
          type: string
        iid:
          type: integer
        assignees:
          type: array
          items:
            type: object
            properties:
              avatar_url:
                type: string
              web_url:
                type: string
              state:
                type: string
              username:
                type: string
              id:
                type: integer
              name:
                type: string
        assignee:
          type: object
          properties:
            avatar_url:
              type: string
            web_url:
              type: string
            state:
              type: string
            username:
              type: string
            id:
              type: integer
            name:
              type: string
        type:
          type: string
        labels:
          type: array
          items: {}
        upvotes:
          type: integer
        downvotes:
          type: integer
        merge_requests_count:
          type: integer
        title:
          type: string
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        closed_at:
          type: string
        closed_by:
          type: string
        subscribed:
          type: boolean
        user_notes_count:
          type: integer
        due_date:
          type: string
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        confidential:
          type: boolean
        discussion_locked:
          type: boolean
        issue_type:
          type: string
        severity:
          type: string
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
        has_tasks:
          type: boolean
        _links:
          type: object
          properties:
            self:
              type: string
            notes:
              type: string
            award_emoji:
              type: string
            project:
              type: string
        moved_to_id:
          type: string
        service_desk_reply_to:
          type: string
    singleProjectIssueResponse:
      type: object
      properties:
        project_id:
          type: integer
        description:
          type: string
        epic_iid:
          type: integer
        epic:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            title:
              type: string
            url:
              type: string
            group_id:
              type: integer
        weight:
          type: string
        milestone:
          type: object
          properties:
            due_date:
              type: string
            project_id:
              type: integer
            state:
              type: string
            description:
              type: string
            iid:
              type: integer
            id:
              type: integer
            title:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            closed_at:
              type: string
              format: date-time
        author:
          type: object
          properties:
            state:
              type: string
            web_url:
              type: string
            avatar_url:
              type: string
            username:
              type: string
            id:
              type: integer
            name:
              type: string
        state:
          type: string
        iid:
          type: integer
        assignees:
          type: array
          items:
            type: object
            properties:
              avatar_url:
                type: string
              web_url:
                type: string
              state:
                type: string
              username:
                type: string
              id:
                type: integer
              name:
                type: string
        assignee:
          type: object
          properties:
            avatar_url:
              type: string
            web_url:
              type: string
            state:
              type: string
            username:
              type: string
            id:
              type: integer
            name:
              type: string
        type:
          type: string
        labels:
          type: array
          items: {}
        upvotes:
          type: integer
        downvotes:
          type: integer
        merge_requests_count:
          type: integer
        id:
          type: integer
        title:
          type: string
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        closed_at:
          type: string
        closed_by:
          type: string
        subscribed:
          type: boolean
        user_notes_count:
          type: integer
        due_date:
          type: string
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        confidential:
          type: boolean
        discussion_locked:
          type: boolean
        issue_type:
          type: string
        severity:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            notes:
              type: string
            award_emoji:
              type: string
            project:
              type: string
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
    newIssueRequest:
      type: object
      properties:
        assignee_id:
          type: integer
        assignee_ids:
          type: array
          items:
            type: integer
        confidential:
          type: boolean
        created_at:
          type: string
        description:
          type: string
        discussion_to_resolve:
          type: string
        due_date:
          type: string
        epic_id:
          type: integer
        epic_iid:
          type: integer
        iid:
          oneOf:
            - type: integer
            - type: string
        issue_type:
          type: string
        labels:
          type: string
        merge_request_to_resolve_discussions_of:
          type: integer
        milestone_id:
          type: integer
        title:
          type: string
        weight:
          type: integer
      required:
        - title
    editIssueRequest:
      type: object
      properties:
        add_labels:
          type: string
        assignee_ids:
          type: array
          items:
            type: integer
        confidential:
          type: boolean
        description:
          type: string
        discussion_locked:
          type: boolean
        due_date:
          type: string
        epic_id:
          type: integer
        epic_iid:
          type: integer
        issue_type:
          type: string
        labels:
          type: string
        milestone_id:
          type: integer
        remove_labels:
          type: string
        state_event:
          type: string
        title:
          type: string
        updated_at:
          type: string
        weight:
          type: integer
    editIssueResponse:
      type: object
      properties:
        project_id:
          type: integer
        description:
          type: string
        epic_iid:
          type: integer
        epic:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            title:
              type: string
            url:
              type: string
            group_id:
              type: integer
        weight:
          type: string
        created_at:
          type: string
          format: date-time
        author:
          type: object
          properties:
            name:
              type: string
            avatar_url:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            web_url:
              type: string
        state:
          type: string
        title:
          type: string
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
        closed_by:
          type: object
          properties:
            state:
              type: string
            web_url:
              type: string
            avatar_url:
              type: string
            username:
              type: string
            id:
              type: integer
            name:
              type: string
        iid:
          type: integer
        labels:
          type: array
          items:
            type: string
        upvotes:
          type: integer
        downvotes:
          type: integer
        merge_requests_count:
          type: integer
        id:
          type: integer
        assignees:
          type: array
          items: {}
        assignee:
          type: string
        milestone:
          type: string
        subscribed:
          type: boolean
        user_notes_count:
          type: integer
        due_date:
          type: string
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        confidential:
          type: boolean
        discussion_locked:
          type: boolean
        issue_type:
          type: string
        severity:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            notes:
              type: string
            award_emoji:
              type: string
            project:
              type: string
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
    reorderAnIssueRequest:
      type: object
      properties:
        move_after_id:
          type: integer
        move_before_id:
          type: integer
    moveAnIssueRequest:
      type: object
      properties:
        to_project_id:
          type: integer
      required:
        - to_project_id
    moveAnIssueResponse:
      type: object
      properties:
        project_id:
          type: integer
        description:
          type: string
        epic_iid:
          type: integer
        epic:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            title:
              type: string
            url:
              type: string
            group_id:
              type: integer
        weight:
          type: string
        id:
          type: integer
        iid:
          type: integer
        title:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
        closed_by:
          type: string
        labels:
          type: array
          items: {}
        upvotes:
          type: integer
        downvotes:
          type: integer
        merge_requests_count:
          type: integer
        milestone:
          type: string
        assignees:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        assignee:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        type:
          type: string
        author:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        due_date:
          type: string
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        confidential:
          type: boolean
        discussion_locked:
          type: boolean
        issue_type:
          type: string
        severity:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            notes:
              type: string
            award_emoji:
              type: string
            project:
              type: string
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
    cloneAnIssueRequest:
      type: object
      properties:
        to_project_id:
          type: integer
        with_notes:
          type: boolean
    cloneAnIssueResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        project_id:
          type: integer
        title:
          type: string
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
        closed_by:
          type: string
        labels:
          type: array
          items: {}
        milestone:
          type: string
        assignees:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        type:
          type: string
        assignee:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        user_notes_count:
          type: integer
        merge_requests_count:
          type: integer
        upvotes:
          type: integer
        downvotes:
          type: integer
        due_date:
          type: string
        confidential:
          type: boolean
        discussion_locked:
          type: string
        issue_type:
          type: string
        severity:
          type: string
        web_url:
          type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
        blocking_issues_count:
          type: integer
        has_tasks:
          type: boolean
        _links:
          type: object
          properties:
            self:
              type: string
            notes:
              type: string
            award_emoji:
              type: string
            project:
              type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        subscribed:
          type: boolean
        moved_to_id:
          type: string
        service_desk_reply_to:
          type: string
    unsubscribeFromAnIssueResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        project_id:
          type: integer
        title:
          type: string
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        labels:
          type: array
          items: {}
        upvotes:
          type: integer
        downvotes:
          type: integer
        merge_requests_count:
          type: integer
        milestone:
          type: string
        assignee:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        type:
          type: string
        closed_at:
          type: string
        closed_by:
          type: string
        author:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        subscribed:
          type: boolean
        due_date:
          type: string
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        confidential:
          type: boolean
        discussion_locked:
          type: boolean
        issue_type:
          type: string
        severity:
          type: string
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
    promoteAnIssueToAnEpicRequest:
      type: object
      properties:
        body:
          type: string
      required:
        - body
    promoteAnIssueToAnEpicResponse:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
        body:
          type: string
        attachment:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        system:
          type: boolean
        noteable_id:
          type: integer
        noteable_type:
          type: string
        resolvable:
          type: boolean
        confidential:
          type: boolean
        noteable_iid:
          type: integer
        commands_changes:
          type: object
          properties:
            promote_to_epic:
              type: boolean
    setATimeEstimateForAnIssueRequest:
      type: object
      properties:
        duration:
          type: string
      required:
        - duration
    setATimeEstimateForAnIssueResponse:
      type: object
      properties:
        human_time_estimate:
          type: string
        human_total_time_spent:
          type: string
        time_estimate:
          type: integer
        total_time_spent:
          type: integer
    addSpentTimeForAnIssueRequest:
      type: object
      properties:
        duration:
          type: string
        summary:
          type: string
      required:
        - duration
    listMergeRequestsRelatedToIssueResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          project_id:
            type: integer
          title:
            type: string
          description:
            type: string
          state:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          closed_by:
            type: string
          closed_at:
            type: string
          target_branch:
            type: string
          source_branch:
            type: string
          user_notes_count:
            type: integer
          upvotes:
            type: integer
          downvotes:
            type: integer
          author:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          assignee:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          source_project_id:
            type: integer
          target_project_id:
            type: integer
          labels:
            type: array
            items: {}
          draft:
            type: boolean
          work_in_progress:
            type: boolean
          milestone:
            type: object
            properties:
              id:
                type: integer
              iid:
                type: integer
              project_id:
                type: integer
              title:
                type: string
              description:
                type: string
              state:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              due_date:
                type: string
              start_date:
                type: string
              web_url:
                type: string
          merge_when_pipeline_succeeds:
            type: boolean
          merge_status:
            type: string
          sha:
            type: string
          merge_commit_sha:
            type: string
          squash_commit_sha:
            type: string
          discussion_locked:
            type: string
          should_remove_source_branch:
            type: string
          force_remove_source_branch:
            type: boolean
          reference:
            type: string
          web_url:
            type: string
          references:
            type: object
            properties:
              short:
                type: string
              relative:
                type: string
              full:
                type: string
          time_stats:
            type: object
            properties:
              time_estimate:
                type: integer
              total_time_spent:
                type: integer
              human_time_estimate:
                type: string
              human_total_time_spent:
                type: string
          squash:
            type: boolean
          task_completion_status:
            type: object
            properties:
              count:
                type: integer
              completed_count:
                type: integer
          changes_count:
            type: string
          latest_build_started_at:
            type: string
            format: date-time
          latest_build_finished_at:
            type: string
            format: date-time
          first_deployed_to_production_at:
            type: string
          pipeline:
            type: object
            properties:
              id:
                type: integer
              sha:
                type: string
              ref:
                type: string
              status:
                type: string
              web_url:
                type: string
          head_pipeline:
            type: object
            properties:
              id:
                type: integer
              sha:
                type: string
              ref:
                type: string
              status:
                type: string
              web_url:
                type: string
              before_sha:
                type: string
              tag:
                type: boolean
              yaml_errors:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  username:
                    type: string
                  state:
                    type: string
                  avatar_url:
                    type: string
                  web_url:
                    type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              started_at:
                type: string
                format: date-time
              finished_at:
                type: string
                format: date-time
              committed_at:
                type: string
              duration:
                type: integer
              coverage:
                type: string
              detailed_status:
                type: object
                properties:
                  icon:
                    type: string
                  text:
                    type: string
                  label:
                    type: string
                  group:
                    type: string
                  tooltip:
                    type: string
                  has_details:
                    type: boolean
                  details_path:
                    type: string
                  illustration:
                    type: string
                  favicon:
                    type: string
          diff_refs:
            type: object
            properties:
              base_sha:
                type: string
              head_sha:
                type: string
              start_sha:
                type: string
          merge_error:
            type: string
          user:
            type: object
            properties:
              can_merge:
                type: boolean
    listMergeRequestsThatCloseAParticularIssueOnMergeResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          project_id:
            type: integer
          title:
            type: string
          description:
            type: string
          state:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          target_branch:
            type: string
          source_branch:
            type: string
          upvotes:
            type: integer
          downvotes:
            type: integer
          author:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          assignee:
            type: string
          source_project_id:
            type: integer
          target_project_id:
            type: integer
          closed_at:
            type: string
          closed_by:
            type: string
          labels:
            type: array
            items: {}
          draft:
            type: boolean
          work_in_progress:
            type: boolean
          milestone:
            type: string
          merge_when_pipeline_succeeds:
            type: boolean
          merge_status:
            type: string
          sha:
            type: string
          merge_commit_sha:
            type: string
          squash_commit_sha:
            type: string
          user_notes_count:
            type: integer
          should_remove_source_branch:
            type: string
          force_remove_source_branch:
            type: boolean
          web_url:
            type: string
          reference:
            type: string
          references:
            type: object
            properties:
              short:
                type: string
              relative:
                type: string
              full:
                type: string
          time_stats:
            type: object
            properties:
              time_estimate:
                type: integer
              total_time_spent:
                type: integer
              human_time_estimate:
                type: string
              human_total_time_spent:
                type: string
    participantsOnIssuesResponse:
      type: array
      items:
        $ref: '#/components/schemas/followAndUnfollowUsersResponse'
    getUserAgentDetailsResponse:
      type: object
      properties:
        user_agent:
          type: string
        ip_address:
          type: string
        akismet_submitted:
          type: boolean
    uploadMetricImageRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        url:
          type: string
        url_text:
          type: string
      required:
        - file
    uploadMetricImageResponse:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        filename:
          type: string
        file_path:
          type: string
        url:
          type: string
        url_text:
          type: string
    listMetricImagesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          created_at:
            type: string
            format: date-time
          filename:
            type: string
          file_path:
            type: string
          url:
            type: string
    updateMetricImageRequest:
      type: object
      properties:
        url:
          type: string
        url_text:
          type: string
    getIssuesStatisticsResponse:
      type: object
      properties:
        statistics:
          type: object
          properties:
            counts:
              type: object
              properties:
                all:
                  type: integer
                closed:
                  type: integer
                opened:
                  type: integer
    listProjectIterationsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          group_id:
            type: integer
          title:
            type: string
          description:
            type: string
          state:
            type: integer
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          due_date:
            type: string
          start_date:
            type: string
          web_url:
            type: string
    listProjectJobsResponse:
      type: array
      items:
        type: object
        properties:
          commit:
            type: object
            properties:
              author_email:
                type: string
              author_name:
                type: string
              created_at:
                type: string
                format: date-time
              id:
                type: string
              message:
                type: string
              short_id:
                type: string
              title:
                type: string
          coverage:
            type: string
          allow_failure:
            type: boolean
          created_at:
            type: string
            format: date-time
          started_at:
            type: string
            format: date-time
          finished_at:
            type: string
            format: date-time
          duration:
            type: number
          queued_duration:
            type: number
          artifacts_file:
            type: object
            properties:
              filename:
                type: string
              size:
                type: integer
          artifacts:
            type: array
            items:
              type: object
              properties:
                file_type:
                  type: string
                size:
                  type: integer
                filename:
                  type: string
                file_format:
                  type: string
          artifacts_expire_at:
            type: string
            format: date-time
          tag_list:
            type: array
            items:
              type: string
          id:
            type: integer
          name:
            type: string
          pipeline:
            type: object
            properties:
              id:
                type: integer
              project_id:
                type: integer
              ref:
                type: string
              sha:
                type: string
              status:
                type: string
          ref:
            type: string
          runner:
            type: string
          stage:
            type: string
          status:
            type: string
          failure_reason:
            type: string
          tag:
            type: boolean
          web_url:
            type: string
          user:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
              created_at:
                type: string
                format: date-time
              bio:
                type: string
              location:
                type: string
              public_email:
                type: string
              skype:
                type: string
              linkedin:
                type: string
              twitter:
                type: string
              website_url:
                type: string
              organization:
                type: string
    listPipelineJobsResponse:
      type: array
      items:
        type: object
        properties:
          commit:
            type: object
            properties:
              author_email:
                type: string
              author_name:
                type: string
              created_at:
                type: string
                format: date-time
              id:
                type: string
              message:
                type: string
              short_id:
                type: string
              title:
                type: string
          coverage:
            type: string
          allow_failure:
            type: boolean
          created_at:
            type: string
            format: date-time
          started_at:
            type: string
            format: date-time
          finished_at:
            type: string
            format: date-time
          duration:
            type: number
          queued_duration:
            type: number
          artifacts_expire_at:
            type: string
            format: date-time
          tag_list:
            type: array
            items:
              type: string
          id:
            type: integer
          name:
            type: string
          pipeline:
            type: object
            properties:
              id:
                type: integer
              project_id:
                type: integer
              ref:
                type: string
              sha:
                type: string
              status:
                type: string
          ref:
            type: string
          artifacts:
            type: array
            items: {}
          runner:
            type: string
          stage:
            type: string
          status:
            type: string
          failure_reason:
            type: string
          tag:
            type: boolean
          web_url:
            type: string
          user:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
              created_at:
                type: string
                format: date-time
              bio:
                type: string
              location:
                type: string
              public_email:
                type: string
              skype:
                type: string
              linkedin:
                type: string
              twitter:
                type: string
              website_url:
                type: string
              organization:
                type: string
    listPipelineBridgesResponse:
      type: array
      items:
        type: object
        properties:
          commit:
            type: object
            properties:
              author_email:
                type: string
              author_name:
                type: string
              created_at:
                type: string
                format: date-time
              id:
                type: string
              message:
                type: string
              short_id:
                type: string
              title:
                type: string
          coverage:
            type: string
          allow_failure:
            type: boolean
          created_at:
            type: string
            format: date-time
          started_at:
            type: string
            format: date-time
          finished_at:
            type: string
            format: date-time
          duration:
            type: integer
          queued_duration:
            type: number
          id:
            type: integer
          name:
            type: string
          pipeline:
            type: object
            properties:
              id:
                type: integer
              project_id:
                type: integer
              ref:
                type: string
              sha:
                type: string
              status:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              web_url:
                type: string
          ref:
            type: string
          stage:
            type: string
          status:
            type: string
          tag:
            type: boolean
          web_url:
            type: string
          user:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
              created_at:
                type: string
                format: date-time
              bio:
                type: string
              location:
                type: string
              public_email:
                type: string
              skype:
                type: string
              linkedin:
                type: string
              twitter:
                type: string
              website_url:
                type: string
              organization:
                type: string
          downstream_pipeline:
            type: object
            properties:
              id:
                type: integer
              sha:
                type: string
              ref:
                type: string
              status:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              web_url:
                type: string
    getJobTokenJobResponse:
      type: object
      properties:
        commit:
          type: object
          properties:
            author_email:
              type: string
            author_name:
              type: string
            created_at:
              type: string
              format: date-time
            id:
              type: string
            message:
              type: string
            short_id:
              type: string
            title:
              type: string
        coverage:
          type: string
        allow_failure:
          type: boolean
        created_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        duration:
          type: number
        queued_duration:
          type: number
        artifacts_expire_at:
          type: string
          format: date-time
        id:
          type: integer
        name:
          type: string
        pipeline:
          type: object
          properties:
            id:
              type: integer
            project_id:
              type: integer
            ref:
              type: string
            sha:
              type: string
            status:
              type: string
        ref:
          type: string
        artifacts:
          type: array
          items: {}
        runner:
          type: string
        stage:
          type: string
        status:
          type: string
        failure_reason:
          type: string
        tag:
          type: boolean
        web_url:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
            created_at:
              type: string
              format: date-time
            bio:
              type: string
            location:
              type: string
            public_email:
              type: string
            skype:
              type: string
            linkedin:
              type: string
            twitter:
              type: string
            website_url:
              type: string
            organization:
              type: string
    getGitlabAgentByCi_job_tokenResponse:
      type: object
      properties:
        allowed_agents:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              config_project:
                type: object
                properties:
                  id:
                    type: integer
                  description:
                    type: string
                  name:
                    type: string
                  name_with_namespace:
                    type: string
                  path:
                    type: string
                  path_with_namespace:
                    type: string
                  created_at:
                    type: string
                    format: date-time
        job:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            stage:
              type: string
            project_id:
              type: integer
            project_name:
              type: string
        pipeline:
          type: object
          properties:
            id:
              type: integer
            project_id:
              type: integer
            sha:
              type: string
            ref:
              type: string
            status:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            web_url:
              type: string
        project:
          type: object
          properties:
            id:
              type: integer
            description:
              type: string
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
            created_at:
              type: string
              format: date-time
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
    getASingleJobResponse:
      type: object
      properties:
        commit:
          type: object
          properties:
            author_email:
              type: string
            author_name:
              type: string
            created_at:
              type: string
              format: date-time
            id:
              type: string
            message:
              type: string
            short_id:
              type: string
            title:
              type: string
        coverage:
          type: string
        allow_failure:
          type: boolean
        created_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        duration:
          type: number
        queued_duration:
          type: number
        artifacts_expire_at:
          type: string
          format: date-time
        tag_list:
          type: array
          items:
            type: string
        id:
          type: integer
        name:
          type: string
        pipeline:
          type: object
          properties:
            id:
              type: integer
            project_id:
              type: integer
            ref:
              type: string
            sha:
              type: string
            status:
              type: string
        ref:
          type: string
        artifacts:
          type: array
          items: {}
        runner:
          type: string
        stage:
          type: string
        status:
          type: string
        tag:
          type: boolean
        web_url:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
            created_at:
              type: string
              format: date-time
            bio:
              type: string
            location:
              type: string
            public_email:
              type: string
            skype:
              type: string
            linkedin:
              type: string
            twitter:
              type: string
            website_url:
              type: string
            organization:
              type: string
    cancelAJobResponse:
      type: object
      properties:
        commit:
          type: object
          properties:
            author_email:
              type: string
            author_name:
              type: string
            created_at:
              type: string
              format: date-time
            id:
              type: string
            message:
              type: string
            short_id:
              type: string
            title:
              type: string
        coverage:
          type: string
        allow_failure:
          type: boolean
        created_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
        duration:
          type: integer
        queued_duration:
          type: number
        id:
          type: integer
        name:
          type: string
        ref:
          type: string
        artifacts:
          type: array
          items: {}
        runner:
          type: string
        stage:
          type: string
        status:
          type: string
        tag:
          type: boolean
        web_url:
          type: string
        user:
          type: string
    eraseAJobResponse:
      type: object
      properties:
        commit:
          type: object
          properties:
            author_email:
              type: string
            author_name:
              type: string
            created_at:
              type: string
              format: date-time
            id:
              type: string
            message:
              type: string
            short_id:
              type: string
            title:
              type: string
        coverage:
          type: string
        allow_failure:
          type: boolean
        download_url:
          type: string
        id:
          type: integer
        name:
          type: string
        ref:
          type: string
        artifacts:
          type: array
          items: {}
        runner:
          type: string
        stage:
          type: string
        created_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        duration:
          type: integer
        queued_duration:
          type: number
        status:
          type: string
        tag:
          type: boolean
        web_url:
          type: string
        user:
          type: string
    runAJobRequest:
      type: object
      properties:
        job_variables_attributes:
          type: array
          items:
            type: string
    runAJobResponse:
      type: object
      properties:
        commit:
          type: object
          properties:
            author_email:
              type: string
            author_name:
              type: string
            created_at:
              type: string
              format: date-time
            id:
              type: string
            message:
              type: string
            short_id:
              type: string
            title:
              type: string
        coverage:
          type: string
        allow_failure:
          type: boolean
        created_at:
          type: string
          format: date-time
        started_at:
          type: string
        finished_at:
          type: string
        duration:
          type: string
        queued_duration:
          type: number
        id:
          type: integer
        name:
          type: string
        ref:
          type: string
        artifacts:
          type: array
          items: {}
        runner:
          type: string
        stage:
          type: string
        status:
          type: string
        tag:
          type: boolean
        web_url:
          type: string
        user:
          type: string
        job_variables_attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
    getSshKeyWithUserByIdOfAnSshKeyResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        key:
          type: string
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        user:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
            created_at:
              type: string
              format: date-time
            bio:
              type: string
            location:
              type: string
            public_email:
              type: string
            skype:
              type: string
            linkedin:
              type: string
            twitter:
              type: string
            website_url:
              type: string
            organization:
              type: string
            last_sign_in_at:
              type: string
              format: date-time
            confirmed_at:
              type: string
              format: date-time
            last_activity_on:
              type: string
            email:
              type: string
            theme_id:
              type: integer
            color_scheme_id:
              type: integer
            projects_limit:
              type: integer
            current_sign_in_at:
              type: string
            identities:
              type: array
              items: {}
            can_create_group:
              type: boolean
            can_create_project:
              type: boolean
            two_factor_enabled:
              type: boolean
            external:
              type: boolean
            private_profile:
              type: string
    listLabelsResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleProjectLabelResponse'
    getASingleProjectLabelResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        text_color:
          type: string
        description:
          type: string
        description_html:
          type: string
        open_issues_count:
          type: integer
        closed_issues_count:
          type: integer
        open_merge_requests_count:
          type: integer
        subscribed:
          type: boolean
        priority:
          type: integer
        is_project_label:
          type: boolean
    createANewLabelRequest:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
        description:
          type: string
        priority:
          type: integer
      required:
        - name
        - color
    editAnExistingLabelRequest:
      type: object
      properties:
        new_name:
          type: string
        color:
          type: string
        description:
          type: string
        priority:
          type: integer
    promoteAProjectLabelToAGroupLabelResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        description:
          type: string
        description_html:
          type: string
        open_issues_count:
          type: integer
        closed_issues_count:
          type: integer
        open_merge_requests_count:
          type: integer
        subscribed:
          type: boolean
    retrieveInformationAboutTheCurrentLicenseResponse:
      type: object
      properties:
        id:
          type: integer
        plan:
          type: string
        created_at:
          type: string
          format: date-time
        starts_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        historical_max:
          type: integer
        maximum_user_count:
          type: integer
        expired:
          type: boolean
        overage:
          type: integer
        user_limit:
          type: integer
        active_users:
          type: integer
        licensee:
          type: object
          properties:
            Name:
              type: string
        add_ons:
          type: object
          properties:
            GitLab_FileLocks:
              type: integer
            GitLab_Auditor_User:
              type: integer
    retrieveInformationAboutAllLicensesResponse:
      type: array
      items:
        $ref: '#/components/schemas/deleteALicenseResponse'
    addANewLicenseRequest:
      type: object
      properties:
        license:
          type: string
      required:
        - license
    deleteALicenseResponse:
      type: object
      properties:
        id:
          type: integer
        plan:
          type: string
        created_at:
          type: string
          format: date-time
        starts_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        historical_max:
          type: integer
        maximum_user_count:
          type: integer
        expired:
          type: boolean
        overage:
          type: integer
        user_limit:
          type: integer
        licensee:
          type: object
          properties:
            Name:
              type: string
        add_ons:
          type: object
          properties:
            GitLab_FileLocks:
              type: integer
            GitLab_Auditor_User:
              type: integer
    listLinkedEpicsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          color:
            type: string
          text_color:
            type: string
          group_id:
            type: integer
          parent_id:
            type: string
          parent_iid:
            type: string
          title:
            type: string
          description:
            type: string
          confidential:
            type: boolean
          author:
            type: object
            properties:
              id:
                type: integer
              username:
                type: string
              name:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          start_date:
            type: string
          end_date:
            type: string
          due_date:
            type: string
          state:
            type: string
          web_url:
            type: string
          references:
            type: object
            properties:
              short:
                type: string
              relative:
                type: string
              full:
                type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          closed_at:
            type: string
          labels:
            type: array
            items: {}
          upvotes:
            type: integer
          downvotes:
            type: integer
          _links:
            type: object
            properties:
              self:
                type: string
              epic_issues:
                type: string
              group:
                type: string
              parent:
                type: string
          related_epic_link_id:
            type: integer
          link_type:
            type: string
          link_created_at:
            type: string
            format: date-time
          link_updated_at:
            type: string
            format: date-time
    createARelatedEpicLinkRequest:
      type: object
      properties:
        target_epic_iid:
          oneOf:
            - type: integer
            - type: string
        target_group_id:
          oneOf:
            - type: integer
            - type: string
        link_type:
          type: string
    createARelatedEpicLinkResponse:
      type: object
      properties:
        source_epic:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            color:
              type: string
            text_color:
              type: string
            group_id:
              type: integer
            parent_id:
              type: string
            parent_iid:
              type: string
            title:
              type: string
            description:
              type: string
            confidential:
              type: boolean
            author:
              type: object
              properties:
                id:
                  type: integer
                username:
                  type: string
                name:
                  type: string
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            start_date:
              type: string
            end_date:
              type: string
            due_date:
              type: string
            state:
              type: string
            web_url:
              type: string
            references:
              type: object
              properties:
                short:
                  type: string
                relative:
                  type: string
                full:
                  type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            closed_at:
              type: string
            labels:
              type: array
              items: {}
            upvotes:
              type: integer
            downvotes:
              type: integer
            _links:
              type: object
              properties:
                self:
                  type: string
                epic_issues:
                  type: string
                group:
                  type: string
                parent:
                  type: string
        target_epic:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            color:
              type: string
            text_color:
              type: string
            group_id:
              type: integer
            parent_id:
              type: string
            parent_iid:
              type: string
            title:
              type: string
            description:
              type: string
            confidential:
              type: boolean
            author:
              type: object
              properties:
                id:
                  type: integer
                username:
                  type: string
                name:
                  type: string
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            start_date:
              type: string
            end_date:
              type: string
            due_date:
              type: string
            state:
              type: string
            web_url:
              type: string
            references:
              type: object
              properties:
                short:
                  type: string
                relative:
                  type: string
                full:
                  type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            closed_at:
              type: string
            labels:
              type: array
              items: {}
            upvotes:
              type: integer
            downvotes:
              type: integer
            _links:
              type: object
              properties:
                self:
                  type: string
                epic_issues:
                  type: string
                group:
                  type: string
                parent:
                  type: string
        link_type:
          type: string
    validateTheCiYamlConfigurationRequest:
      type: object
      properties:
        content:
          type: string
        include_merged_yaml:
          type: boolean
        include_jobs:
          type: boolean
      required:
        - content
    validateACiYamlConfigurationWithANamespaceRequest:
      type: object
      properties:
        content:
          type: string
        dry_run:
          type: boolean
        include_jobs:
          type: boolean
        ref:
          type: string
      required:
        - content
    validateAProjectCiConfigurationResponse:
      type: object
      properties:
        valid:
          type: boolean
        merged_yaml:
          type: string
        errors:
          type: array
          items: {}
        warnings:
          type: array
          items: {}
    listManagedLicensesResponse:
      type: array
      items:
        $ref: '#/components/schemas/showAnExistingManagedLicenseResponse'
    showAnExistingManagedLicenseResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        approval_status:
          type: string
    createANewManagedLicenseRequest:
      type: object
      properties:
        name:
          type: string
        approval_status:
          type: string
      required:
        - name
        - approval_status
    editAnExistingManagedLicenseRequest:
      type: object
      properties:
        approval_status:
          type: string
      required:
        - approval_status
    renderAnArbitraryMarkdownDocumentRequest:
      type: object
      properties:
        text:
          type: string
        gfm:
          type: boolean
        project:
          type: string
      required:
        - text
    renderAnArbitraryMarkdownDocumentResponse:
      type: object
      properties:
        html:
          type: string
    listAllMembersOfAGroupOrProjectResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          username:
            type: string
          name:
            type: string
          state:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          created_at:
            type: string
            format: date-time
          created_by:
            type: object
            properties:
              id:
                type: integer
              username:
                type: string
              name:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          expires_at:
            type: string
            format: date-time
          access_level:
            type: integer
          group_saml_identity:
            type: string
          membership_state:
            type: string
    getAMemberOfAGroupOrProjectResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        access_level:
          type: integer
        email:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            name:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        expires_at:
          type: string
        group_saml_identity:
          type: string
        membership_state:
          type: string
    listAllBillableMembersOfAGroupResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          username:
            type: string
          name:
            type: string
          state:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          last_activity_on:
            type: string
          membership_type:
            type: string
          membership_state:
            type: string
          removable:
            type: boolean
          created_at:
            type: string
            format: date-time
    listMembershipsForABillableMemberOfAGroupResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          source_id:
            type: integer
          source_full_name:
            type: string
          source_members_url:
            type: string
          created_at:
            type: string
            format: date-time
          expires_at:
            type: string
            format: date-time
          access_level:
            type: object
            properties:
              string_value:
                type: string
              integer_value:
                type: integer
    changeMembershipStateOfAUserInAGroupRequest:
      type: object
      properties:
        state:
          type: string
      required:
        - state
    changeMembershipStateOfAUserInAGroupResponse:
      type: object
      properties:
        success:
          type: boolean
    editAMemberOfAGroupOrProjectRequest:
      type: object
      properties:
        access_level:
          type: integer
        expires_at:
          type: string
      required:
        - access_level
    setOverrideFlagForAMemberOfAGroupResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            name:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        expires_at:
          type: string
          format: date-time
        access_level:
          type: integer
        email:
          type: string
        override:
          type: boolean
    listPendingMembersOfAGroupAndItsSubgroupsAndProjectsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          username:
            type: string
          email:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          approved:
            type: boolean
          invited:
            type: boolean
    getConfigurationResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        project_id:
          type: integer
        title:
          type: string
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        merge_status:
          type: string
        approvals_required:
          type: integer
        approvals_left:
          type: integer
        approved_by:
          type: array
          items:
            type: object
            properties:
              user:
                type: object
                properties:
                  name:
                    type: string
                  username:
                    type: string
                  id:
                    type: integer
                  state:
                    type: string
                  avatar_url:
                    type: string
                  web_url:
                    type: string
    changeConfigurationRequest:
      type: object
      properties:
        approvals_before_merge:
          type: integer
        reset_approvals_on_push:
          type: boolean
        disable_overriding_approvers_per_merge_request:
          type: boolean
        merge_requests_author_approval:
          type: boolean
        merge_requests_disable_committers_approval:
          type: boolean
        require_password_to_approve:
          type: boolean
    getProjectLevelRulesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleProjectLevelRuleResponse'
    getASingleProjectLevelRuleResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        rule_type:
          type: string
        eligible_approvers:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        approvals_required:
          type: integer
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              path:
                type: string
              description:
                type: string
              visibility:
                type: string
              lfs_enabled:
                type: boolean
              avatar_url:
                type: string
              web_url:
                type: string
              request_access_enabled:
                type: boolean
              full_name:
                type: string
              full_path:
                type: string
              parent_id:
                type: string
              ldap_cn:
                type: string
              ldap_access:
                type: string
        protected_branches:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              push_access_levels:
                type: array
                items:
                  type: object
                  properties:
                    access_level:
                      type: integer
                    access_level_description:
                      type: string
              merge_access_levels:
                type: array
                items:
                  type: object
                  properties:
                    access_level:
                      type: integer
                    access_level_description:
                      type: string
              unprotect_access_levels:
                type: array
                items:
                  type: object
                  properties:
                    access_level:
                      type: integer
                    access_level_description:
                      type: string
              code_owner_approval_required:
                type: string
        contains_hidden_groups:
          type: boolean
    createProjectLevelRuleRequest:
      type: object
      properties:
        name:
          type: string
        approvals_required:
          type: integer
        rule_type:
          type: string
        user_ids:
          type: array
          items:
            type: string
        group_ids:
          type: array
          items:
            type: string
        protected_branch_ids:
          type: array
          items:
            type: string
        report_type:
          type: string
      required:
        - name
        - approvals_required
    updateProjectLevelRuleRequest:
      type: object
      properties:
        name:
          type: string
        approvals_required:
          type: integer
        user_ids:
          type: array
          items:
            type: string
        group_ids:
          type: array
          items:
            type: string
        protected_branch_ids:
          type: array
          items:
            type: string
      required:
        - name
        - approvals_required
    changeApprovalConfigurationRequest:
      type: object
      properties:
        approvals_required:
          type: integer
      required:
        - approvals_required
    getTheApprovalStateOfMergeRequestsResponse:
      type: object
      properties:
        approval_rules_overwritten:
          type: boolean
        rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              rule_type:
                type: string
              eligible_approvers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    username:
                      type: string
                    state:
                      type: string
                    avatar_url:
                      type: string
                    web_url:
                      type: string
              approvals_required:
                type: integer
              users:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    username:
                      type: string
                    state:
                      type: string
                    avatar_url:
                      type: string
                    web_url:
                      type: string
              groups:
                type: array
                items: {}
              contains_hidden_groups:
                type: boolean
              approved_by:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    username:
                      type: string
                    state:
                      type: string
                    avatar_url:
                      type: string
                    web_url:
                      type: string
              source_rule:
                type: string
              approved:
                type: boolean
              overridden:
                type: boolean
    getMergeRequestLevelRulesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleMergeRequestLevelRuleResponse'
    getASingleMergeRequestLevelRuleResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        rule_type:
          type: string
        eligible_approvers:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        approvals_required:
          type: integer
        source_rule:
          type: string
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              path:
                type: string
              description:
                type: string
              visibility:
                type: string
              lfs_enabled:
                type: boolean
              avatar_url:
                type: string
              web_url:
                type: string
              request_access_enabled:
                type: boolean
              full_name:
                type: string
              full_path:
                type: string
              parent_id:
                type: string
              ldap_cn:
                type: string
              ldap_access:
                type: string
        contains_hidden_groups:
          type: boolean
        overridden:
          type: boolean
    createMergeRequestLevelRuleRequest:
      type: object
      properties:
        name:
          type: string
        approvals_required:
          type: integer
        approval_project_rule_id:
          type: integer
        user_ids:
          type: array
          items:
            type: string
        group_ids:
          type: array
          items:
            type: string
      required:
        - name
        - approvals_required
    updateMergeRequestLevelRuleRequest:
      type: object
      properties:
        name:
          type: string
        approvals_required:
          type: integer
        user_ids:
          type: array
          items:
            type: string
        group_ids:
          type: array
          items:
            type: string
      required:
        - name
        - approvals_required
    approveMergeRequestRequest:
      type: object
      properties:
        sha:
          type: string
        approval_password:
          type: string
    listMergeRequestsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          approvals_before_merge:
            type: string
    getSingleMrResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        approvals_before_merge:
          type: string
        iid:
          type: integer
        project_id:
          type: integer
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        target_branch:
          type: string
        source_branch:
          type: string
        upvotes:
          type: integer
        downvotes:
          type: integer
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        user:
          type: object
          properties:
            can_merge:
              type: boolean
        assignee:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        assignees:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        reviewers:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        source_project_id:
          type: integer
        target_project_id:
          type: integer
        labels:
          type: array
          items:
            type: string
        draft:
          type: boolean
        work_in_progress:
          type: boolean
        milestone:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            due_date:
              type: string
            start_date:
              type: string
            web_url:
              type: string
        merge_when_pipeline_succeeds:
          type: boolean
        merge_status:
          type: string
        merge_error:
          type: string
        sha:
          type: string
        merge_commit_sha:
          type: string
        squash_commit_sha:
          type: string
        user_notes_count:
          type: integer
        discussion_locked:
          type: string
        should_remove_source_branch:
          type: boolean
        force_remove_source_branch:
          type: boolean
        allow_collaboration:
          type: boolean
        allow_maintainer_to_push:
          type: boolean
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        squash:
          type: boolean
        subscribed:
          type: boolean
        changes_count:
          type: string
        merged_by:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        merge_user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        merged_at:
          type: string
          format: date-time
        closed_by:
          type: string
        closed_at:
          type: string
        latest_build_started_at:
          type: string
          format: date-time
        latest_build_finished_at:
          type: string
          format: date-time
        first_deployed_to_production_at:
          type: string
        pipeline:
          type: object
          properties:
            id:
              type: integer
            sha:
              type: string
            ref:
              type: string
            status:
              type: string
            web_url:
              type: string
        diff_refs:
          type: object
          properties:
            base_sha:
              type: string
            head_sha:
              type: string
            start_sha:
              type: string
        diverged_commits_count:
          type: integer
        rebase_in_progress:
          type: boolean
        first_contribution:
          type: boolean
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
        has_conflicts:
          type: boolean
        blocking_discussions_resolved:
          type: boolean
    getSingleMrParticipantsResponse:
      type: array
      items:
        $ref: '#/components/schemas/followAndUnfollowUsersResponse'
    getSingleMrCommitsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          short_id:
            type: string
          title:
            type: string
          author_name:
            type: string
          author_email:
            type: string
          created_at:
            type: string
            format: date-time
          message:
            type: string
    getSingleMrChangesResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        project_id:
          type: integer
        title:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        target_branch:
          type: string
        source_branch:
          type: string
        upvotes:
          type: integer
        downvotes:
          type: integer
        author:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        assignee:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        assignees:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        reviewers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        source_project_id:
          type: integer
        target_project_id:
          type: integer
        labels:
          type: array
          items: {}
        description:
          type: string
        draft:
          type: boolean
        work_in_progress:
          type: boolean
        milestone:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            due_date:
              type: string
        merge_when_pipeline_succeeds:
          type: boolean
        merge_status:
          type: string
        subscribed:
          type: boolean
        sha:
          type: string
        merge_commit_sha:
          type: string
        squash_commit_sha:
          type: string
        user_notes_count:
          type: integer
        changes_count:
          type: string
        should_remove_source_branch:
          type: boolean
        force_remove_source_branch:
          type: boolean
        squash:
          type: boolean
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        discussion_locked:
          type: boolean
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
        changes:
          type: array
          items:
            type: object
            properties:
              old_path:
                type: string
              new_path:
                type: string
              a_mode:
                type: string
              b_mode:
                type: string
              diff:
                type: string
              new_file:
                type: boolean
              renamed_file:
                type: boolean
              deleted_file:
                type: boolean
        overflow:
          type: boolean
    listMrPipelinesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          sha:
            type: string
          ref:
            type: string
          status:
            type: string
    createMrPipelineResponse:
      type: object
      properties:
        id:
          type: integer
        sha:
          type: string
        ref:
          type: string
        status:
          type: string
        web_url:
          type: string
        before_sha:
          type: string
        tag:
          type: boolean
        yaml_errors:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        started_at:
          type: string
        finished_at:
          type: string
        committed_at:
          type: string
        duration:
          type: string
        coverage:
          type: string
        detailed_status:
          type: object
          properties:
            icon:
              type: string
            text:
              type: string
            label:
              type: string
            group:
              type: string
            tooltip:
              type: string
            has_details:
              type: boolean
            details_path:
              type: string
            illustration:
              type: string
            favicon:
              type: string
    createMrRequest:
      type: object
      properties:
        source_branch:
          type: string
        target_branch:
          type: string
        title:
          type: string
        assignee_id:
          type: integer
        assignee_ids:
          type: array
          items:
            type: integer
        reviewer_ids:
          type: array
          items:
            type: integer
        description:
          type: string
        target_project_id:
          type: integer
        labels:
          type: string
        milestone_id:
          type: integer
        remove_source_branch:
          type: boolean
        allow_collaboration:
          type: boolean
        allow_maintainer_to_push:
          type: boolean
        approvals_before_merge:
          type: integer
        squash:
          type: boolean
      required:
        - source_branch
        - target_branch
        - title
    createMrResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        approvals_before_merge:
          type: string
        iid:
          type: integer
        project_id:
          type: integer
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        target_branch:
          type: string
        source_branch:
          type: string
        upvotes:
          type: integer
        downvotes:
          type: integer
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        assignee:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        source_project_id:
          type: integer
        target_project_id:
          type: integer
        labels:
          type: array
          items:
            type: string
        draft:
          type: boolean
        work_in_progress:
          type: boolean
        milestone:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            due_date:
              type: string
            start_date:
              type: string
            web_url:
              type: string
        merge_when_pipeline_succeeds:
          type: boolean
        merge_status:
          type: string
        merge_error:
          type: string
        sha:
          type: string
        merge_commit_sha:
          type: string
        squash_commit_sha:
          type: string
        user_notes_count:
          type: integer
        discussion_locked:
          type: string
        should_remove_source_branch:
          type: boolean
        force_remove_source_branch:
          type: boolean
        allow_collaboration:
          type: boolean
        allow_maintainer_to_push:
          type: boolean
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        squash:
          type: boolean
        subscribed:
          type: boolean
        changes_count:
          type: string
        merged_by:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        merge_user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        merged_at:
          type: string
          format: date-time
        closed_by:
          type: string
        closed_at:
          type: string
        latest_build_started_at:
          type: string
          format: date-time
        latest_build_finished_at:
          type: string
          format: date-time
        first_deployed_to_production_at:
          type: string
        pipeline:
          type: object
          properties:
            id:
              type: integer
            sha:
              type: string
            ref:
              type: string
            status:
              type: string
            web_url:
              type: string
        diff_refs:
          type: object
          properties:
            base_sha:
              type: string
            head_sha:
              type: string
            start_sha:
              type: string
        diverged_commits_count:
          type: integer
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
    updateMrRequest:
      type: object
      properties:
        target_branch:
          type: string
        title:
          type: string
        assignee_id:
          type: integer
        assignee_ids:
          type: array
          items:
            type: integer
        reviewer_ids:
          type: array
          items:
            type: integer
        milestone_id:
          type: integer
        labels:
          type: string
        add_labels:
          type: string
        remove_labels:
          type: string
        description:
          type: string
        state_event:
          type: string
        remove_source_branch:
          type: boolean
        squash:
          type: boolean
        discussion_locked:
          type: boolean
        allow_collaboration:
          type: boolean
        allow_maintainer_to_push:
          type: boolean
    updateMrResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        approvals_before_merge:
          type: string
        iid:
          type: integer
        project_id:
          type: integer
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        target_branch:
          type: string
        source_branch:
          type: string
        upvotes:
          type: integer
        downvotes:
          type: integer
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        assignee:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        assignees:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        reviewers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        source_project_id:
          type: integer
        target_project_id:
          type: integer
        labels:
          type: array
          items:
            type: string
        draft:
          type: boolean
        work_in_progress:
          type: boolean
        milestone:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            due_date:
              type: string
            start_date:
              type: string
            web_url:
              type: string
        merge_when_pipeline_succeeds:
          type: boolean
        merge_status:
          type: string
        merge_error:
          type: string
        sha:
          type: string
        merge_commit_sha:
          type: string
        squash_commit_sha:
          type: string
        user_notes_count:
          type: integer
        discussion_locked:
          type: string
        should_remove_source_branch:
          type: boolean
        force_remove_source_branch:
          type: boolean
        allow_collaboration:
          type: boolean
        allow_maintainer_to_push:
          type: boolean
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        squash:
          type: boolean
        subscribed:
          type: boolean
        changes_count:
          type: string
        merged_by:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        merge_user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        merged_at:
          type: string
          format: date-time
        closed_by:
          type: string
        closed_at:
          type: string
        latest_build_started_at:
          type: string
          format: date-time
        latest_build_finished_at:
          type: string
          format: date-time
        first_deployed_to_production_at:
          type: string
        pipeline:
          type: object
          properties:
            id:
              type: integer
            sha:
              type: string
            ref:
              type: string
            status:
              type: string
            web_url:
              type: string
        diff_refs:
          type: object
          properties:
            base_sha:
              type: string
            head_sha:
              type: string
            start_sha:
              type: string
        diverged_commits_count:
          type: integer
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
    mergeAMergeRequestRequest:
      type: object
      properties:
        merge_commit_message:
          type: string
        squash_commit_message:
          type: string
        squash:
          type: boolean
        should_remove_source_branch:
          type: boolean
        merge_when_pipeline_succeeds:
          type: boolean
        sha:
          type: string
    mergeToDefaultMergeRefPathResponse:
      type: object
      properties:
        commit_id:
          type: string
    rebaseAMergeRequestRequest:
      type: object
      properties:
        skip_ci:
          type: boolean
    rebaseAMergeRequestResponse:
      type: object
      properties:
        rebase_in_progress:
          type: boolean
        merge_error:
          type: string
    listIssuesThatCloseOnMergeResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          title:
            type: string
    subscribeToAMergeRequestResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        approvals_before_merge:
          type: string
        iid:
          type: integer
        project_id:
          type: integer
        description:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        target_branch:
          type: string
        source_branch:
          type: string
        upvotes:
          type: integer
        downvotes:
          type: integer
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        assignee:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        assignees:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        reviewers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
        source_project_id:
          type: integer
        target_project_id:
          type: integer
        labels:
          type: array
          items:
            type: string
        draft:
          type: boolean
        work_in_progress:
          type: boolean
        milestone:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            due_date:
              type: string
            start_date:
              type: string
            web_url:
              type: string
        merge_when_pipeline_succeeds:
          type: boolean
        merge_status:
          type: string
        sha:
          type: string
        merge_commit_sha:
          type: string
        squash_commit_sha:
          type: string
        user_notes_count:
          type: integer
        discussion_locked:
          type: string
        should_remove_source_branch:
          type: boolean
        force_remove_source_branch:
          type: boolean
        allow_collaboration:
          type: boolean
        allow_maintainer_to_push:
          type: boolean
        web_url:
          type: string
        references:
          type: object
          properties:
            short:
              type: string
            relative:
              type: string
            full:
              type: string
        time_stats:
          type: object
          properties:
            time_estimate:
              type: integer
            total_time_spent:
              type: integer
            human_time_estimate:
              type: string
            human_total_time_spent:
              type: string
        squash:
          type: boolean
        subscribed:
          type: boolean
        changes_count:
          type: string
        merged_by:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        merge_user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        merged_at:
          type: string
          format: date-time
        closed_by:
          type: string
        closed_at:
          type: string
        latest_build_started_at:
          type: string
          format: date-time
        latest_build_finished_at:
          type: string
          format: date-time
        first_deployed_to_production_at:
          type: string
        pipeline:
          type: object
          properties:
            id:
              type: integer
            sha:
              type: string
            ref:
              type: string
            status:
              type: string
            web_url:
              type: string
        diff_refs:
          type: object
          properties:
            base_sha:
              type: string
            head_sha:
              type: string
            start_sha:
              type: string
        diverged_commits_count:
          type: integer
        task_completion_status:
          type: object
          properties:
            count:
              type: integer
            completed_count:
              type: integer
    getMrDiffVersionsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          head_commit_sha:
            type: string
          base_commit_sha:
            type: string
          start_commit_sha:
            type: string
          created_at:
            type: string
            format: date-time
          merge_request_id:
            type: integer
          state:
            type: string
          real_size:
            type: string
    getASingleMrDiffVersionResponse:
      type: object
      properties:
        id:
          type: integer
        head_commit_sha:
          type: string
        base_commit_sha:
          type: string
        start_commit_sha:
          type: string
        created_at:
          type: string
          format: date-time
        merge_request_id:
          type: integer
        state:
          type: string
        real_size:
          type: string
        commits:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              short_id:
                type: string
              title:
                type: string
              author_name:
                type: string
              author_email:
                type: string
              created_at:
                type: string
                format: date-time
              message:
                type: string
        diffs:
          type: array
          items:
            type: object
            properties:
              old_path:
                type: string
              new_path:
                type: string
              a_mode:
                type: string
              b_mode:
                type: string
              diff:
                type: string
              new_file:
                type: boolean
              renamed_file:
                type: boolean
              deleted_file:
                type: boolean
    setATimeEstimateForAMergeRequestRequest:
      type: object
      properties:
        duration:
          type: string
      required:
        - duration
    setATimeEstimateForAMergeRequestResponse:
      type: object
      properties:
        human_time_estimate:
          type: string
        human_total_time_spent:
          type: string
        time_estimate:
          type: integer
        total_time_spent:
          type: integer
    addSpentTimeForAMergeRequestRequest:
      type: object
      properties:
        duration:
          type: string
        summary:
          type: string
      required:
        - duration
    listMergeTrainsForAProjectResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          merge_request:
            type: object
            properties:
              id:
                type: integer
              iid:
                type: integer
              project_id:
                type: integer
              title:
                type: string
              description:
                type: string
              state:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              web_url:
                type: string
          user:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          pipeline:
            type: object
            properties:
              id:
                type: integer
              sha:
                type: string
              ref:
                type: string
              status:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              web_url:
                type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          target_branch:
            type: string
          status:
            type: string
          merged_at:
            type: string
            format: date-time
          duration:
            type: integer
    createANewAnnotationRequest:
      type: object
      properties:
        dashboard_path:
          type: string
        starting_at:
          type: string
        ending_at:
          type: string
        description:
          type: string
      required:
        - dashboard_path
        - starting_at
        - description
    createANewAnnotationResponse:
      type: object
      properties:
        id:
          type: integer
        starting_at:
          type: string
          format: date-time
        ending_at:
          type: string
        dashboard_path:
          type: string
        description:
          type: string
        environment_id:
          type: integer
        cluster_id:
          type: string
    addAStarToADashboardRequest:
      type: object
      properties:
        dashboard_path:
          type: string
      required:
        - dashboard_path
    addAStarToADashboardResponse:
      type: object
      properties:
        id:
          type: integer
        dashboard_path:
          type: string
        user_id:
          type: integer
        project_id:
          type: integer
    removeAStarFromADashboardResponse:
      type: object
      properties:
        deleted_rows:
          type: integer
    listProjectMilestonesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          project_id:
            type: integer
          title:
            type: string
          description:
            type: string
          due_date:
            type: string
          start_date:
            type: string
          state:
            type: string
          updated_at:
            type: string
            format: date-time
          created_at:
            type: string
            format: date-time
          expired:
            type: boolean
    listNamespacesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          billable_members_count:
            type: integer
          max_seats_used:
            type: integer
          seats_in_use:
            type: integer
    getNamespaceByIdResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        path:
          type: string
        kind:
          type: string
        full_path:
          type: string
        parent_id:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        members_count_with_descendants:
          type: integer
        billable_members_count:
          type: integer
        max_seats_used:
          type: integer
        seats_in_use:
          type: integer
        plan:
          type: string
        trial_ends_on:
          type: string
        trial:
          type: boolean
    getExistenceOfANamespaceResponse:
      type: object
      properties:
        exists:
          type: boolean
        suggests:
          type: array
          items:
            type: string
    listProjectIssueNotesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getSingleMergeRequestNoteResponse'
    createNewIssueNoteRequest:
      type: object
      properties:
        body:
          type: string
        confidential:
          type: boolean
        created_at:
          type: string
      required:
        - body
    modifyExistingIssueNoteRequest:
      type: object
      properties:
        body:
          type: string
        confidential:
          type: boolean
    getSingleSnippetNoteResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        file_name:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
            name:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
        expires_at:
          type: string
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
    createNewSnippetNoteRequest:
      type: object
      properties:
        body:
          type: string
        created_at:
          type: string
      required:
        - body
    modifyExistingSnippetNoteRequest:
      type: object
      properties:
        body:
          type: string
      required:
        - body
    getSingleMergeRequestNoteResponse:
      type: object
      properties:
        id:
          type: integer
        body:
          type: string
        attachment:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
            name:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        system:
          type: boolean
        noteable_id:
          type: integer
        noteable_type:
          type: string
        noteable_iid:
          type: integer
        resolvable:
          type: boolean
        confidential:
          type: boolean
    createNewMergeRequestNoteRequest:
      type: object
      properties:
        body:
          type: string
        created_at:
          type: string
        merge_request_diff_sha:
          type: string
      required:
        - body
    getSingleEpicNoteResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        file_name:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
            name:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
        expires_at:
          type: string
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        confidential:
          type: boolean
    globalNotificationSettingsResponse:
      type: object
      properties:
        level:
          type: string
        notification_email:
          type: string
    updateGlobalNotificationSettingsRequest:
      type: object
      properties:
        level:
          type: string
        notification_email:
          type: string
        new_note:
          type: boolean
        new_issue:
          type: boolean
        reopen_issue:
          type: boolean
        close_issue:
          type: boolean
        reassign_issue:
          type: boolean
        issue_due:
          type: boolean
        new_merge_request:
          type: boolean
        push_to_merge_request:
          type: boolean
        reopen_merge_request:
          type: boolean
        close_merge_request:
          type: boolean
        reassign_merge_request:
          type: boolean
        merge_merge_request:
          type: boolean
        failed_pipeline:
          type: boolean
        fixed_pipeline:
          type: boolean
        success_pipeline:
          type: boolean
        moved_project:
          type: boolean
        merge_when_pipeline_succeeds:
          type: boolean
        new_epic:
          type: boolean
    groupProjectLevelNotificationSettingsResponse:
      type: object
      properties:
        level:
          type: string
    updateGroupProjectLevelNotificationSettingsRequest:
      type: object
      properties:
        level:
          type: string
        new_note:
          type: boolean
        new_issue:
          type: boolean
        reopen_issue:
          type: boolean
        close_issue:
          type: boolean
        reassign_issue:
          type: boolean
        issue_due:
          type: boolean
        new_merge_request:
          type: boolean
        push_to_merge_request:
          type: boolean
        reopen_merge_request:
          type: boolean
        close_merge_request:
          type: boolean
        reassign_merge_request:
          type: boolean
        merge_merge_request:
          type: boolean
        failed_pipeline:
          type: boolean
        fixed_pipeline:
          type: boolean
        success_pipeline:
          type: boolean
        moved_project:
          type: boolean
        merge_when_pipeline_succeeds:
          type: boolean
        new_epic:
          type: boolean
    updateGroupProjectLevelNotificationSettingsResponse:
      type: object
      properties:
        level:
          type: string
        events:
          type: object
          properties:
            new_note:
              type: boolean
            new_issue:
              type: boolean
            reopen_issue:
              type: boolean
            close_issue:
              type: boolean
            reassign_issue:
              type: boolean
            issue_due:
              type: boolean
            new_merge_request:
              type: boolean
            push_to_merge_request:
              type: boolean
            reopen_merge_request:
              type: boolean
            close_merge_request:
              type: boolean
            reassign_merge_request:
              type: boolean
            merge_merge_request:
              type: boolean
            failed_pipeline:
              type: boolean
            fixed_pipeline:
              type: boolean
            success_pipeline:
              type: boolean
    getAProjectPackageResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        version:
          type: string
        package_type:
          type: string
        _links:
          type: object
          properties:
            web_path:
              type: string
            delete_api_path:
              type: string
        created_at:
          type: string
          format: date-time
        pipelines:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              status:
                type: string
              ref:
                type: string
              sha:
                type: string
              web_url:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              user:
                type: object
                properties:
                  name:
                    type: string
                  avatar_url:
                    type: string
        versions:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              version:
                type: string
              created_at:
                type: string
                format: date-time
              pipelines:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    status:
                      type: string
                    ref:
                      type: string
                    sha:
                      type: string
                    web_url:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                        avatar_url:
                          type: string
    listPackageFilesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          package_id:
            type: integer
          created_at:
            type: string
            format: date-time
          file_name:
            type: string
          size:
            type: integer
          file_md5:
            type: string
          file_sha1:
            type: string
          file_sha256:
            type: string
          pipelines:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                status:
                  type: string
                ref:
                  type: string
                sha:
                  type: string
                web_url:
                  type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    avatar_url:
                      type: string
    listAllDebianDistributionsInAGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/singleDebianProjectDistributionResponse'
    singleDebianGroupDistributionResponse:
      type: object
      properties:
        id:
          type: integer
        codename:
          type: string
        suite:
          type: string
        origin:
          type: string
        label:
          type: string
        version:
          type: string
        description:
          type: string
        valid_time_duration_seconds:
          type: string
        components:
          type: array
          items:
            type: string
        architectures:
          type: array
          items:
            type: string
    createADebianGroupDistributionRequest:
      type: object
      properties:
        codename:
          type: string
        suite:
          type: string
        origin:
          type: string
        label:
          type: string
        version:
          type: string
        description:
          type: string
        valid_time_duration_seconds:
          type: integer
      required:
        - codename
    updateADebianGroupDistributionRequest:
      type: object
      properties:
        suite:
          type: string
        origin:
          type: string
        label:
          type: string
        version:
          type: string
        description:
          type: string
        valid_time_duration_seconds:
          type: integer
    listAllDebianDistributionsInAProjectResponse:
      type: array
      items:
        $ref: '#/components/schemas/singleDebianProjectDistributionResponse'
    singleDebianProjectDistributionResponse:
      type: object
      properties:
        id:
          type: integer
        codename:
          type: string
        suite:
          type: string
        origin:
          type: string
        label:
          type: string
        version:
          type: string
        description:
          type: string
        valid_time_duration_seconds:
          type: string
        components:
          type: array
          items:
            type: string
        architectures:
          type: array
          items:
            type: string
    createADebianProjectDistributionRequest:
      type: object
      properties:
        codename:
          type: string
        suite:
          type: string
        origin:
          type: string
        label:
          type: string
        version:
          type: string
        description:
          type: string
        valid_time_duration_seconds:
          type: integer
      required:
        - codename
    updateADebianProjectDistributionRequest:
      type: object
      properties:
        suite:
          type: string
        origin:
          type: string
        label:
          type: string
        version:
          type: string
        description:
          type: string
        valid_time_duration_seconds:
          type: integer
    listAllPagesDomainsResponse:
      type: array
      items:
        type: object
        properties:
          domain:
            type: string
          url:
            type: string
          project_id:
            type: integer
          auto_ssl_enabled:
            type: boolean
          certificate:
            type: object
            properties:
              expired:
                type: boolean
              expiration:
                type: string
    listPagesDomainsResponse:
      type: array
      items:
        type: object
        properties:
          domain:
            type: string
          url:
            type: string
    singlePagesDomainResponse:
      type: object
      properties:
        domain:
          type: string
        url:
          type: string
        auto_ssl_enabled:
          type: boolean
        certificate:
          type: object
          properties:
            subject:
              type: string
            expired:
              type: boolean
            certificate:
              type: string
            certificate_text:
              type: string
    createNewPagesDomainRequest:
      type: object
      properties:
        domain:
          type: string
        auto_ssl_enabled:
          type: boolean
        certificate:
          oneOf:
            - type: string
              format: binary
            - type: string
        key:
          oneOf:
            - type: string
              format: binary
            - type: string
      required:
        - domain
    updatePagesDomainRequest:
      type: object
      properties:
        auto_ssl_enabled:
          type: boolean
        certificate:
          oneOf:
            - type: string
              format: binary
            - type: string
        key:
          oneOf:
            - type: string
              format: binary
            - type: string
    listPersonalAccessTokensResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          revoked:
            type: boolean
          created_at:
            type: string
            format: date-time
          scopes:
            type: array
            items:
              type: string
          user_id:
            type: integer
          last_used_at:
            type: string
            format: date-time
          active:
            type: boolean
          expires_at:
            type: string
    getAllPipelineSchedulesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
          ref:
            type: string
          cron:
            type: string
          cron_timezone:
            type: string
          next_run_at:
            type: string
            format: date-time
          active:
            type: boolean
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
          owner:
            type: object
            properties:
              name:
                type: string
              username:
                type: string
              id:
                type: integer
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
    getASinglePipelineScheduleResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        ref:
          type: string
        cron:
          type: string
        cron_timezone:
          type: string
        next_run_at:
          type: string
          format: date-time
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_pipeline:
          type: object
          properties:
            id:
              type: integer
            sha:
              type: string
            ref:
              type: string
            status:
              type: string
        owner:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        variables:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              variable_type:
                type: string
              value:
                type: string
    createANewPipelineScheduleRequest:
      type: object
      properties:
        description:
          type: string
        ref:
          type: string
        cron:
          type: string
        cron_timezone:
          type: string
        active:
          type: boolean
      required:
        - description
        - ref
        - cron
    createANewPipelineScheduleResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        ref:
          type: string
        cron:
          type: string
        cron_timezone:
          type: string
        next_run_at:
          type: string
          format: date-time
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_pipeline:
          type: string
        owner:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
    runAScheduledPipelineImmediatelyResponse:
      type: object
      properties:
        message:
          type: string
    createANewPipelineScheduleVariableRequest:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        variable_type:
          type: string
      required:
        - key
        - value
    editAPipelineScheduleVariableRequest:
      type: object
      properties:
        value:
          type: string
        variable_type:
          type: string
      required:
        - value
    deleteAPipelineScheduleVariableResponse:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    listProjectTriggersResponse:
      type: array
      items:
        $ref: '#/components/schemas/getTriggerDetailsResponse'
    getTriggerDetailsResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        created_at:
          type: string
          format: date-time
        last_used:
          type: string
        token:
          type: string
        updated_at:
          type: string
          format: date-time
        owner:
          type: string
    createAProjectTriggerRequest:
      type: object
      properties:
        description:
          type: string
      required:
        - description
    listProjectPipelinesResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          iid:
            type: integer
          project_id:
            type: integer
          status:
            type: string
          source:
            type: string
          ref:
            type: string
          sha:
            type: string
          web_url:
            type: string
          created_at:
            type: string
            format: date-time
          updated_at:
            type: string
            format: date-time
    getASinglePipelineResponse:
      type: object
      properties:
        id:
          type: integer
        iid:
          type: integer
        project_id:
          type: integer
        status:
          type: string
        ref:
          type: string
        sha:
          type: string
        before_sha:
          type: string
        tag:
          type: boolean
        yaml_errors:
          type: string
        user:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        started_at:
          type: string
        finished_at:
          type: string
          format: date-time
        committed_at:
          type: string
        duration:
          type: number
        queued_duration:
          type: number
        coverage:
          type: string
        web_url:
          type: string
    getVariablesOfAPipelineResponse:
      type: array
      items:
        $ref: '#/components/schemas/createANewPipelineScheduleVariableRequest'
    getAPipelineTestReportResponse:
      type: object
      properties:
        total_time:
          type: integer
        total_count:
          type: integer
        success_count:
          type: integer
        failed_count:
          type: integer
        skipped_count:
          type: integer
        error_count:
          type: integer
        test_suites:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              total_time:
                type: integer
              total_count:
                type: integer
              success_count:
                type: integer
              failed_count:
                type: integer
              skipped_count:
                type: integer
              error_count:
                type: integer
              test_cases:
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                    name:
                      type: string
                    classname:
                      type: string
                    execution_time:
                      type: integer
                    system_output:
                      type: string
                    stack_trace:
                      type: string
    getAPipelineTestReportSummaryResponse:
      type: object
      properties:
        total:
          type: object
          properties:
            time:
              type: integer
            count:
              type: integer
            success:
              type: integer
            failed:
              type: integer
            skipped:
              type: integer
            error:
              type: integer
            suite_error:
              type: string
        test_suites:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              total_time:
                type: integer
              total_count:
                type: integer
              success_count:
                type: integer
              failed_count:
                type: integer
              skipped_count:
                type: integer
              error_count:
                type: integer
              build_ids:
                type: array
                items:
                  type: integer
              suite_error:
                type: string
    createANewPipelineRequest:
      type: object
      properties:
        ref:
          type: string
        variables:
          type: array
          items:
            type: string
      required:
        - ref
    getCurrentPlanLimitsResponse:
      type: object
      properties:
        ci_pipeline_size:
          type: integer
        ci_active_jobs:
          type: integer
        ci_active_pipelines:
          type: integer
        ci_project_subscriptions:
          type: integer
        ci_pipeline_schedules:
          type: integer
        ci_needs_size_limit:
          type: integer
        ci_registered_group_runners:
          type: integer
        ci_registered_project_runners:
          type: integer
        conan_max_file_size:
          type: integer
        generic_packages_max_file_size:
          type: integer
        helm_max_file_size:
          type: integer
        maven_max_file_size:
          type: integer
        npm_max_file_size:
          type: integer
        nuget_max_file_size:
          type: integer
        pypi_max_file_size:
          type: integer
        terraform_module_max_file_size:
          type: integer
        storage_size_limit:
          type: integer
    changePlanLimitsRequest:
      type: object
      properties:
        plan_name:
          type: string
        ci_pipeline_size:
          type: integer
        ci_active_jobs:
          type: integer
        ci_active_pipelines:
          type: integer
        ci_project_subscriptions:
          type: integer
        ci_pipeline_schedules:
          type: integer
        ci_needs_size_limit:
          type: integer
        ci_registered_group_runners:
          type: integer
        ci_registered_project_runners:
          type: integer
        conan_max_file_size:
          type: integer
        generic_packages_max_file_size:
          type: integer
        helm_max_file_size:
          type: integer
        maven_max_file_size:
          type: integer
        npm_max_file_size:
          type: integer
        nuget_max_file_size:
          type: integer
        pypi_max_file_size:
          type: integer
        terraform_module_max_file_size:
          type: integer
        storage_size_limit:
          type: integer
      required:
        - plan_name
    changePlanLimitsResponse:
      type: object
      properties:
        ci_pipeline_size:
          type: integer
        ci_active_jobs:
          type: integer
        ci_active_pipelines:
          type: integer
        ci_project_subscriptions:
          type: integer
        ci_pipeline_schedules:
          type: integer
        ci_needs_size_limit:
          type: integer
        ci_registered_group_runners:
          type: integer
        ci_registered_project_runners:
          type: integer
        conan_max_file_size:
          type: integer
        generic_packages_max_file_size:
          type: integer
        helm_max_file_size:
          type: integer
        maven_max_file_size:
          type: integer
        npm_max_file_size:
          type: integer
        nuget_max_file_size:
          type: integer
        pypi_max_file_size:
          type: integer
        terraform_module_max_file_size:
          type: integer
    listProjectAccessTokensResponse:
      type: array
      items:
        $ref: '#/components/schemas/getAGroupAccessTokenResponse'
    getAProjectAccessTokenResponse:
      type: object
      properties:
        user_id:
          type: integer
        scopes:
          type: array
          items:
            type: string
        name:
          type: string
        expires_at:
          type: string
          format: date-time
        id:
          type: integer
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
        revoked:
          type: boolean
        access_level:
          type: integer
        last_used_at:
          type: string
          format: date-time
    createAProjectAccessTokenRequest:
      type: object
      properties:
        name:
          type: string
        scopes:
          type: array
          items:
            type: string
        access_level:
          type: integer
        expires_at:
          type: string
          format: date
      required:
        - name
        - scopes
    createAProjectAccessTokenResponse:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
        active:
          type: boolean
        name:
          type: string
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        user_id:
          type: integer
        id:
          type: integer
        expires_at:
          type: string
          format: date-time
        token:
          type: string
        access_level:
          type: integer
    listAllBadgesOfAProjectResponse:
      type: array
      items:
        $ref: '#/components/schemas/addABadgeToAProjectResponse'
    getABadgeOfAProjectResponse:
      type: object
      properties:
        id:
          type: integer
        link_url:
          type: string
        image_url:
          type: string
        rendered_link_url:
          type: string
        rendered_image_url:
          type: string
        kind:
          type: string
    addABadgeToAProjectRequest:
      type: object
      properties:
        link_url:
          type: string
        image_url:
          type: string
        name:
          type: string
      required:
        - link_url
        - image_url
    addABadgeToAProjectResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        link_url:
          type: string
        image_url:
          type: string
        rendered_link_url:
          type: string
        rendered_image_url:
          type: string
        kind:
          type: string
    previewABadgeFromAProjectResponse:
      type: object
      properties:
        link_url:
          type: string
        image_url:
          type: string
        rendered_link_url:
          type: string
        rendered_image_url:
          type: string
    listProjectClustersResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          domain:
            type: string
          created_at:
            type: string
            format: date-time
          managed:
            type: boolean
          enabled:
            type: boolean
          provider_type:
            type: string
          platform_type:
            type: string
          environment_scope:
            type: string
          cluster_type:
            type: string
          user:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          platform_kubernetes:
            type: object
            properties:
              api_url:
                type: string
              namespace:
                type: string
              authorization_type:
                type: string
              ca_cert:
                type: string
          management_project:
            type: object
            properties:
              id:
                type: integer
              description:
                type: string
              name:
                type: string
              name_with_namespace:
                type: string
              path:
                type: string
              path_with_namespace:
                type: string
              created_at:
                type: string
                format: date-time
    getASingleProjectClusterResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        domain:
          type: string
        created_at:
          type: string
          format: date-time
        managed:
          type: boolean
        enabled:
          type: boolean
        provider_type:
          type: string
        platform_type:
          type: string
        environment_scope:
          type: string
        cluster_type:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        platform_kubernetes:
          type: object
          properties:
            api_url:
              type: string
            namespace:
              type: string
            authorization_type:
              type: string
            ca_cert:
              type: string
        management_project:
          type: object
          properties:
            id:
              type: integer
            description:
              type: string
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
            created_at:
              type: string
              format: date-time
        project:
          type: object
          properties:
            id:
              type: integer
            description:
              type: string
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
            created_at:
              type: string
              format: date-time
            default_branch:
              type: string
            tag_list:
              type: array
              items: {}
            topics:
              type: array
              items: {}
            ssh_url_to_repo:
              type: string
            http_url_to_repo:
              type: string
            web_url:
              type: string
            readme_url:
              type: string
            avatar_url:
              type: string
            star_count:
              type: integer
            forks_count:
              type: integer
            last_activity_at:
              type: string
              format: date-time
            namespace:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                path:
                  type: string
                kind:
                  type: string
                full_path:
                  type: string
                parent_id:
                  type: string
    addExistingClusterToProjectRequest:
      type: object
      properties:
        name:
          type: string
        domain:
          type: string
        management_project_id:
          type: integer
        enabled:
          type: boolean
        managed:
          type: boolean
        'platform_kubernetes_attributes[api_url]':
          type: string
        'platform_kubernetes_attributes[token]':
          type: string
        'platform_kubernetes_attributes[ca_cert]':
          type: string
        'platform_kubernetes_attributes[namespace]':
          type: string
        'platform_kubernetes_attributes[authorization_type]':
          type: string
        environment_scope:
          type: string
      required:
        - name
        - 'platform_kubernetes_attributes[api_url]'
        - 'platform_kubernetes_attributes[token]'
    addExistingClusterToProjectResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        managed:
          type: boolean
        enabled:
          type: boolean
        provider_type:
          type: string
        platform_type:
          type: string
        environment_scope:
          type: string
        cluster_type:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        platform_kubernetes:
          type: object
          properties:
            api_url:
              type: string
            namespace:
              type: string
            authorization_type:
              type: string
            ca_cert:
              type: string
        management_project:
          type: string
        project:
          type: object
          properties:
            id:
              type: integer
            description:
              type: string
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
            created_at:
              type: string
              format: date-time
            default_branch:
              type: string
            tag_list:
              type: array
              items: {}
            topics:
              type: array
              items: {}
            ssh_url_to_repo:
              type: string
            http_url_to_repo:
              type: string
            web_url:
              type: string
            readme_url:
              type: string
            avatar_url:
              type: string
            star_count:
              type: integer
            forks_count:
              type: integer
            last_activity_at:
              type: string
              format: date-time
            namespace:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                path:
                  type: string
                kind:
                  type: string
                full_path:
                  type: string
                parent_id:
                  type: string
    editProjectClusterRequest:
      type: object
      properties:
        name:
          type: string
        domain:
          type: string
        management_project_id:
          type: integer
        enabled:
          type: boolean
        managed:
          type: boolean
        'platform_kubernetes_attributes[api_url]':
          type: string
        'platform_kubernetes_attributes[token]':
          type: string
        'platform_kubernetes_attributes[ca_cert]':
          type: string
        'platform_kubernetes_attributes[namespace]':
          type: string
        environment_scope:
          type: string
    scheduleAnExportRequest:
      type: object
      properties:
        description:
          type: string
        upload:
          type: object
          additionalProperties: true
        'upload[url]':
          type: string
        'upload[http_method]':
          type: string
      required:
        - 'upload[url]'
    scheduleAnExportResponse:
      type: object
      properties:
        message:
          type: string
    exportStatusResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        name:
          type: string
        name_with_namespace:
          type: string
        path:
          type: string
        path_with_namespace:
          type: string
        created_at:
          type: string
          format: date-time
        export_status:
          type: string
        _links:
          type: object
          properties:
            api_url:
              type: string
            web_url:
              type: string
    importAFileRequest:
      type: object
      properties:
        namespace:
          oneOf:
            - type: integer
            - type: string
        name:
          type: string
        file:
          type: string
        path:
          type: string
        overwrite:
          type: boolean
        override_params:
          type: object
          additionalProperties: true
      required:
        - file
        - path
    importAFileResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        name:
          type: string
        name_with_namespace:
          type: string
        path:
          type: string
        path_with_namespace:
          type: string
        created_at:
          type: string
          format: date-time
        import_status:
          type: string
        correlation_id:
          type: string
        failed_relations:
          type: array
          items: {}
    importAFileFromARemoteObjectStorageRequest:
      type: object
      properties:
        namespace:
          oneOf:
            - type: integer
            - type: string
        name:
          type: string
        url:
          type: string
        path:
          type: string
        overwrite:
          type: boolean
        override_params:
          type: object
          additionalProperties: true
      required:
        - url
        - path
    importAFileFromARemoteObjectStorageResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        name:
          type: string
        name_with_namespace:
          type: string
        path:
          type: string
        path_with_namespace:
          type: string
        created_at:
          type: string
          format: date-time
        import_status:
          type: string
        correlation_id:
          type: string
        failed_relations:
          type: array
          items: {}
        import_error:
          type: string
    importAFileFromAwsS3Request:
      type: object
      properties:
        namespace:
          oneOf:
            - type: integer
            - type: string
        name:
          type: string
        path:
          type: string
        region:
          type: string
        bucket_name:
          type: string
        file_key:
          type: string
        access_key_id:
          type: string
        secret_access_key:
          type: string
      required:
        - path
        - region
        - bucket_name
        - file_key
        - access_key_id
        - secret_access_key
    importStatusResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        name:
          type: string
        name_with_namespace:
          type: string
        path:
          type: string
        path_with_namespace:
          type: string
        created_at:
          type: string
          format: date-time
        import_status:
          type: string
        import_type:
          type: string
        correlation_id:
          type: string
        failed_relations:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              created_at:
                type: string
                format: date-time
              exception_class:
                type: string
              exception_message:
                type: string
              source:
                type: string
              relation_name:
                type: string
              line_number:
                type: integer
        stats:
          type: object
          properties:
            fetched:
              type: object
              properties:
                diff_note:
                  type: integer
                issue:
                  type: integer
                label:
                  type: integer
                note:
                  type: integer
                pull_request:
                  type: integer
                pull_request_merged_by:
                  type: integer
                pull_request_review:
                  type: integer
            imported:
              type: object
              properties:
                diff_note:
                  type: integer
                issue:
                  type: integer
                label:
                  type: integer
                note:
                  type: integer
                pull_request:
                  type: integer
                pull_request_merged_by:
                  type: integer
                pull_request_review:
                  type: integer
    listProjectVariablesResponse:
      type: array
      items:
        $ref: '#/components/schemas/showVariableDetailsResponse'
    retrieveAllProjectRepositoryStorageMovesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleProjectRepositoryStorageMoveResponse'
    getASingleProjectRepositoryStorageMoveResponse:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        state:
          type: string
        source_storage_name:
          type: string
        destination_storage_name:
          type: string
        project:
          type: object
          properties:
            id:
              type: integer
            description:
              type: string
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
            created_at:
              type: string
              format: date-time
    scheduleARepositoryStorageMoveForAProjectRequest:
      type: object
      properties:
        destination_storage_name:
          type: string
    scheduleRepositoryStorageMovesForAllProjectsOnAStorageShardRequest:
      type: object
      properties:
        source_storage_name:
          type: string
        destination_storage_name:
          type: string
      required:
        - source_storage_name
    scheduleRepositoryStorageMovesForAllProjectsOnAStorageShardResponse:
      type: object
      properties:
        message:
          type: string
    singleSnippetResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        file_name:
          type: string
        description:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
            name:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        project_id:
          type: integer
        web_url:
          type: string
        raw_url:
          type: string
    createNewSnippetRequest:
      type: object
      properties:
        title:
          type: string
        file_name:
          type: string
        content:
          type: string
        description:
          type: string
        visibility:
          type: string
        files:
          type: array
          items:
            type: string
        'files:file_path':
          type: string
        'files:content':
          type: string
      required:
        - title
        - 'files:file_path'
        - 'files:content'
    createNewSnippetResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        visibility:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
            name:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
        expires_at:
          type: string
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        project_id:
          type: string
        web_url:
          type: string
        raw_url:
          type: string
        ssh_url_to_repo:
          type: string
        http_url_to_repo:
          type: string
        file_name:
          type: string
        files:
          type: array
          items:
            type: object
            properties:
              content:
                type: string
              file_path:
                type: string
    updateSnippetRequest:
      type: object
      properties:
        title:
          type: string
        file_name:
          type: string
        content:
          type: string
        description:
          type: string
        visibility:
          type: string
        files:
          type: array
          items:
            type: string
        'files:action':
          type: string
        'files:file_path':
          type: string
        'files:previous_path':
          type: string
        'files:content':
          type: string
      required:
        - 'files:action'
    getAllTemplatesOfAParticularTypeResponse:
      type: array
      items:
        type: object
        properties:
          key:
            type: string
          name:
            type: string
    getOneTemplateOfAParticularTypeResponse:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        nickname:
          type: string
        popular:
          type: boolean
        html_url:
          type: string
        source_url:
          type: string
        description:
          type: string
        conditions:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            type: string
        limitations:
          type: array
          items:
            type: string
        content:
          type: string
    listProjectVulnerabilitiesResponse:
      type: array
      items:
        $ref: '#/components/schemas/newVulnerabilityResponse'
    newVulnerabilityRequest:
      type: object
      properties:
        finding_id:
          oneOf:
            - type: integer
            - type: string
      required:
        - finding_id
    newVulnerabilityResponse:
      type: object
      properties:
        author_id:
          type: integer
        confidence:
          type: string
        created_at:
          type: string
          format: date-time
        description:
          type: string
        dismissed_at:
          type: string
        dismissed_by_id:
          type: string
        due_date:
          type: string
        finding:
          type: object
          properties:
            confidence:
              type: string
            created_at:
              type: string
              format: date-time
            id:
              type: integer
            location_fingerprint:
              type: string
            metadata_version:
              type: string
            name:
              type: string
            primary_identifier_id:
              type: integer
            project_fingerprint:
              type: string
            project_id:
              type: integer
            raw_metadata:
              type: string
            report_type:
              type: string
            scanner_id:
              type: integer
            severity:
              type: string
            updated_at:
              type: string
              format: date-time
            uuid:
              type: string
            vulnerability_id:
              type: integer
        id:
          type: integer
        last_edited_at:
          type: string
        last_edited_by_id:
          type: string
        project:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
            description:
              type: string
            id:
              type: integer
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
        project_default_branch:
          type: string
        report_type:
          type: string
        resolved_at:
          type: string
        resolved_by_id:
          type: string
        resolved_on_default_branch:
          type: boolean
        severity:
          type: string
        start_date:
          type: string
        state:
          type: string
        title:
          type: string
        updated_at:
          type: string
          format: date-time
        updated_by_id:
          type: string
    listAllProjectsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
          approvals_before_merge:
            type: integer
    listUserProjectsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
          default_branch:
            type: string
          visibility:
            type: string
          ssh_url_to_repo:
            type: string
          http_url_to_repo:
            type: string
          web_url:
            type: string
          readme_url:
            type: string
          tag_list:
            type: array
            items:
              type: string
          topics:
            type: array
            items:
              type: string
          owner:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              created_at:
                type: string
                format: date-time
          name:
            type: string
          name_with_namespace:
            type: string
          path:
            type: string
          path_with_namespace:
            type: string
          issues_enabled:
            type: boolean
          open_issues_count:
            type: integer
          merge_requests_enabled:
            type: boolean
          jobs_enabled:
            type: boolean
          wiki_enabled:
            type: boolean
          snippets_enabled:
            type: boolean
          can_create_merge_request_in:
            type: boolean
          resolve_outdated_diff_discussions:
            type: boolean
          container_registry_enabled:
            type: boolean
          container_registry_access_level:
            type: string
          security_and_compliance_access_level:
            type: string
          created_at:
            type: string
            format: date-time
          last_activity_at:
            type: string
            format: date-time
          creator_id:
            type: integer
          namespace:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              path:
                type: string
              kind:
                type: string
              full_path:
                type: string
          import_status:
            type: string
          archived:
            type: boolean
          avatar_url:
            type: string
          shared_runners_enabled:
            type: boolean
          forks_count:
            type: integer
          star_count:
            type: integer
          runners_token:
            type: string
          ci_default_git_depth:
            type: integer
          ci_forward_deployment_enabled:
            type: boolean
          public_jobs:
            type: boolean
          shared_with_groups:
            type: array
            items: {}
          only_allow_merge_if_pipeline_succeeds:
            type: boolean
          allow_merge_on_skipped_pipeline:
            type: boolean
          restrict_user_defined_variables:
            type: boolean
          only_allow_merge_if_all_discussions_are_resolved:
            type: boolean
          remove_source_branch_after_merge:
            type: boolean
          request_access_enabled:
            type: boolean
          merge_method:
            type: string
          squash_option:
            type: string
          autoclose_referenced_issues:
            type: boolean
          suggestion_commit_message:
            type: string
          merge_commit_template:
            type: string
          squash_commit_template:
            type: string
          marked_for_deletion_at:
            type: string
            format: date-time
          marked_for_deletion_on:
            type: string
          statistics:
            type: object
            properties:
              commit_count:
                type: integer
              storage_size:
                type: integer
              repository_size:
                type: integer
              wiki_size:
                type: integer
              lfs_objects_size:
                type: integer
              job_artifacts_size:
                type: integer
              pipeline_artifacts_size:
                type: integer
              packages_size:
                type: integer
              snippets_size:
                type: integer
              uploads_size:
                type: integer
          container_registry_image_prefix:
            type: string
          _links:
            type: object
            properties:
              self:
                type: string
              issues:
                type: string
              merge_requests:
                type: string
              repo_branches:
                type: string
              labels:
                type: string
              events:
                type: string
              members:
                type: string
              cluster_agents:
                type: string
    listProjectsStarredByAUserResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
          default_branch:
            type: string
          visibility:
            type: string
          ssh_url_to_repo:
            type: string
          http_url_to_repo:
            type: string
          web_url:
            type: string
          readme_url:
            type: string
          tag_list:
            type: array
            items:
              type: string
          topics:
            type: array
            items:
              type: string
          owner:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              created_at:
                type: string
                format: date-time
          name:
            type: string
          name_with_namespace:
            type: string
          path:
            type: string
          path_with_namespace:
            type: string
          issues_enabled:
            type: boolean
          open_issues_count:
            type: integer
          merge_requests_enabled:
            type: boolean
          jobs_enabled:
            type: boolean
          wiki_enabled:
            type: boolean
          snippets_enabled:
            type: boolean
          can_create_merge_request_in:
            type: boolean
          resolve_outdated_diff_discussions:
            type: boolean
          container_registry_enabled:
            type: boolean
          container_registry_access_level:
            type: string
          security_and_compliance_access_level:
            type: string
          created_at:
            type: string
            format: date-time
          last_activity_at:
            type: string
            format: date-time
          creator_id:
            type: integer
          namespace:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              path:
                type: string
              kind:
                type: string
              full_path:
                type: string
          import_status:
            type: string
          archived:
            type: boolean
          avatar_url:
            type: string
          shared_runners_enabled:
            type: boolean
          forks_count:
            type: integer
          star_count:
            type: integer
          runners_token:
            type: string
          public_jobs:
            type: boolean
          shared_with_groups:
            type: array
            items: {}
          only_allow_merge_if_pipeline_succeeds:
            type: boolean
          allow_merge_on_skipped_pipeline:
            type: boolean
          restrict_user_defined_variables:
            type: boolean
          only_allow_merge_if_all_discussions_are_resolved:
            type: boolean
          remove_source_branch_after_merge:
            type: boolean
          request_access_enabled:
            type: boolean
          merge_method:
            type: string
          squash_option:
            type: string
          autoclose_referenced_issues:
            type: boolean
          suggestion_commit_message:
            type: string
          merge_commit_template:
            type: string
          squash_commit_template:
            type: string
          statistics:
            type: object
            properties:
              commit_count:
                type: integer
              storage_size:
                type: integer
              repository_size:
                type: integer
              lfs_objects_size:
                type: integer
              job_artifacts_size:
                type: integer
              pipeline_artifacts_size:
                type: integer
              packages_size:
                type: integer
              snippets_size:
                type: integer
              uploads_size:
                type: integer
          container_registry_image_prefix:
            type: string
          _links:
            type: object
            properties:
              self:
                type: string
              issues:
                type: string
              merge_requests:
                type: string
              repo_branches:
                type: string
              labels:
                type: string
              events:
                type: string
              members:
                type: string
              cluster_agents:
                type: string
    getSingleProjectResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        approvals_before_merge:
          type: integer
        default_branch:
          type: string
        visibility:
          type: string
        ssh_url_to_repo:
          type: string
        http_url_to_repo:
          type: string
        web_url:
          type: string
        readme_url:
          type: string
        tag_list:
          type: array
          items:
            type: string
        topics:
          type: array
          items:
            type: string
        owner:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            created_at:
              type: string
              format: date-time
        name:
          type: string
        name_with_namespace:
          type: string
        path:
          type: string
        path_with_namespace:
          type: string
        issues_enabled:
          type: boolean
        open_issues_count:
          type: integer
        merge_requests_enabled:
          type: boolean
        jobs_enabled:
          type: boolean
        wiki_enabled:
          type: boolean
        snippets_enabled:
          type: boolean
        can_create_merge_request_in:
          type: boolean
        resolve_outdated_diff_discussions:
          type: boolean
        container_registry_enabled:
          type: boolean
        container_registry_access_level:
          type: string
        security_and_compliance_access_level:
          type: string
        container_expiration_policy:
          type: object
          properties:
            cadence:
              type: string
            enabled:
              type: boolean
            keep_n:
              type: string
            older_than:
              type: string
            name_regex:
              type: string
            name_regex_delete:
              type: string
            name_regex_keep:
              type: string
            next_run_at:
              type: string
              format: date-time
        created_at:
          type: string
          format: date-time
        last_activity_at:
          type: string
          format: date-time
        creator_id:
          type: integer
        namespace:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            path:
              type: string
            kind:
              type: string
            full_path:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        import_status:
          type: string
        import_error:
          type: string
        permissions:
          type: object
          properties:
            project_access:
              type: object
              properties:
                access_level:
                  type: integer
                notification_level:
                  type: integer
            group_access:
              type: object
              properties:
                access_level:
                  type: integer
                notification_level:
                  type: integer
        archived:
          type: boolean
        avatar_url:
          type: string
        license_url:
          type: string
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            nickname:
              type: string
            html_url:
              type: string
            source_url:
              type: string
        shared_runners_enabled:
          type: boolean
        forks_count:
          type: integer
        star_count:
          type: integer
        runners_token:
          type: string
        ci_default_git_depth:
          type: integer
        ci_forward_deployment_enabled:
          type: boolean
        public_jobs:
          type: boolean
        shared_with_groups:
          type: array
          items:
            type: object
            properties:
              group_id:
                type: integer
              group_name:
                type: string
              group_full_path:
                type: string
              group_access_level:
                type: integer
        repository_storage:
          type: string
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        allow_merge_on_skipped_pipeline:
          type: boolean
        restrict_user_defined_variables:
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        printing_merge_requests_link_enabled:
          type: boolean
        request_access_enabled:
          type: boolean
        merge_method:
          type: string
        squash_option:
          type: string
        auto_devops_enabled:
          type: boolean
        auto_devops_deploy_strategy:
          type: string
        mirror:
          type: boolean
        mirror_user_id:
          type: integer
        mirror_trigger_builds:
          type: boolean
        only_mirror_protected_branches:
          type: boolean
        mirror_overwrites_diverged_branches:
          type: boolean
        external_authorization_classification_label:
          type: string
        packages_enabled:
          type: boolean
        service_desk_enabled:
          type: boolean
        service_desk_address:
          type: string
        autoclose_referenced_issues:
          type: boolean
        suggestion_commit_message:
          type: string
        merge_commit_template:
          type: string
        squash_commit_template:
          type: string
        marked_for_deletion_at:
          type: string
          format: date-time
        marked_for_deletion_on:
          type: string
        compliance_frameworks:
          type: array
          items:
            type: string
        statistics:
          type: object
          properties:
            commit_count:
              type: integer
            storage_size:
              type: integer
            repository_size:
              type: integer
            wiki_size:
              type: integer
            lfs_objects_size:
              type: integer
            job_artifacts_size:
              type: integer
            pipeline_artifacts_size:
              type: integer
            packages_size:
              type: integer
            snippets_size:
              type: integer
            uploads_size:
              type: integer
        container_registry_image_prefix:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            issues:
              type: string
            merge_requests:
              type: string
            repo_branches:
              type: string
            labels:
              type: string
            events:
              type: string
            members:
              type: string
            cluster_agents:
              type: string
    getProjectUsersResponse:
      type: array
      items:
        $ref: '#/components/schemas/followAndUnfollowUsersResponse'
    listAProjectGroupsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          full_name:
            type: string
          full_path:
            type: string
    createProjectRequest:
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        allow_merge_on_skipped_pipeline:
          type: boolean
        analytics_access_level:
          type: string
        approvals_before_merge:
          type: integer
        auto_cancel_pending_pipelines:
          type: string
        auto_devops_deploy_strategy:
          type: string
        auto_devops_enabled:
          type: boolean
        autoclose_referenced_issues:
          type: boolean
        build_git_strategy:
          type: string
        build_timeout:
          type: integer
        builds_access_level:
          type: string
        ci_config_path:
          type: string
        container_expiration_policy_attributes:
          type: object
          additionalProperties: true
        container_registry_access_level:
          type: string
        container_registry_enabled:
          type: boolean
        default_branch:
          type: string
        description:
          type: string
        emails_disabled:
          type: boolean
        external_authorization_classification_label:
          type: string
        forking_access_level:
          type: string
        group_with_project_templates_id:
          type: integer
        import_url:
          type: string
        initialize_with_readme:
          type: boolean
        issues_access_level:
          type: string
        issues_enabled:
          type: boolean
        jobs_enabled:
          type: boolean
        lfs_enabled:
          type: boolean
        merge_method:
          type: string
        merge_pipelines_enabled:
          type: boolean
        merge_requests_access_level:
          type: string
        merge_requests_enabled:
          type: boolean
        merge_trains_enabled:
          type: boolean
        mirror_trigger_builds:
          type: boolean
        mirror:
          type: boolean
        namespace_id:
          type: integer
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        operations_access_level:
          type: string
        packages_enabled:
          type: boolean
        pages_access_level:
          type: string
        printing_merge_request_link_enabled:
          type: boolean
        public_builds:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        repository_access_level:
          type: string
        repository_storage:
          type: string
        request_access_enabled:
          type: boolean
        requirements_access_level:
          type: string
        resolve_outdated_diff_discussions:
          type: boolean
        security_and_compliance_access_level:
          type: string
        shared_runners_enabled:
          type: boolean
        snippets_access_level:
          type: string
        snippets_enabled:
          type: boolean
        squash_option:
          type: string
        tag_list:
          type: array
          items:
            type: string
        template_name:
          type: string
        template_project_id:
          type: integer
        topics:
          type: array
          items:
            type: string
        use_custom_template:
          type: boolean
        visibility:
          type: string
        wiki_access_level:
          type: string
        wiki_enabled:
          type: boolean
    createProjectForUserRequest:
      type: object
      properties:
        name:
          type: string
        allow_merge_on_skipped_pipeline:
          type: boolean
        analytics_access_level:
          type: string
        approvals_before_merge:
          type: integer
        auto_cancel_pending_pipelines:
          type: string
        auto_devops_deploy_strategy:
          type: string
        auto_devops_enabled:
          type: boolean
        autoclose_referenced_issues:
          type: boolean
        build_git_strategy:
          type: string
        build_timeout:
          type: integer
        builds_access_level:
          type: string
        ci_config_path:
          type: string
        container_registry_access_level:
          type: string
        container_registry_enabled:
          type: boolean
        default_branch:
          type: string
        description:
          type: string
        emails_disabled:
          type: boolean
        external_authorization_classification_label:
          type: string
        forking_access_level:
          type: string
        group_with_project_templates_id:
          type: integer
        import_url:
          type: string
        initialize_with_readme:
          type: boolean
        issues_access_level:
          type: string
        issues_enabled:
          type: boolean
        jobs_enabled:
          type: boolean
        lfs_enabled:
          type: boolean
        merge_commit_template:
          type: string
        merge_method:
          type: string
        merge_requests_access_level:
          type: string
        merge_requests_enabled:
          type: boolean
        mirror_trigger_builds:
          type: boolean
        mirror:
          type: boolean
        namespace_id:
          type: integer
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        operations_access_level:
          type: string
        packages_enabled:
          type: boolean
        pages_access_level:
          type: string
        path:
          type: string
        printing_merge_request_link_enabled:
          type: boolean
        public_builds:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        repository_access_level:
          type: string
        repository_storage:
          type: string
        request_access_enabled:
          type: boolean
        requirements_access_level:
          type: string
        resolve_outdated_diff_discussions:
          type: boolean
        security_and_compliance_access_level:
          type: string
        shared_runners_enabled:
          type: boolean
        snippets_access_level:
          type: string
        snippets_enabled:
          type: boolean
        squash_commit_template:
          type: string
        squash_option:
          type: string
        suggestion_commit_message:
          type: string
        tag_list:
          type: array
          items:
            type: string
        template_name:
          type: string
        topics:
          type: array
          items:
            type: string
        use_custom_template:
          type: boolean
        visibility:
          type: string
        wiki_access_level:
          type: string
        wiki_enabled:
          type: boolean
    editProjectRequest:
      type: object
      properties:
        allow_merge_on_skipped_pipeline:
          type: boolean
        analytics_access_level:
          type: string
        approvals_before_merge:
          type: integer
        auto_cancel_pending_pipelines:
          type: string
        auto_devops_deploy_strategy:
          type: string
        auto_devops_enabled:
          type: boolean
        autoclose_referenced_issues:
          type: boolean
        build_git_strategy:
          type: string
        build_timeout:
          type: integer
        builds_access_level:
          type: string
        ci_config_path:
          type: string
        ci_default_git_depth:
          type: integer
        ci_forward_deployment_enabled:
          type: boolean
        container_expiration_policy_attributes:
          type: object
          additionalProperties: true
        container_registry_access_level:
          type: string
        container_registry_enabled:
          type: boolean
        default_branch:
          type: string
        description:
          type: string
        emails_disabled:
          type: boolean
        external_authorization_classification_label:
          type: string
        forking_access_level:
          type: string
        import_url:
          type: string
        issues_access_level:
          type: string
        issues_enabled:
          type: boolean
        issues_template:
          type: string
        jobs_enabled:
          type: boolean
        keep_latest_artifact:
          type: boolean
        lfs_enabled:
          type: boolean
        merge_commit_template:
          type: string
        merge_method:
          type: string
        merge_pipelines_enabled:
          type: boolean
        merge_requests_access_level:
          type: string
        merge_requests_enabled:
          type: boolean
        merge_requests_template:
          type: string
        merge_trains_enabled:
          type: boolean
        mirror_overwrites_diverged_branches:
          type: boolean
        mirror_trigger_builds:
          type: boolean
        mirror_user_id:
          type: integer
        mirror:
          type: boolean
        mr_default_target_self:
          type: boolean
        name:
          type: string
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        only_mirror_protected_branches:
          type: boolean
        operations_access_level:
          type: string
        packages_enabled:
          type: boolean
        pages_access_level:
          type: string
        path:
          type: string
        printing_merge_request_link_enabled:
          type: boolean
        public_builds:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        repository_access_level:
          type: string
        repository_storage:
          type: string
        request_access_enabled:
          type: boolean
        requirements_access_level:
          type: string
        resolve_outdated_diff_discussions:
          type: boolean
        restrict_user_defined_variables:
          type: boolean
        security_and_compliance_access_level:
          type: string
        service_desk_enabled:
          type: boolean
        shared_runners_enabled:
          type: boolean
        snippets_access_level:
          type: string
        snippets_enabled:
          type: boolean
        squash_commit_template:
          type: string
        squash_option:
          type: string
        suggestion_commit_message:
          type: string
        tag_list:
          type: array
          items:
            type: string
        topics:
          type: array
          items:
            type: string
        visibility:
          type: string
        wiki_access_level:
          type: string
        wiki_enabled:
          type: boolean
    forkProjectRequest:
      type: object
      properties:
        description:
          type: string
        mr_default_target_self:
          type: boolean
        name:
          type: string
        namespace_id:
          type: integer
        namespace_path:
          type: string
        namespace:
          oneOf:
            - type: integer
            - type: string
        path:
          type: string
        visibility:
          type: string
    listForksOfAProjectResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          description:
            type: string
          default_branch:
            type: string
          visibility:
            type: string
          ssh_url_to_repo:
            type: string
          http_url_to_repo:
            type: string
          web_url:
            type: string
          readme_url:
            type: string
          tag_list:
            type: array
            items:
              type: string
          topics:
            type: array
            items:
              type: string
          name:
            type: string
          name_with_namespace:
            type: string
          path:
            type: string
          path_with_namespace:
            type: string
          issues_enabled:
            type: boolean
          open_issues_count:
            type: integer
          merge_requests_enabled:
            type: boolean
          jobs_enabled:
            type: boolean
          wiki_enabled:
            type: boolean
          snippets_enabled:
            type: boolean
          can_create_merge_request_in:
            type: boolean
          resolve_outdated_diff_discussions:
            type: boolean
          container_registry_enabled:
            type: boolean
          container_registry_access_level:
            type: string
          security_and_compliance_access_level:
            type: string
          created_at:
            type: string
            format: date-time
          last_activity_at:
            type: string
            format: date-time
          creator_id:
            type: integer
          namespace:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              path:
                type: string
              kind:
                type: string
              full_path:
                type: string
          import_status:
            type: string
          archived:
            type: boolean
          avatar_url:
            type: string
          shared_runners_enabled:
            type: boolean
          forks_count:
            type: integer
          star_count:
            type: integer
          public_jobs:
            type: boolean
          shared_with_groups:
            type: array
            items: {}
          only_allow_merge_if_pipeline_succeeds:
            type: boolean
          allow_merge_on_skipped_pipeline:
            type: boolean
          restrict_user_defined_variables:
            type: boolean
          only_allow_merge_if_all_discussions_are_resolved:
            type: boolean
          remove_source_branch_after_merge:
            type: boolean
          request_access_enabled:
            type: boolean
          merge_method:
            type: string
          squash_option:
            type: string
          autoclose_referenced_issues:
            type: boolean
          suggestion_commit_message:
            type: string
          merge_commit_template:
            type: string
          container_registry_image_prefix:
            type: string
          _links:
            type: object
            properties:
              self:
                type: string
              issues:
                type: string
              merge_requests:
                type: string
              repo_branches:
                type: string
              labels:
                type: string
              events:
                type: string
              members:
                type: string
              cluster_agents:
                type: string
    starAProjectResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        default_branch:
          type: string
        visibility:
          type: string
        ssh_url_to_repo:
          type: string
        http_url_to_repo:
          type: string
        web_url:
          type: string
        readme_url:
          type: string
        tag_list:
          type: array
          items:
            type: string
        topics:
          type: array
          items:
            type: string
        name:
          type: string
        name_with_namespace:
          type: string
        path:
          type: string
        path_with_namespace:
          type: string
        issues_enabled:
          type: boolean
        open_issues_count:
          type: integer
        merge_requests_enabled:
          type: boolean
        jobs_enabled:
          type: boolean
        wiki_enabled:
          type: boolean
        snippets_enabled:
          type: boolean
        can_create_merge_request_in:
          type: boolean
        resolve_outdated_diff_discussions:
          type: boolean
        container_registry_enabled:
          type: boolean
        container_registry_access_level:
          type: string
        security_and_compliance_access_level:
          type: string
        created_at:
          type: string
          format: date-time
        last_activity_at:
          type: string
          format: date-time
        creator_id:
          type: integer
        namespace:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            path:
              type: string
            kind:
              type: string
            full_path:
              type: string
        import_status:
          type: string
        archived:
          type: boolean
        avatar_url:
          type: string
        license_url:
          type: string
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            nickname:
              type: string
            html_url:
              type: string
            source_url:
              type: string
        shared_runners_enabled:
          type: boolean
        forks_count:
          type: integer
        star_count:
          type: integer
        public_jobs:
          type: boolean
        shared_with_groups:
          type: array
          items: {}
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        allow_merge_on_skipped_pipeline:
          type: boolean
        restrict_user_defined_variables:
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        request_access_enabled:
          type: boolean
        merge_method:
          type: string
        squash_option:
          type: string
        autoclose_referenced_issues:
          type: boolean
        suggestion_commit_message:
          type: string
        merge_commit_template:
          type: string
        container_registry_image_prefix:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            issues:
              type: string
            merge_requests:
              type: string
            repo_branches:
              type: string
            labels:
              type: string
            events:
              type: string
            members:
              type: string
            cluster_agents:
              type: string
    listStarrersOfAProjectResponse:
      type: array
      items:
        type: object
        properties:
          starred_since:
            type: string
          user:
            type: object
            properties:
              id:
                type: integer
              username:
                type: string
              name:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
    languagesResponse:
      type: object
      properties:
        Ruby:
          type: number
        JavaScript:
          type: number
        HTML:
          type: number
        CoffeeScript:
          type: number
    archiveAProjectResponse:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        default_branch:
          type: string
        visibility:
          type: string
        ssh_url_to_repo:
          type: string
        http_url_to_repo:
          type: string
        web_url:
          type: string
        readme_url:
          type: string
        tag_list:
          type: array
          items:
            type: string
        topics:
          type: array
          items:
            type: string
        owner:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            created_at:
              type: string
              format: date-time
        name:
          type: string
        name_with_namespace:
          type: string
        path:
          type: string
        path_with_namespace:
          type: string
        issues_enabled:
          type: boolean
        open_issues_count:
          type: integer
        merge_requests_enabled:
          type: boolean
        jobs_enabled:
          type: boolean
        wiki_enabled:
          type: boolean
        snippets_enabled:
          type: boolean
        can_create_merge_request_in:
          type: boolean
        resolve_outdated_diff_discussions:
          type: boolean
        container_registry_enabled:
          type: boolean
        container_registry_access_level:
          type: string
        security_and_compliance_access_level:
          type: string
        created_at:
          type: string
          format: date-time
        last_activity_at:
          type: string
          format: date-time
        creator_id:
          type: integer
        namespace:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            path:
              type: string
            kind:
              type: string
            full_path:
              type: string
        import_status:
          type: string
        import_error:
          type: string
        permissions:
          type: object
          properties:
            project_access:
              type: object
              properties:
                access_level:
                  type: integer
                notification_level:
                  type: integer
            group_access:
              type: object
              properties:
                access_level:
                  type: integer
                notification_level:
                  type: integer
        archived:
          type: boolean
        avatar_url:
          type: string
        license_url:
          type: string
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            nickname:
              type: string
            html_url:
              type: string
            source_url:
              type: string
        shared_runners_enabled:
          type: boolean
        forks_count:
          type: integer
        star_count:
          type: integer
        runners_token:
          type: string
        ci_default_git_depth:
          type: integer
        ci_forward_deployment_enabled:
          type: boolean
        public_jobs:
          type: boolean
        shared_with_groups:
          type: array
          items: {}
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        allow_merge_on_skipped_pipeline:
          type: boolean
        restrict_user_defined_variables:
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        request_access_enabled:
          type: boolean
        merge_method:
          type: string
        squash_option:
          type: string
        autoclose_referenced_issues:
          type: boolean
        suggestion_commit_message:
          type: string
        merge_commit_template:
          type: string
        container_registry_image_prefix:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            issues:
              type: string
            merge_requests:
              type: string
            repo_branches:
              type: string
            labels:
              type: string
            events:
              type: string
            members:
              type: string
            cluster_agents:
              type: string
    uploadAFileRequest:
      type: object
      properties:
        file:
          type: string
    uploadAFileResponse:
      type: object
      properties:
        alt:
          type: string
        url:
          type: string
        full_path:
          type: string
        markdown:
          type: string
    uploadAProjectAvatarRequest:
      type: object
      properties:
        avatar:
          type: string
    uploadAProjectAvatarResponse:
      type: object
      properties:
        avatar_url:
          type: string
    shareProjectWithGroupRequest:
      type: object
      properties:
        group_access:
          type: integer
        group_id:
          type: integer
        expires_at:
          type: string
    getProjectHookResponse:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        project_id:
          type: integer
        push_events:
          type: boolean
        push_events_branch_filter:
          type: string
        issues_events:
          type: boolean
        confidential_issues_events:
          type: boolean
        merge_requests_events:
          type: boolean
        tag_push_events:
          type: boolean
        note_events:
          type: boolean
        confidential_note_events:
          type: boolean
        job_events:
          type: boolean
        pipeline_events:
          type: boolean
        wiki_page_events:
          type: boolean
        deployment_events:
          type: boolean
        releases_events:
          type: boolean
        enable_ssl_verification:
          type: boolean
        created_at:
          type: string
          format: date-time
    addProjectHookRequest:
      type: object
      properties:
        url:
          type: string
        confidential_issues_events:
          type: boolean
        confidential_note_events:
          type: boolean
        deployment_events:
          type: boolean
        enable_ssl_verification:
          type: boolean
        issues_events:
          type: boolean
        job_events:
          type: boolean
        merge_requests_events:
          type: boolean
        note_events:
          type: boolean
        pipeline_events:
          type: boolean
        push_events_branch_filter:
          type: string
        push_events:
          type: boolean
        releases_events:
          type: boolean
        tag_push_events:
          type: boolean
        token:
          type: string
        wiki_page_events:
          type: boolean
    getProjectPushRulesResponse:
      type: object
      properties:
        id:
          type: integer
        project_id:
          type: integer
        commit_committer_check:
          type: boolean
        reject_unsigned_commits:
          type: boolean
        commit_message_regex:
          type: string
        commit_message_negative_regex:
          type: string
        branch_name_regex:
          type: string
        deny_delete_tag:
          type: boolean
        created_at:
          type: string
          format: date-time
        member_check:
          type: boolean
        prevent_secrets:
          type: boolean
        author_email_regex:
          type: string
        file_name_regex:
          type: string
        max_file_size:
          type: integer
    addProjectPushRuleRequest:
      type: object
      properties:
        author_email_regex:
          type: string
        branch_name_regex:
          type: string
        commit_committer_check:
          type: boolean
        commit_message_negative_regex:
          type: string
        commit_message_regex:
          type: string
        deny_delete_tag:
          type: boolean
        file_name_regex:
          type: string
        max_file_size:
          type: integer
        member_check:
          type: boolean
        prevent_secrets:
          type: boolean
        reject_unsigned_commits:
          type: boolean
    transferAProjectToANewNamespaceRequest:
      type: object
      properties:
        namespace:
          oneOf:
            - type: integer
            - type: string
    transferAProjectToANewNamespaceResponse:
      type: string
    getThePathToRepositoryStorageResponse:
      type: array
      items:
        type: object
        properties:
          project_id:
            type: integer
          disk_path:
            type: string
          created_at:
            type: string
            format: date-time
          repository_storage:
            type: string
    listProtectedBranchesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleProtectedBranchOrWildcardProtectedBranchResponse'
    getASingleProtectedBranchOrWildcardProtectedBranchResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        push_access_levels:
          type: array
          items:
            type: object
            properties:
              access_level:
                type: integer
              access_level_description:
                type: string
        merge_access_levels:
          type: array
          items:
            type: object
            properties:
              access_level:
                type: integer
              access_level_description:
                type: string
        allow_force_push:
          type: boolean
        code_owner_approval_required:
          type: boolean
    protectRepositoryBranchesRequest:
      type: object
      properties:
        name:
          type: string
        push_access_level:
          type: integer
        merge_access_level:
          type: integer
        unprotect_access_level:
          type: integer
        allow_force_push:
          type: boolean
        allowed_to_push:
          type: array
          items:
            type: string
        allowed_to_merge:
          type: array
          items:
            type: string
        allowed_to_unprotect:
          type: array
          items:
            type: string
        code_owner_approval_required:
          type: boolean
      required:
        - name
    protectRepositoryBranchesResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        push_access_levels:
          type: array
          items:
            type: object
            properties:
              access_level:
                type: integer
              access_level_description:
                type: string
        merge_access_levels:
          type: array
          items:
            type: object
            properties:
              access_level:
                type: integer
              access_level_description:
                type: string
        unprotect_access_levels:
          type: array
          items:
            type: object
            properties:
              access_level:
                type: integer
              access_level_description:
                type: string
        allow_force_push:
          type: boolean
        code_owner_approval_required:
          type: boolean
    requireCodeOwnerApprovalsForASingleBranchRequest:
      type: object
      properties:
        code_owner_approval_required:
          type: boolean
    listProtectedEnvironmentsResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleProtectedEnvironmentResponse'
    getASingleProtectedEnvironmentResponse:
      type: object
      properties:
        name:
          type: string
        deploy_access_levels:
          type: array
          items:
            type: object
            properties:
              access_level:
                type: integer
              access_level_description:
                type: string
              user_id:
                type: string
              group_id:
                type: string
              group_inheritance_type:
                type: integer
        required_approval_count:
          type: integer
    protectRepositoryEnvironmentsRequest:
      type: object
      properties:
        name:
          type: string
        deploy_access_levels:
          type: array
          items:
            type: string
        required_approval_count:
          type: integer
        approval_rules:
          type: array
          items:
            type: string
      required:
        - name
        - deploy_access_levels
    listProtectedTagsResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleProtectedTagOrWildcardProtectedTagResponse'
    getASingleProtectedTagOrWildcardProtectedTagResponse:
      type: object
      properties:
        name:
          type: string
        create_access_levels:
          type: array
          items:
            type: object
            properties:
              access_level:
                type: integer
              access_level_description:
                type: string
    protectRepositoryTagsRequest:
      type: object
      properties:
        name:
          type: string
        create_access_level:
          type: string
      required:
        - name
    listReleasesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getAReleaseByATagNameResponse'
    getAReleaseByATagNameResponse:
      type: object
      properties:
        tag_name:
          type: string
        description:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        released_at:
          type: string
          format: date-time
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        commit:
          type: object
          properties:
            id:
              type: string
            short_id:
              type: string
            title:
              type: string
            created_at:
              type: string
              format: date-time
            parent_ids:
              type: array
              items: {}
            message:
              type: string
            author_name:
              type: string
            author_email:
              type: string
            authored_date:
              type: string
            committer_name:
              type: string
            committer_email:
              type: string
            committed_date:
              type: string
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              iid:
                type: integer
              project_id:
                type: integer
              title:
                type: string
              description:
                type: string
              state:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              due_date:
                type: string
              start_date:
                type: string
              web_url:
                type: string
              issue_stats:
                type: object
                properties:
                  total:
                    type: integer
                  closed:
                    type: integer
        commit_path:
          type: string
        tag_path:
          type: string
        assets:
          type: object
          properties:
            count:
              type: integer
            sources:
              type: array
              items:
                type: object
                properties:
                  format:
                    type: string
                  url:
                    type: string
            links:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  url:
                    type: string
                  external:
                    type: boolean
                  link_type:
                    type: string
        evidences:
          type: array
          items:
            type: object
            properties:
              sha:
                type: string
              filepath:
                type: string
              collected_at:
                type: string
                format: date-time
    createAReleaseRequest:
      type: object
      properties:
        name:
          type: string
        tag_name:
          type: string
        description:
          type: string
        ref:
          type: string
        milestones:
          type: array
          items:
            type: string
        'assets:links':
          type: array
          items:
            type: string
        'assets:links:name':
          type: string
        'assets:links:url':
          type: string
        'assets:links:filepath':
          type: string
        'assets:links:link_type':
          type: string
        released_at:
          type: string
          format: date-time
      required:
        - tag_name
    createAReleaseResponse:
      type: object
      properties:
        tag_name:
          type: string
        description:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        released_at:
          type: string
          format: date-time
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        commit:
          type: object
          properties:
            id:
              type: string
            short_id:
              type: string
            title:
              type: string
            created_at:
              type: string
              format: date-time
            parent_ids:
              type: array
              items:
                type: string
            message:
              type: string
            author_name:
              type: string
            author_email:
              type: string
            authored_date:
              type: string
            committer_name:
              type: string
            committer_email:
              type: string
            committed_date:
              type: string
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              iid:
                type: integer
              project_id:
                type: integer
              title:
                type: string
              description:
                type: string
              state:
                type: string
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              due_date:
                type: string
              start_date:
                type: string
              web_url:
                type: string
              issue_stats:
                type: object
                properties:
                  total:
                    type: integer
                  closed:
                    type: integer
        commit_path:
          type: string
        tag_path:
          type: string
        evidence_sha:
          type: string
        assets:
          type: object
          properties:
            count:
              type: integer
            sources:
              type: array
              items:
                type: object
                properties:
                  format:
                    type: string
                  url:
                    type: string
            links:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  url:
                    type: string
                  external:
                    type: boolean
                  link_type:
                    type: string
            evidence_file_path:
              type: string
    collectReleaseEvidenceResponse:
      type: integer
    updateAReleaseRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        milestones:
          type: array
          items:
            type: string
        released_at:
          type: string
          format: date-time
    deleteAReleaseResponse:
      type: object
      properties:
        tag_name:
          type: string
        description:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        released_at:
          type: string
          format: date-time
        author:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            username:
              type: string
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        commit:
          type: object
          properties:
            id:
              type: string
            short_id:
              type: string
            title:
              type: string
            created_at:
              type: string
              format: date-time
            parent_ids:
              type: array
              items: {}
            message:
              type: string
            author_name:
              type: string
            author_email:
              type: string
            authored_date:
              type: string
            committer_name:
              type: string
            committer_email:
              type: string
            committed_date:
              type: string
        commit_path:
          type: string
        tag_path:
          type: string
        evidence_sha:
          type: string
        assets:
          type: object
          properties:
            count:
              type: integer
            sources:
              type: array
              items:
                type: object
                properties:
                  format:
                    type: string
                  url:
                    type: string
            links:
              type: array
              items: {}
            evidence_file_path:
              type: string
    getLinksResponse:
      type: array
      items:
        $ref: '#/components/schemas/getALinkResponse'
    getALinkResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        external:
          type: boolean
        link_type:
          type: string
    createALinkRequest:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        filepath:
          type: string
        link_type:
          type: string
      required:
        - name
        - url
    createALinkResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        direct_asset_url:
          type: string
        external:
          type: boolean
        link_type:
          type: string
    listAProjectRemoteMirrorsResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleProjectRemoteMirrorResponse'
    getASingleProjectRemoteMirrorResponse:
      type: object
      properties:
        enabled:
          type: boolean
        id:
          type: integer
        last_error:
          type: string
        last_successful_update_at:
          type: string
          format: date-time
        last_update_at:
          type: string
          format: date-time
        last_update_started_at:
          type: string
          format: date-time
        only_protected_branches:
          type: boolean
        keep_divergent_refs:
          type: boolean
        update_status:
          type: string
        url:
          type: string
    createAPushMirrorRequest:
      type: object
      properties:
        url:
          type: string
        enabled:
          type: boolean
        only_protected_branches:
          type: boolean
        keep_divergent_refs:
          type: boolean
      required:
        - url
    updateARemoteMirrorAttributesRequest:
      type: object
      properties:
        enabled:
          type: boolean
        only_protected_branches:
          type: boolean
        keep_divergent_refs:
          type: boolean
    listRepositoryTreeResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          type:
            type: string
          path:
            type: string
          mode:
            type: string
    compareBranchesTagsOrCommitsResponse:
      type: object
      properties:
        commit:
          type: object
          properties:
            id:
              type: string
            short_id:
              type: string
            title:
              type: string
            author_name:
              type: string
            author_email:
              type: string
            created_at:
              type: string
              format: date-time
        commits:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              short_id:
                type: string
              title:
                type: string
              author_name:
                type: string
              author_email:
                type: string
              created_at:
                type: string
                format: date-time
        diffs:
          type: array
          items:
            type: object
            properties:
              old_path:
                type: string
              new_path:
                type: string
              a_mode:
                type: string
              b_mode:
                type: string
              diff:
                type: string
              new_file:
                type: boolean
              renamed_file:
                type: boolean
              deleted_file:
                type: boolean
        compare_timeout:
          type: boolean
        compare_same_ref:
          type: boolean
        web_url:
          type: string
    contributorsResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
          commits:
            type: integer
          additions:
            type: integer
          deletions:
            type: integer
    mergeBaseResponse:
      type: object
      properties:
        id:
          type: string
        short_id:
          type: string
        title:
          type: string
        created_at:
          type: string
          format: date-time
        parent_ids:
          type: array
          items: {}
        message:
          type: string
        author_name:
          type: string
        author_email:
          type: string
        authored_date:
          type: string
        committer_name:
          type: string
        committer_email:
          type: string
        committed_date:
          type: string
    addChangelogDataToAChangelogFileRequest:
      type: object
      properties:
        version:
          type: string
        from:
          type: string
        to:
          type: string
        date:
          type: string
          format: date-time
        branch:
          type: string
        trailer:
          type: string
        file:
          type: string
        message:
          type: string
      required:
        - version
    generateChangelogDataResponse:
      type: object
      properties:
        notes:
          type: string
    getFileFromRepositoryResponse:
      type: object
      properties:
        file_name:
          type: string
        file_path:
          type: string
        size:
          type: integer
        encoding:
          type: string
        content:
          type: string
        content_sha256:
          type: string
        ref:
          type: string
        blob_id:
          type: string
        commit_id:
          type: string
        last_commit_id:
          type: string
        execute_filemode:
          type: boolean
    getFileBlameFromRepositoryResponse:
      type: array
      items:
        type: object
        properties:
          commit:
            type: object
            properties:
              id:
                type: string
              message:
                type: string
              parent_ids:
                type: array
                items:
                  type: string
              authored_date:
                type: string
              author_name:
                type: string
              author_email:
                type: string
              committed_date:
                type: string
              committer_name:
                type: string
              committer_email:
                type: string
          lines:
            type: array
            items:
              type: string
    createNewFileInRepositoryRequest:
      type: object
      properties:
        branch:
          type: string
        start_branch:
          type: string
        encoding:
          type: string
        author_email:
          type: string
        author_name:
          type: string
        content:
          type: string
        commit_message:
          type: string
        execute_filemode:
          type: boolean
      required:
        - branch
        - content
        - commit_message
    createNewFileInRepositoryResponse:
      type: object
      properties:
        file_path:
          type: string
        branch:
          type: string
    updateExistingFileInRepositoryRequest:
      type: object
      properties:
        branch:
          type: string
        start_branch:
          type: string
        encoding:
          type: string
        author_email:
          type: string
        author_name:
          type: string
        content:
          type: string
        commit_message:
          type: string
        last_commit_id:
          type: string
        execute_filemode:
          type: boolean
      required:
        - branch
        - content
        - commit_message
    updateExistingSubmoduleReferenceInRepositoryRequest:
      type: object
      properties:
        branch:
          type: string
        commit_sha:
          type: string
        commit_message:
          type: string
      required:
        - branch
        - commit_sha
    updateExistingSubmoduleReferenceInRepositoryResponse:
      type: object
      properties:
        id:
          type: string
        short_id:
          type: string
        title:
          type: string
        author_name:
          type: string
        author_email:
          type: string
        committer_name:
          type: string
        committer_email:
          type: string
        created_at:
          type: string
          format: date-time
        message:
          type: string
        parent_ids:
          type: array
          items:
            type: string
        committed_date:
          type: string
        authored_date:
          type: string
        status:
          type: string
    listProjectIssueLabelEventsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          user:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          created_at:
            type: string
            format: date-time
          resource_type:
            type: string
          resource_id:
            type: integer
          label:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              color:
                type: string
              description:
                type: string
          action:
            type: string
    listOwnedRunnersResponse:
      type: array
      items:
        type: object
        properties:
          active:
            type: boolean
          paused:
            type: boolean
          description:
            type: string
          id:
            type: integer
          ip_address:
            type: string
          is_shared:
            type: boolean
          runner_type:
            type: string
          name:
            type: string
          online:
            type: boolean
          status:
            type: string
    getRunnerDetailsResponse:
      type: object
      properties:
        active:
          type: boolean
        paused:
          type: boolean
        architecture:
          type: string
        description:
          type: string
        id:
          type: integer
        ip_address:
          type: string
        is_shared:
          type: boolean
        runner_type:
          type: string
        contacted_at:
          type: string
          format: date-time
        name:
          type: string
        online:
          type: boolean
        status:
          type: string
        platform:
          type: string
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              name_with_namespace:
                type: string
              path:
                type: string
              path_with_namespace:
                type: string
        revision:
          type: string
        tag_list:
          type: array
          items:
            type: string
        version:
          type: string
        access_level:
          type: string
        maximum_timeout:
          type: integer
    updateRunnerDetailsRequest:
      type: object
      properties:
        description:
          type: string
        active:
          type: boolean
        paused:
          type: boolean
        tag_list:
          type: array
          items:
            type: string
        run_untagged:
          type: boolean
        locked:
          type: boolean
        access_level:
          type: string
        maximum_timeout:
          type: integer
    updateRunnerDetailsResponse:
      type: object
      properties:
        active:
          type: boolean
        architecture:
          type: string
        description:
          type: string
        id:
          type: integer
        ip_address:
          type: string
        is_shared:
          type: boolean
        runner_type:
          type: string
        contacted_at:
          type: string
          format: date-time
        name:
          type: string
        online:
          type: boolean
        status:
          type: string
        platform:
          type: string
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              name_with_namespace:
                type: string
              path:
                type: string
              path_with_namespace:
                type: string
        revision:
          type: string
        tag_list:
          type: array
          items:
            type: string
        version:
          type: string
        access_level:
          type: string
        maximum_timeout:
          type: string
    listRunnerJobsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          ip_address:
            type: string
          status:
            type: string
          stage:
            type: string
          name:
            type: string
          ref:
            type: string
          tag:
            type: boolean
          coverage:
            type: string
          created_at:
            type: string
            format: date-time
          started_at:
            type: string
            format: date-time
          finished_at:
            type: string
            format: date-time
          duration:
            type: integer
          user:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
              created_at:
                type: string
                format: date-time
              bio:
                type: string
              location:
                type: string
              public_email:
                type: string
              skype:
                type: string
              linkedin:
                type: string
              twitter:
                type: string
              website_url:
                type: string
              organization:
                type: string
          commit:
            type: object
            properties:
              id:
                type: string
              short_id:
                type: string
              title:
                type: string
              created_at:
                type: string
                format: date-time
              parent_ids:
                type: array
                items:
                  type: string
              message:
                type: string
              author_name:
                type: string
              author_email:
                type: string
              authored_date:
                type: string
              committer_name:
                type: string
              committer_email:
                type: string
              committed_date:
                type: string
          pipeline:
            type: object
            properties:
              id:
                type: integer
              sha:
                type: string
              ref:
                type: string
              status:
                type: string
          project:
            type: object
            properties:
              id:
                type: integer
              description:
                type: string
              name:
                type: string
              name_with_namespace:
                type: string
              path:
                type: string
              path_with_namespace:
                type: string
              created_at:
                type: string
                format: date-time
    enableARunnerInProjectRequest:
      type: object
      properties:
        runner_id:
          type: integer
      required:
        - runner_id
    enableARunnerInProjectResponse:
      type: object
      properties:
        active:
          type: boolean
        description:
          type: string
        id:
          type: integer
        ip_address:
          type: string
        is_shared:
          type: boolean
        runner_type:
          type: string
        name:
          type: string
        online:
          type: boolean
        status:
          type: string
    registerANewRunnerRequest:
      type: object
      properties:
        token:
          type: string
        description:
          type: string
        info:
          type: object
          additionalProperties: true
        active:
          type: boolean
        paused:
          type: boolean
        locked:
          type: boolean
        run_untagged:
          type: boolean
        tag_list:
          type: array
          items:
            type: string
        access_level:
          type: string
        maximum_timeout:
          type: integer
        maintainer_note:
          type: string
        maintenance_note:
          type: string
      required:
        - token
    registerANewRunnerResponse:
      type: object
      properties:
        id:
          type: integer
        token:
          type: string
        token_expires_at:
          type: string
          format: date-time
    verifyAuthenticationForARegisteredRunnerRequest:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    resetRunnerAuthenticationTokenByUsingTheRunnerIdResponse:
      type: object
      properties:
        token:
          type: string
        token_expires_at:
          type: string
          format: date-time
    getCurrentApplicationSettingsResponse:
      type: object
      properties:
        id:
          type: integer
        signup_enabled:
          type: boolean
        file_template_project_id:
          type: integer
        geo_node_allowed_ips:
          type: string
        delayed_project_deletion:
          type: boolean
        delayed_group_deletion:
          type: boolean
        deletion_adjourned_period:
          type: integer
        default_projects_limit:
          type: integer
        default_branch_protection:
          type: integer
        restricted_visibility_levels:
          type: array
          items: {}
        password_authentication_enabled_for_web:
          type: boolean
        after_sign_out_path:
          type: string
        max_attachment_size:
          type: integer
        max_export_size:
          type: integer
        max_import_size:
          type: integer
        user_oauth_applications:
          type: boolean
        updated_at:
          type: string
          format: date-time
        session_expire_delay:
          type: integer
        home_page_url:
          type: string
        default_snippet_visibility:
          type: string
        outbound_local_requests_whitelist:
          type: array
          items: {}
        domain_allowlist:
          type: array
          items: {}
        domain_denylist_enabled:
          type: boolean
        domain_denylist:
          type: array
          items: {}
        created_at:
          type: string
          format: date-time
        default_ci_config_path:
          type: string
        default_project_visibility:
          type: string
        default_group_visibility:
          type: string
        gravatar_enabled:
          type: boolean
        sign_in_text:
          type: string
        container_expiration_policies_enable_historic_entries:
          type: boolean
        container_registry_cleanup_tags_service_max_list_size:
          type: integer
        container_registry_delete_tags_service_timeout:
          type: integer
        container_registry_expiration_policies_caching:
          type: boolean
        container_registry_expiration_policies_worker_capacity:
          type: integer
        container_registry_token_expire_delay:
          type: integer
        repository_storages_weighted:
          type: object
          properties:
            default:
              type: integer
        plantuml_enabled:
          type: boolean
        plantuml_url:
          type: string
        kroki_enabled:
          type: boolean
        kroki_url:
          type: string
        terminal_max_session_time:
          type: integer
        polling_interval_multiplier:
          type: integer
        rsa_key_restriction:
          type: integer
        dsa_key_restriction:
          type: integer
        ecdsa_key_restriction:
          type: integer
        ed25519_key_restriction:
          type: integer
        ecdsa_sk_key_restriction:
          type: integer
        ed25519_sk_key_restriction:
          type: integer
        first_day_of_week:
          type: integer
        enforce_terms:
          type: boolean
        terms:
          type: string
        performance_bar_allowed_group_id:
          type: integer
        user_show_add_ssh_key_message:
          type: boolean
        local_markdown_version:
          type: integer
        allow_local_requests_from_hooks_and_services:
          type: boolean
        allow_local_requests_from_web_hooks_and_services:
          type: boolean
        allow_local_requests_from_system_hooks:
          type: boolean
        asset_proxy_enabled:
          type: boolean
        asset_proxy_url:
          type: string
        asset_proxy_whitelist:
          type: array
          items:
            type: string
        asset_proxy_allowlist:
          type: array
          items:
            type: string
        npm_package_requests_forwarding:
          type: boolean
        pypi_package_requests_forwarding:
          type: boolean
        snippet_size_limit:
          type: integer
        issues_create_limit:
          type: integer
        raw_blob_request_limit:
          type: integer
        wiki_page_max_content_bytes:
          type: integer
        require_admin_approval_after_user_signup:
          type: boolean
        personal_access_token_prefix:
          type: string
        rate_limiting_response_text:
          type: string
        keep_latest_artifact:
          type: boolean
        admin_mode:
          type: boolean
        floc_enabled:
          type: boolean
        external_pipeline_validation_service_timeout:
          type: string
        external_pipeline_validation_service_token:
          type: string
        external_pipeline_validation_service_url:
          type: string
    changeApplicationSettingsResponse:
      type: object
      properties:
        id:
          type: integer
        default_projects_limit:
          type: integer
        signup_enabled:
          type: boolean
        password_authentication_enabled_for_web:
          type: boolean
        gravatar_enabled:
          type: boolean
        sign_in_text:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        home_page_url:
          type: string
        default_branch_protection:
          type: integer
        restricted_visibility_levels:
          type: array
          items: {}
        max_attachment_size:
          type: integer
        max_export_size:
          type: integer
        max_import_size:
          type: integer
        session_expire_delay:
          type: integer
        default_ci_config_path:
          type: string
        default_project_visibility:
          type: string
        default_snippet_visibility:
          type: string
        default_group_visibility:
          type: string
        outbound_local_requests_whitelist:
          type: array
          items: {}
        domain_allowlist:
          type: array
          items: {}
        domain_denylist_enabled:
          type: boolean
        domain_denylist:
          type: array
          items: {}
        external_authorization_service_enabled:
          type: boolean
        external_authorization_service_url:
          type: string
        external_authorization_service_default_label:
          type: string
        external_authorization_service_timeout:
          type: number
        user_oauth_applications:
          type: boolean
        after_sign_out_path:
          type: string
        container_expiration_policies_enable_historic_entries:
          type: boolean
        container_registry_cleanup_tags_service_max_list_size:
          type: integer
        container_registry_delete_tags_service_timeout:
          type: integer
        container_registry_expiration_policies_caching:
          type: boolean
        container_registry_expiration_policies_worker_capacity:
          type: integer
        container_registry_token_expire_delay:
          type: integer
        repository_storages:
          type: array
          items:
            type: string
        plantuml_enabled:
          type: boolean
        plantuml_url:
          type: string
        terminal_max_session_time:
          type: integer
        polling_interval_multiplier:
          type: integer
        rsa_key_restriction:
          type: integer
        dsa_key_restriction:
          type: integer
        ecdsa_key_restriction:
          type: integer
        ed25519_key_restriction:
          type: integer
        ecdsa_sk_key_restriction:
          type: integer
        ed25519_sk_key_restriction:
          type: integer
        first_day_of_week:
          type: integer
        enforce_terms:
          type: boolean
        terms:
          type: string
        performance_bar_allowed_group_id:
          type: integer
        user_show_add_ssh_key_message:
          type: boolean
        file_template_project_id:
          type: integer
        local_markdown_version:
          type: integer
        asset_proxy_enabled:
          type: boolean
        asset_proxy_url:
          type: string
        asset_proxy_allowlist:
          type: array
          items:
            type: string
        geo_node_allowed_ips:
          type: string
        allow_local_requests_from_hooks_and_services:
          type: boolean
        allow_local_requests_from_web_hooks_and_services:
          type: boolean
        allow_local_requests_from_system_hooks:
          type: boolean
        npm_package_requests_forwarding:
          type: boolean
        pypi_package_requests_forwarding:
          type: boolean
        snippet_size_limit:
          type: integer
        issues_create_limit:
          type: integer
        raw_blob_request_limit:
          type: integer
        wiki_page_max_content_bytes:
          type: integer
        require_admin_approval_after_user_signup:
          type: boolean
        personal_access_token_prefix:
          type: string
        rate_limiting_response_text:
          type: string
        keep_latest_artifact:
          type: boolean
        admin_mode:
          type: boolean
        external_pipeline_validation_service_timeout:
          type: string
        external_pipeline_validation_service_token:
          type: string
        external_pipeline_validation_service_url:
          type: string
    getTheCurrentQueueMetricsResponse:
      type: object
      properties:
        queues:
          type: object
          properties:
            default:
              type: object
              properties:
                backlog:
                  type: integer
                latency:
                  type: integer
    getTheCurrentProcessMetricsResponse:
      type: object
      properties:
        processes:
          type: array
          items:
            type: object
            properties:
              hostname:
                type: string
              pid:
                type: integer
              tag:
                type: string
              started_at:
                type: string
                format: date-time
              queues:
                type: array
                items:
                  type: string
              labels:
                type: array
                items: {}
              concurrency:
                type: integer
              busy:
                type: integer
    getTheCurrentJobStatisticsResponse:
      type: object
      properties:
        jobs:
          type: object
          properties:
            processed:
              type: integer
            failed:
              type: integer
            enqueued:
              type: integer
            dead:
              type: integer
    getACompoundResponseOfAllThePreviouslyMentionedMetricsResponse:
      type: object
      properties:
        queues:
          type: object
          properties:
            default:
              type: object
              properties:
                backlog:
                  type: integer
                latency:
                  type: integer
        processes:
          type: array
          items:
            type: object
            properties:
              hostname:
                type: string
              pid:
                type: integer
              tag:
                type: string
              started_at:
                type: string
                format: date-time
              queues:
                type: array
                items:
                  type: string
              labels:
                type: array
                items: {}
              concurrency:
                type: integer
              busy:
                type: integer
        jobs:
          type: object
          properties:
            processed:
              type: integer
            failed:
              type: integer
            enqueued:
              type: integer
            dead:
              type: integer
    retrieveAllSnippetRepositoryStorageMovesResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleSnippetRepositoryStorageMoveResponse'
    getASingleSnippetRepositoryStorageMoveResponse:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        state:
          type: string
        source_storage_name:
          type: string
        destination_storage_name:
          type: string
        snippet:
          type: object
          properties:
            id:
              type: integer
            title:
              type: string
            description:
              type: string
            visibility:
              type: string
            updated_at:
              type: string
              format: date-time
            created_at:
              type: string
              format: date-time
            project_id:
              type: string
            web_url:
              type: string
            raw_url:
              type: string
            ssh_url_to_repo:
              type: string
            http_url_to_repo:
              type: string
    scheduleARepositoryStorageMoveForASnippetRequest:
      type: object
      properties:
        destination_storage_name:
          type: string
    scheduleRepositoryStorageMovesForAllSnippetsOnAStorageShardRequest:
      type: object
      properties:
        source_storage_name:
          type: string
        destination_storage_name:
          type: string
      required:
        - source_storage_name
    scheduleRepositoryStorageMovesForAllSnippetsOnAStorageShardResponse:
      type: object
      properties:
        message:
          type: string
    listAllSnippetsForAUserResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          file_name:
            type: string
          description:
            type: string
          visibility:
            type: string
          author:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              username:
                type: string
              state:
                type: string
              avatar_url:
                type: string
              web_url:
                type: string
          updated_at:
            type: string
            format: date-time
          created_at:
            type: string
            format: date-time
          project_id:
            type: string
          web_url:
            type: string
          raw_url:
            type: string
    getASingleSnippetResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        file_name:
          type: string
        description:
          type: string
        visibility:
          type: string
        author:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            email:
              type: string
            name:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
        expires_at:
          type: string
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        project_id:
          type: string
        web_url:
          type: string
        raw_url:
          type: string
    listAllPublicSnippetsResponse:
      type: array
      items:
        type: object
        properties:
          author:
            type: object
            properties:
              avatar_url:
                type: string
              id:
                type: integer
              name:
                type: string
              state:
                type: string
              username:
                type: string
              web_url:
                type: string
          created_at:
            type: string
            format: date-time
          file_name:
            type: string
          id:
            type: integer
          title:
            type: string
          updated_at:
            type: string
            format: date-time
          project_id:
            type: string
          web_url:
            type: string
          raw_url:
            type: string
    getCurrentApplicationStatisticsResponse:
      type: object
      properties:
        forks:
          type: string
        issues:
          type: string
        merge_requests:
          type: string
        notes:
          type: string
        snippets:
          type: string
        ssh_keys:
          type: string
        milestones:
          type: string
        users:
          type: string
        groups:
          type: string
        projects:
          type: string
        active_users:
          type: string
    applyingSuggestionsRequest:
      type: object
      properties:
        commit_message:
          type: string
    applyingSuggestionsResponse:
      type: object
      properties:
        id:
          type: integer
        from_line:
          type: integer
        to_line:
          type: integer
        appliable:
          type: boolean
        applied:
          type: boolean
        from_content:
          type: string
        to_content:
          type: string
    listSystemHooksResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          url:
            type: string
          created_at:
            type: string
            format: date-time
          push_events:
            type: boolean
          tag_push_events:
            type: boolean
          merge_requests_events:
            type: boolean
          repository_update_events:
            type: boolean
          enable_ssl_verification:
            type: boolean
    addNewSystemHookRequest:
      type: object
      properties:
        url:
          type: string
        token:
          type: string
        push_events:
          type: boolean
        tag_push_events:
          type: boolean
        merge_requests_events:
          type: boolean
        repository_update_events:
          type: boolean
        enable_ssl_verification:
          type: boolean
      required:
        - url
    testSystemHookResponse:
      type: object
      properties:
        project_id:
          type: integer
        owner_email:
          type: string
        owner_name:
          type: string
        name:
          type: string
        path:
          type: string
        event_name:
          type: string
    listProjectRepositoryTagsResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASingleRepositoryTagResponse'
    getASingleRepositoryTagResponse:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
        target:
          type: string
        commit:
          type: object
          properties:
            id:
              type: string
            short_id:
              type: string
            title:
              type: string
            created_at:
              type: string
              format: date-time
            parent_ids:
              type: array
              items:
                type: string
            message:
              type: string
            author_name:
              type: string
            author_email:
              type: string
            authored_date:
              type: string
            committer_name:
              type: string
            committer_email:
              type: string
            committed_date:
              type: string
        release:
          type: string
        protected:
          type: boolean
    createANewTagRequest:
      type: object
      properties:
        tag_name:
          type: string
        ref:
          type: string
        message:
          type: string
      required:
        - tag_name
        - ref
    getAListOfToDoItemsResponse:
      type: array
      items:
        $ref: '#/components/schemas/markAToDoItemAsDoneResponse'
    markAToDoItemAsDoneResponse:
      type: object
      properties:
        id:
          type: integer
        project:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            name_with_namespace:
              type: string
            path:
              type: string
            path_with_namespace:
              type: string
        author:
          type: object
          properties:
            name:
              type: string
            username:
              type: string
            id:
              type: integer
            state:
              type: string
            avatar_url:
              type: string
            web_url:
              type: string
        action_name:
          type: string
        target_type:
          type: string
        target:
          type: object
          properties:
            id:
              type: integer
            iid:
              type: integer
            project_id:
              type: integer
            title:
              type: string
            description:
              type: string
            state:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            target_branch:
              type: string
            source_branch:
              type: string
            upvotes:
              type: integer
            downvotes:
              type: integer
            author:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                id:
                  type: integer
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            assignee:
              type: object
              properties:
                name:
                  type: string
                username:
                  type: string
                id:
                  type: integer
                state:
                  type: string
                avatar_url:
                  type: string
                web_url:
                  type: string
            source_project_id:
              type: integer
            target_project_id:
              type: integer
            labels:
              type: array
              items: {}
            draft:
              type: boolean
            work_in_progress:
              type: boolean
            milestone:
              type: object
              properties:
                id:
                  type: integer
                iid:
                  type: integer
                project_id:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                state:
                  type: string
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                due_date:
                  type: string
            merge_when_pipeline_succeeds:
              type: boolean
            merge_status:
              type: string
            subscribed:
              type: boolean
            user_notes_count:
              type: integer
        target_url:
          type: string
        body:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    listTopicsResponse:
      type: array
      items:
        $ref: '#/components/schemas/getATopicResponse'
    getATopicResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        title:
          type: string
        description:
          type: string
        total_projects_count:
          type: integer
        avatar_url:
          type: string
    createAProjectTopicRequest:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        avatar:
          type: string
          format: binary
        description:
          type: string
    exportServicePingSqlQueriesResponse:
      type: string
    forNormalUsersResponse:
      type: array
      items:
        $ref: '#/components/schemas/followAndUnfollowUsersResponse'
    forAdministratorsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          username:
            type: string
          email:
            type: string
          name:
            type: string
          state:
            type: string
          avatar_url:
            type: string
          web_url:
            type: string
          created_at:
            type: string
            format: date-time
          is_admin:
            type: boolean
          bio:
            type: string
          location:
            type: string
          skype:
            type: string
          linkedin:
            type: string
          twitter:
            type: string
          website_url:
            type: string
          organization:
            type: string
          job_title:
            type: string
          last_sign_in_at:
            type: string
            format: date-time
          confirmed_at:
            type: string
            format: date-time
          theme_id:
            type: integer
          last_activity_on:
            type: string
          color_scheme_id:
            type: integer
          projects_limit:
            type: integer
          current_sign_in_at:
            type: string
            format: date-time
          note:
            type: string
          identities:
            type: array
            items:
              type: object
              properties:
                provider:
                  type: string
                extern_uid:
                  type: string
          can_create_group:
            type: boolean
          can_create_project:
            type: boolean
          two_factor_enabled:
            type: boolean
          external:
            type: boolean
          private_profile:
            type: boolean
          current_sign_in_ip:
            type: string
          last_sign_in_ip:
            type: string
          namespace_id:
            type: integer
    forUserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        created_at:
          type: string
          format: date-time
        bio:
          type: string
        bot:
          type: boolean
        location:
          type: string
        public_email:
          type: string
        skype:
          type: string
        linkedin:
          type: string
        twitter:
          type: string
        website_url:
          type: string
        organization:
          type: string
        job_title:
          type: string
        pronouns:
          type: string
        work_information:
          type: string
        followers:
          type: integer
        following:
          type: integer
        local_time:
          type: string
        is_followed:
          type: boolean
    forAdministratorResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        shared_runners_minutes_limit:
          type: integer
        extra_shared_runners_minutes_limit:
          type: integer
        identities:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              extern_uid:
                type: string
        provisioned_by_group_id:
          type: integer
        is_auditor:
          type: boolean
        email:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        created_at:
          type: string
          format: date-time
        is_admin:
          type: boolean
        bio:
          type: string
        location:
          type: string
        public_email:
          type: string
        skype:
          type: string
        linkedin:
          type: string
        twitter:
          type: string
        website_url:
          type: string
        organization:
          type: string
        job_title:
          type: string
        pronouns:
          type: string
        work_information:
          type: string
        followers:
          type: integer
        following:
          type: integer
        local_time:
          type: string
        last_sign_in_at:
          type: string
          format: date-time
        confirmed_at:
          type: string
          format: date-time
        theme_id:
          type: integer
        last_activity_on:
          type: string
        color_scheme_id:
          type: integer
        projects_limit:
          type: integer
        current_sign_in_at:
          type: string
          format: date-time
        note:
          type: string
        can_create_group:
          type: boolean
        can_create_project:
          type: boolean
        two_factor_enabled:
          type: boolean
        external:
          type: boolean
        private_profile:
          type: boolean
        commit_email:
          type: string
        current_sign_in_ip:
          type: string
        last_sign_in_ip:
          type: string
        plan:
          type: string
        trial:
          type: boolean
        sign_in_count:
          type: integer
        namespace_id:
          type: integer
    userCreationRequest:
      type: object
      properties: {}
    listCurrentUserForNormalUsersResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        created_at:
          type: string
          format: date-time
        bio:
          type: string
        location:
          type: string
        public_email:
          type: string
        skype:
          type: string
        linkedin:
          type: string
        twitter:
          type: string
        website_url:
          type: string
        organization:
          type: string
        job_title:
          type: string
        pronouns:
          type: string
        bot:
          type: boolean
        work_information:
          type: string
        followers:
          type: integer
        following:
          type: integer
        local_time:
          type: string
        last_sign_in_at:
          type: string
          format: date-time
        confirmed_at:
          type: string
          format: date-time
        theme_id:
          type: integer
        last_activity_on:
          type: string
        color_scheme_id:
          type: integer
        projects_limit:
          type: integer
        current_sign_in_at:
          type: string
          format: date-time
        identities:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              extern_uid:
                type: string
        can_create_group:
          type: boolean
        can_create_project:
          type: boolean
        two_factor_enabled:
          type: boolean
        external:
          type: boolean
        private_profile:
          type: boolean
        commit_email:
          type: string
    listCurrentUserForAdministratorsResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
        created_at:
          type: string
          format: date-time
        is_admin:
          type: boolean
        bio:
          type: string
        location:
          type: string
        public_email:
          type: string
        skype:
          type: string
        linkedin:
          type: string
        twitter:
          type: string
        website_url:
          type: string
        organization:
          type: string
        job_title:
          type: string
        last_sign_in_at:
          type: string
          format: date-time
        confirmed_at:
          type: string
          format: date-time
        theme_id:
          type: integer
        last_activity_on:
          type: string
        color_scheme_id:
          type: integer
        projects_limit:
          type: integer
        current_sign_in_at:
          type: string
          format: date-time
        identities:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              extern_uid:
                type: string
        can_create_group:
          type: boolean
        can_create_project:
          type: boolean
        two_factor_enabled:
          type: boolean
        external:
          type: boolean
        private_profile:
          type: boolean
        commit_email:
          type: string
        current_sign_in_ip:
          type: string
        last_sign_in_ip:
          type: string
        namespace_id:
          type: integer
        note:
          type: string
    userStatusResponse:
      type: object
      properties:
        emoji:
          type: string
        availability:
          type: string
        message:
          type: string
        message_html:
          type: string
        clear_status_at:
          type: string
    setUserStatusRequest:
      type: object
      properties:
        emoji:
          type: string
        message:
          type: string
        clear_status_after:
          type: string
    setUserStatusResponse:
      type: object
      properties:
        emoji:
          type: string
        message:
          type: string
        message_html:
          type: string
        clear_status_at:
          type: string
          format: date-time
    getUserPreferencesResponse:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        view_diffs_file_by_file:
          type: boolean
        show_whitespace_in_diffs:
          type: boolean
    followAndUnfollowUsersResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        state:
          type: string
        avatar_url:
          type: string
        web_url:
          type: string
    userCountsResponse:
      type: object
      properties:
        merge_requests:
          type: integer
        assigned_issues:
          type: integer
        assigned_merge_requests:
          type: integer
        review_requested_merge_requests:
          type: integer
        todos:
          type: integer
    listSshKeysResponse:
      type: array
      items:
        $ref: '#/components/schemas/singleSshKeyResponse'
    singleSshKeyResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        key:
          type: string
        created_at:
          type: string
          format: date-time
    addSshKeyRequest:
      type: object
      properties:
        title:
          type: string
        key:
          type: string
        expires_at:
          type: string
      required:
        - title
        - key
    addSshKeyResponse:
      type: object
      properties:
        message:
          type: object
          properties:
            fingerprint:
              type: array
              items:
                type: string
            key:
              type: array
              items:
                type: string
        title:
          type: string
        key:
          type: string
        expires_at:
          type: string
          format: date-time
    listAllGpgKeysResponse:
      type: array
      items:
        $ref: '#/components/schemas/getASpecificGpgKeyResponse'
    getASpecificGpgKeyResponse:
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        created_at:
          type: string
          format: date-time
    addAGpgKeyRequest:
      type: object
      properties:
        key:
          type: string
      required:
        - key
    addAGpgKeyForAGivenUserRequest:
      type: object
      properties:
        key_id:
          type: integer
      required:
        - key_id
    listEmailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/singleEmailResponse'
    singleEmailResponse:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        confirmed_at:
          type: string
          format: date-time
    addEmailRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email
    addEmailResponse:
      type: object
      properties:
        message:
          type: object
          properties:
            email:
              type: array
              items:
                type: string
        id:
          type: integer
        email:
          type: string
        confirmed_at:
          type: string
          format: date-time
    addEmailForUserRequest:
      type: object
      properties:
        email:
          type: string
        skip_confirmation:
          type: boolean
      required:
        - email
    getAllImpersonationTokensOfAUserResponse:
      type: array
      items:
        $ref: '#/components/schemas/getAnImpersonationTokenOfAUserResponse'
    approveUserResponse:
      type: object
      properties:
        message:
          type: string
    getAnImpersonationTokenOfAUserResponse:
      type: object
      properties:
        active:
          type: boolean
        user_id:
          type: integer
        scopes:
          type: array
          items:
            type: string
        revoked:
          type: boolean
        name:
          type: string
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        impersonation:
          type: boolean
        expires_at:
          type: string
          format: date-time
    createAnImpersonationTokenRequest:
      type: object
      properties:
        name:
          type: string
        expires_at:
          type: string
          format: date
        scopes:
          type: array
          items:
            type: string
      required:
        - name
        - scopes
    createAnImpersonationTokenResponse:
      type: object
      properties:
        id:
          type: integer
        revoked:
          type: boolean
        user_id:
          type: integer
        scopes:
          type: array
          items:
            type: string
        token:
          type: string
        active:
          type: boolean
        impersonation:
          type: boolean
        name:
          type: string
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
    createAPersonalAccessTokenResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        revoked:
          type: boolean
        created_at:
          type: string
          format: date-time
        scopes:
          type: array
          items:
            type: string
        user_id:
          type: integer
        active:
          type: boolean
        expires_at:
          type: string
          format: date-time
        token:
          type: string
    getUserActivitiesAdministratorOnlyResponse:
      type: array
      items:
        type: object
        properties:
          username:
            type: string
          last_activity_on:
            type: string
          last_activity_at:
            type: string
            format: date-time
    userMembershipsAdministratorOnlyResponse:
      type: array
      items:
        type: object
        properties:
          source_id:
            type: integer
          source_name:
            type: string
          source_type:
            type: string
          access_level:
            type: string
    versionApiResponse:
      type: object
      properties:
        version:
          type: string
        revision:
          type: string
    singleVulnerabilityResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        state:
          type: string
        severity:
          type: string
        confidence:
          type: string
        report_type:
          type: string
        project:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            full_path:
              type: string
            full_name:
              type: string
        author_id:
          type: integer
        updated_by_id:
          type: string
        last_edited_by_id:
          type: string
        closed_by_id:
          type: string
        start_date:
          type: string
        due_date:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_edited_at:
          type: string
        closed_at:
          type: string
    createAProjectLevelVulnerabilityExportResponse:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        project_id:
          type: integer
        group_id:
          type: string
        format:
          type: string
        status:
          type: string
        started_at:
          type: string
        finished_at:
          type: string
        _links:
          type: object
          properties:
            self:
              type: string
            download:
              type: string
    listProjectVulnerabilityFindingsResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          report_type:
            type: string
          name:
            type: string
          severity:
            type: string
          confidence:
            type: string
          scanner:
            type: object
            properties:
              external_id:
                type: string
              name:
                type: string
              vendor:
                type: string
          identifiers:
            type: array
            items:
              type: object
              properties:
                external_type:
                  type: string
                external_id:
                  type: string
                name:
                  type: string
                url:
                  type: string
          project_fingerprint:
            type: string
          uuid:
            type: string
          create_jira_issue_url:
            type: string
          false_positive:
            type: boolean
          create_vulnerability_feedback_issue_path:
            type: string
          create_vulnerability_feedback_merge_request_path:
            type: string
          create_vulnerability_feedback_dismissal_path:
            type: string
          project:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              full_path:
                type: string
              full_name:
                type: string
          dismissal_feedback:
            type: string
          issue_feedback:
            type: string
          merge_request_feedback:
            type: string
          description:
            type: string
          links:
            type: array
            items: {}
          location:
            type: object
            properties:
              file:
                type: string
              start_line:
                type: integer
              class:
                type: string
              method:
                type: string
          remediations:
            type: array
            items:
              type: string
          solution:
            type: string
          evidence:
            type: string
          request:
            type: string
          response:
            type: string
          evidence_source:
            type: string
          supporting_messages:
            type: array
            items: {}
          assets:
            type: array
            items: {}
          details:
            type: object
            properties: {}
          state:
            type: string
          scan:
            type: object
            properties:
              type:
                type: string
              status:
                type: string
              start_time:
                type: string
              end_time:
                type: string
          blob_path:
            type: string
