{
  "origin": "https://docs.gitlab.com/15.1/ee/api/users.html",
  "pageSlug": "users",
  "pageName": "Users",
  "apis": [
    {
      "name": "For normal users",
      "description": "You can also search for users by name, username or public email by using ?search=. For example. /users?search=John.",
      "resources": [
        {
          "method": "GET",
          "path": "/users"
        },
        {
          "method": "GET",
          "path": "/users?username=:username"
        },
        {
          "method": "GET",
          "path": "/users?username=jack_smith"
        },
        {
          "method": "GET",
          "path": "/users?active=true"
        },
        {
          "method": "GET",
          "path": "/users?blocked=true"
        },
        {
          "method": "GET",
          "path": "/users?external=true"
        },
        {
          "method": "GET",
          "path": "/users?exclude_internal=true"
        },
        {
          "method": "GET",
          "path": "/users?exclude_external=true"
        },
        {
          "method": "GET",
          "path": "/users?without_project_bots=true"
        }
      ],
      "attributes": [],
      "response": [
        {
          "id": 1,
          "username": "john_smith",
          "name": "John Smith",
          "state": "active",
          "avatar_url": "http://localhost:3000/uploads/user/avatar/1/cd8.jpeg",
          "web_url": "http://localhost:3000/john_smith"
        },
        {
          "id": 2,
          "username": "jack_smith",
          "name": "Jack Smith",
          "state": "blocked",
          "avatar_url": "http://gravatar.com/../e32131cd8.jpeg",
          "web_url": "http://localhost:3000/jack_smith"
        }
      ]
    },
    {
      "name": "For administrators",
      "description": "Users on GitLab Premium or higher also see the group_saml provider option and provisioned_by_group_id parameter:",
      "resources": [
        {
          "method": "GET",
          "path": "/users"
        },
        {
          "method": "GET",
          "path": "/users?extern_uid=:extern_uid&provider=:provider"
        },
        {
          "method": "GET",
          "path": "/users?extern_uid=1234567&provider=github"
        },
        {
          "method": "GET",
          "path": "/users?created_before=2001-01-02T00:00:00.060Z&created_after=1999-01-02T00:00:00.060"
        },
        {
          "method": "GET",
          "path": "/users?custom_attributes[key]=value&custom_attributes[other_key]=other_value"
        },
        {
          "method": "GET",
          "path": "/users?with_custom_attributes=true"
        }
      ],
      "attributes": [
        {
          "name": "order_by",
          "type": "string",
          "required": false,
          "description": "Return users ordered by id, name, username, created_at, or updated_at fields. Default is id"
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "description": "Return users sorted in asc or desc order. Default is desc"
        },
        {
          "name": "two_factor",
          "type": "string",
          "required": false,
          "description": "Filter users by Two-factor authentication. Filter values are enabled or disabled. By default it returns all users"
        },
        {
          "name": "without_projects",
          "type": "boolean",
          "required": false,
          "description": "Filter users without projects. Default is false, which means that all users are returned, with and without projects."
        },
        {
          "name": "admins",
          "type": "boolean",
          "required": false,
          "description": "Return only administrators. Default is false"
        },
        {
          "name": "saml_provider_id",
          "type": "number",
          "required": false,
          "description": "Return only users created by the specified SAML provider ID. If not included, it returns all users."
        }
      ],
      "response": [
        {
          "id": 1,
          "username": "john_smith",
          "email": "john@example.com",
          "name": "John Smith",
          "state": "active",
          "avatar_url": "http://localhost:3000/uploads/user/avatar/1/index.jpg",
          "web_url": "http://localhost:3000/john_smith",
          "created_at": "2012-05-23T08:00:58Z",
          "is_admin": false,
          "bio": "",
          "location": null,
          "skype": "",
          "linkedin": "",
          "twitter": "",
          "website_url": "",
          "organization": "",
          "job_title": "",
          "last_sign_in_at": "2012-06-01T11:41:01Z",
          "confirmed_at": "2012-05-23T09:05:22Z",
          "theme_id": 1,
          "last_activity_on": "2012-05-23",
          "color_scheme_id": 2,
          "projects_limit": 100,
          "current_sign_in_at": "2012-06-02T06:36:55Z",
          "note": "DMCA Request: 2018-11-05 | DMCA Violation | Abuse | https://gitlab.zendesk.com/agent/tickets/123",
          "identities": [
            {
              "provider": "github",
              "extern_uid": "2435223452345"
            },
            {
              "provider": "bitbucket",
              "extern_uid": "john.smith"
            },
            {
              "provider": "google_oauth2",
              "extern_uid": "8776128412476123468721346"
            }
          ],
          "can_create_group": true,
          "can_create_project": true,
          "two_factor_enabled": true,
          "external": false,
          "private_profile": false,
          "current_sign_in_ip": "196.165.1.102",
          "last_sign_in_ip": "172.127.2.22",
          "namespace_id": 1
        },
        {
          "id": 2,
          "username": "jack_smith",
          "email": "jack@example.com",
          "name": "Jack Smith",
          "state": "blocked",
          "avatar_url": "http://localhost:3000/uploads/user/avatar/2/index.jpg",
          "web_url": "http://localhost:3000/jack_smith",
          "created_at": "2012-05-23T08:01:01Z",
          "is_admin": false,
          "bio": "",
          "location": null,
          "skype": "",
          "linkedin": "",
          "twitter": "",
          "website_url": "",
          "organization": "",
          "job_title": "",
          "last_sign_in_at": null,
          "confirmed_at": "2012-05-30T16:53:06.148Z",
          "theme_id": 1,
          "last_activity_on": "2012-05-23",
          "color_scheme_id": 3,
          "projects_limit": 100,
          "current_sign_in_at": "2014-03-19T17:54:13Z",
          "identities": [],
          "can_create_group": true,
          "can_create_project": true,
          "two_factor_enabled": true,
          "external": false,
          "private_profile": false,
          "current_sign_in_ip": "10.165.1.102",
          "last_sign_in_ip": "172.127.2.22",
          "namespace_id": 2
        }
      ]
    },
    {
      "name": "For user",
      "description": "",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of a user"
        }
      ],
      "response": {
        "id": 1,
        "username": "john_smith",
        "name": "John Smith",
        "state": "active",
        "avatar_url": "http://localhost:3000/uploads/user/avatar/1/cd8.jpeg",
        "web_url": "http://localhost:3000/john_smith",
        "created_at": "2012-05-23T08:00:58Z",
        "bio": "",
        "bot": false,
        "location": null,
        "public_email": "john@example.com",
        "skype": "",
        "linkedin": "",
        "twitter": "",
        "website_url": "",
        "organization": "",
        "job_title": "Operations Specialist",
        "pronouns": "he/him",
        "work_information": null,
        "followers": 1,
        "following": 1,
        "local_time": "3:38 PM",
        "is_followed": false
      }
    },
    {
      "name": "For administrator",
      "description": "Users on GitLab.com Premium or higher also see the group_saml option and provisioned_by_group_id parameter:",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id"
        },
        {
          "method": "GET",
          "path": "/users/:id?with_custom_attributes=true"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of a user"
        }
      ],
      "response": {
        "id": 1,
        "username": "john_smith",
        "shared_runners_minutes_limit": 133,
        "extra_shared_runners_minutes_limit": 133,
        "identities": [
          {
            "provider": "github",
            "extern_uid": "2435223452345"
          },
          {
            "provider": "bitbucket",
            "extern_uid": "john.smith"
          },
          {
            "provider": "google_oauth2",
            "extern_uid": "8776128412476123468721346"
          }
        ],
        "provisioned_by_group_id": 123789,
        "is_auditor": false,
        "email": "john@example.com",
        "name": "John Smith",
        "state": "active",
        "avatar_url": "http://localhost:3000/uploads/user/avatar/1/index.jpg",
        "web_url": "http://localhost:3000/john_smith",
        "created_at": "2012-05-23T08:00:58Z",
        "is_admin": false,
        "bio": "",
        "location": null,
        "public_email": "john@example.com",
        "skype": "",
        "linkedin": "",
        "twitter": "",
        "website_url": "",
        "organization": "",
        "job_title": "Operations Specialist",
        "pronouns": "he/him",
        "work_information": null,
        "followers": 1,
        "following": 1,
        "local_time": "3:38 PM",
        "last_sign_in_at": "2012-06-01T11:41:01Z",
        "confirmed_at": "2012-05-23T09:05:22Z",
        "theme_id": 1,
        "last_activity_on": "2012-05-23",
        "color_scheme_id": 2,
        "projects_limit": 100,
        "current_sign_in_at": "2012-06-02T06:36:55Z",
        "note": "DMCA Request: 2018-11-05 | DMCA Violation | Abuse | https://gitlab.zendesk.com/agent/tickets/123",
        "can_create_group": true,
        "can_create_project": true,
        "two_factor_enabled": true,
        "external": false,
        "private_profile": false,
        "commit_email": "john-codes@example.com",
        "current_sign_in_ip": "196.165.1.102",
        "last_sign_in_ip": "172.127.2.22",
        "plan": "gold",
        "trial": true,
        "sign_in_count": 1337,
        "namespace_id": 1
      }
    },
    {
      "name": "User creation",
      "description": "Creates a new user. Note only administrators can create new users. Either password, reset_password, or force_random_password must be specified. If reset_password and force_random_password are both false, then password is required.",
      "resources": [
        {
          "method": "POST",
          "path": "/users"
        }
      ],
      "attributes": [
        {
          "name": "admin",
          "type": "No",
          "required": false
        },
        {
          "name": "avatar",
          "type": "No",
          "required": false
        },
        {
          "name": "bio",
          "type": "No",
          "required": false
        },
        {
          "name": "can_create_group",
          "type": "No",
          "required": false
        },
        {
          "name": "color_scheme_id",
          "type": "No",
          "required": false
        },
        {
          "name": "email",
          "type": "Yes",
          "required": false
        },
        {
          "name": "extern_uid",
          "type": "No",
          "required": false
        },
        {
          "name": "external",
          "type": "No",
          "required": false
        },
        {
          "name": "extra_shared_runners_minutes_limit",
          "type": "No",
          "required": false
        },
        {
          "name": "force_random_password",
          "type": "No",
          "required": false
        },
        {
          "name": "group_id_for_saml",
          "type": "No",
          "required": false
        },
        {
          "name": "linkedin",
          "type": "No",
          "required": false
        },
        {
          "name": "location",
          "type": "No",
          "required": false
        },
        {
          "name": "name",
          "type": "Yes",
          "required": false
        },
        {
          "name": "note",
          "type": "No",
          "required": false
        },
        {
          "name": "organization",
          "type": "No",
          "required": false
        },
        {
          "name": "password",
          "type": "No",
          "required": false
        },
        {
          "name": "private_profile",
          "type": "No",
          "required": false
        },
        {
          "name": "projects_limit",
          "type": "No",
          "required": false
        },
        {
          "name": "provider",
          "type": "No",
          "required": false
        },
        {
          "name": "reset_password",
          "type": "No",
          "required": false
        },
        {
          "name": "shared_runners_minutes_limit",
          "type": "No",
          "required": false
        },
        {
          "name": "skip_confirmation",
          "type": "No",
          "required": false
        },
        {
          "name": "skype",
          "type": "No",
          "required": false
        },
        {
          "name": "theme_id",
          "type": "No",
          "required": false
        },
        {
          "name": "twitter",
          "type": "No",
          "required": false
        },
        {
          "name": "username",
          "type": "Yes",
          "required": false
        },
        {
          "name": "view_diffs_file_by_file",
          "type": "No",
          "required": false
        },
        {
          "name": "website_url",
          "type": "No",
          "required": false
        }
      ],
      "response": null
    },
    {
      "name": "User modification",
      "description": "Modifies an existing user. Only administrators can change attributes of a user.",
      "resources": [
        {
          "method": "PUT",
          "path": "/users/:id"
        }
      ],
      "attributes": [
        {
          "name": "admin",
          "type": "No",
          "required": false
        },
        {
          "name": "avatar",
          "type": "No",
          "required": false
        },
        {
          "name": "bio",
          "type": "No",
          "required": false
        },
        {
          "name": "can_create_group",
          "type": "No",
          "required": false
        },
        {
          "name": "color_scheme_id",
          "type": "No",
          "required": false
        },
        {
          "name": "email",
          "type": "No",
          "required": false
        },
        {
          "name": "extern_uid",
          "type": "No",
          "required": false
        },
        {
          "name": "external",
          "type": "No",
          "required": false
        },
        {
          "name": "extra_shared_runners_minutes_limit",
          "type": "No",
          "required": false
        },
        {
          "name": "group_id_for_saml",
          "type": "No",
          "required": false
        },
        {
          "name": "id",
          "type": "Yes",
          "required": false
        },
        {
          "name": "linkedin",
          "type": "No",
          "required": false
        },
        {
          "name": "location",
          "type": "No",
          "required": false
        },
        {
          "name": "name",
          "type": "No",
          "required": false
        },
        {
          "name": "note",
          "type": "No",
          "required": false
        },
        {
          "name": "organization",
          "type": "No",
          "required": false
        },
        {
          "name": "password",
          "type": "No",
          "required": false
        },
        {
          "name": "private_profile",
          "type": "No",
          "required": false
        },
        {
          "name": "projects_limit",
          "type": "No",
          "required": false
        },
        {
          "name": "provider",
          "type": "No",
          "required": false
        },
        {
          "name": "public_email",
          "type": "No",
          "required": false
        },
        {
          "name": "shared_runners_minutes_limit",
          "type": "No",
          "required": false
        },
        {
          "name": "skip_reconfirmation",
          "type": "No",
          "required": false
        },
        {
          "name": "skype",
          "type": "No",
          "required": false
        },
        {
          "name": "theme_id",
          "type": "No",
          "required": false
        },
        {
          "name": "twitter",
          "type": "No",
          "required": false
        },
        {
          "name": "username",
          "type": "No",
          "required": false
        },
        {
          "name": "view_diffs_file_by_file",
          "type": "No",
          "required": false
        },
        {
          "name": "website_url",
          "type": "No",
          "required": false
        }
      ],
      "response": null
    },
    {
      "name": "Delete authentication identity from user",
      "description": "Deletes a user’s authentication identity using the provider name associated with that identity. Available only for administrators.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/users/:id/identities/:provider"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of a user"
        },
        {
          "name": "provider",
          "type": "string",
          "required": true,
          "description": "External provider name"
        }
      ],
      "response": null
    },
    {
      "name": "User deletion",
      "description": "Deletes a user. Available only for administrators. This returns a 204 No Content status code if the operation was successfully, 404 if the resource was not found or 409 if the user cannot be soft deleted.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/users/:id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of a user"
        },
        {
          "name": "hard_delete",
          "type": "boolean",
          "required": false,
          "description": "If true, contributions that would usually be moved to Ghost User are deleted instead, as well as groups owned solely by this user."
        }
      ],
      "response": null
    },
    {
      "name": "List current user (for normal users)",
      "description": "Gets currently authenticated user.",
      "resources": [
        {
          "method": "GET",
          "path": "/user"
        }
      ],
      "attributes": [],
      "response": {
        "id": 1,
        "username": "john_smith",
        "email": "john@example.com",
        "name": "John Smith",
        "state": "active",
        "avatar_url": "http://localhost:3000/uploads/user/avatar/1/index.jpg",
        "web_url": "http://localhost:3000/john_smith",
        "created_at": "2012-05-23T08:00:58Z",
        "bio": "",
        "location": null,
        "public_email": "john@example.com",
        "skype": "",
        "linkedin": "",
        "twitter": "",
        "website_url": "",
        "organization": "",
        "job_title": "",
        "pronouns": "he/him",
        "bot": false,
        "work_information": null,
        "followers": 0,
        "following": 0,
        "local_time": "3:38 PM",
        "last_sign_in_at": "2012-06-01T11:41:01Z",
        "confirmed_at": "2012-05-23T09:05:22Z",
        "theme_id": 1,
        "last_activity_on": "2012-05-23",
        "color_scheme_id": 2,
        "projects_limit": 100,
        "current_sign_in_at": "2012-06-02T06:36:55Z",
        "identities": [
          {
            "provider": "github",
            "extern_uid": "2435223452345"
          },
          {
            "provider": "bitbucket",
            "extern_uid": "john_smith"
          },
          {
            "provider": "google_oauth2",
            "extern_uid": "8776128412476123468721346"
          }
        ],
        "can_create_group": true,
        "can_create_project": true,
        "two_factor_enabled": true,
        "external": false,
        "private_profile": false,
        "commit_email": "admin@example.com"
      }
    },
    {
      "name": "List current user (for administrators)",
      "description": "",
      "resources": [
        {
          "method": "GET",
          "path": "/user"
        }
      ],
      "attributes": [
        {
          "name": "sudo",
          "type": "integer",
          "required": false,
          "description": "the ID of a user to make the call in their place"
        }
      ],
      "response": {
        "id": 1,
        "username": "john_smith",
        "email": "john@example.com",
        "name": "John Smith",
        "state": "active",
        "avatar_url": "http://localhost:3000/uploads/user/avatar/1/index.jpg",
        "web_url": "http://localhost:3000/john_smith",
        "created_at": "2012-05-23T08:00:58Z",
        "is_admin": true,
        "bio": "",
        "location": null,
        "public_email": "john@example.com",
        "skype": "",
        "linkedin": "",
        "twitter": "",
        "website_url": "",
        "organization": "",
        "job_title": "",
        "last_sign_in_at": "2012-06-01T11:41:01Z",
        "confirmed_at": "2012-05-23T09:05:22Z",
        "theme_id": 1,
        "last_activity_on": "2012-05-23",
        "color_scheme_id": 2,
        "projects_limit": 100,
        "current_sign_in_at": "2012-06-02T06:36:55Z",
        "identities": [
          {
            "provider": "github",
            "extern_uid": "2435223452345"
          },
          {
            "provider": "bitbucket",
            "extern_uid": "john_smith"
          },
          {
            "provider": "google_oauth2",
            "extern_uid": "8776128412476123468721346"
          }
        ],
        "can_create_group": true,
        "can_create_project": true,
        "two_factor_enabled": true,
        "external": false,
        "private_profile": false,
        "commit_email": "john-codes@example.com",
        "current_sign_in_ip": "196.165.1.102",
        "last_sign_in_ip": "172.127.2.22",
        "namespace_id": 1,
        "note": null
      }
    },
    {
      "name": "User status",
      "description": "Get the status of the currently signed in user.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/status"
        }
      ],
      "attributes": [],
      "response": {
        "emoji": "coffee",
        "availability": "busy",
        "message": "I crave coffee :coffee:",
        "message_html": "I crave coffee <gl-emoji title=\"hot beverage\" data-name=\"coffee\" data-unicode-version=\"4.0\">☕</gl-emoji>",
        "clear_status_at": null
      }
    },
    {
      "name": "Get the status of a user",
      "description": "Get the status of a user. This endpoint can be accessed without authentication.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id_or_username/status"
        }
      ],
      "attributes": [
        {
          "name": "id_or_username",
          "type": "string",
          "required": true,
          "description": "The ID or username of the user to get a status of"
        }
      ],
      "response": {
        "emoji": "coffee",
        "availability": "busy",
        "message": "I crave coffee :coffee:",
        "message_html": "I crave coffee <gl-emoji title=\"hot beverage\" data-name=\"coffee\" data-unicode-version=\"4.0\">☕</gl-emoji>",
        "clear_status_at": null
      }
    },
    {
      "name": "Set user status",
      "description": "Set the status of the current user.",
      "resources": [
        {
          "method": "PUT",
          "path": "/user/status"
        }
      ],
      "attributes": [
        {
          "name": "emoji",
          "type": "string",
          "required": false,
          "description": "The name of the emoji to use as status. If omitted speech_balloon is used. Emoji name can be one of the specified names in the Gemojione index."
        },
        {
          "name": "message",
          "type": "string",
          "required": false,
          "description": "The message to set as a status. It can also contain emoji codes."
        },
        {
          "name": "clear_status_after",
          "type": "string",
          "required": false,
          "description": "Automatically clean up the status after a given time interval, allowed values: 30_minutes, 3_hours, 8_hours, 1_day, 3_days, 7_days, 30_days"
        }
      ],
      "response": {
        "emoji": "coffee",
        "message": "I crave coffee",
        "message_html": "I crave coffee",
        "clear_status_at": "2021-02-15T10:49:01.311Z"
      }
    },
    {
      "name": "Get user preferences",
      "description": "Get a list of currently authenticated user’s preferences.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/preferences"
        }
      ],
      "attributes": [],
      "response": {
        "id": 1,
        "user_id": 1,
        "view_diffs_file_by_file": true,
        "show_whitespace_in_diffs": false
      }
    },
    {
      "name": "User preference modification",
      "description": "Update the current user’s preferences.",
      "resources": [
        {
          "method": "PUT",
          "path": "/user/preferences"
        }
      ],
      "attributes": [
        {
          "name": "view_diffs_file_by_file",
          "type": "Yes",
          "required": false
        },
        {
          "name": "show_whitespace_in_diffs",
          "type": "Yes",
          "required": false
        }
      ],
      "response": {
        "id": 1,
        "user_id": 1,
        "view_diffs_file_by_file": true,
        "show_whitespace_in_diffs": false
      }
    },
    {
      "name": "Follow and unfollow users",
      "description": "Follow a user.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/follow"
        },
        {
          "method": "POST",
          "path": "/users/:id/unfollow"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user to follow"
        }
      ],
      "response": {
        "id": 1,
        "username": "john_smith",
        "name": "John Smith",
        "state": "active",
        "avatar_url": "http://localhost:3000/uploads/user/avatar/1/cd8.jpeg",
        "web_url": "http://localhost:3000/john_smith"
      }
    },
    {
      "name": "Followers and following",
      "description": "Get the followers of a user.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id/followers"
        },
        {
          "method": "GET",
          "path": "/users/:id/following"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user to follow"
        }
      ],
      "response": [
        {
          "id": 2,
          "name": "Lennie Donnelly",
          "username": "evette.kilback",
          "state": "active",
          "avatar_url": "https://www.gravatar.com/avatar/7955171a55ac4997ed81e5976287890a?s=80&d=identicon",
          "web_url": "http://127.0.0.1:3000/evette.kilback"
        },
        {
          "id": 4,
          "name": "Serena Bradtke",
          "username": "cammy",
          "state": "active",
          "avatar_url": "https://www.gravatar.com/avatar/a2daad869a7b60d3090b7b9bef4baf57?s=80&d=identicon",
          "web_url": "http://127.0.0.1:3000/cammy"
        }
      ]
    },
    {
      "name": "User counts",
      "description": "Get the counts (same as in top right menu) of the currently signed in user.",
      "resources": [
        {
          "method": "GET",
          "path": "/user_counts"
        }
      ],
      "attributes": [
        {
          "name": "assigned_issues",
          "type": "number",
          "required": false
        },
        {
          "name": "assigned_merge_requests",
          "type": "number",
          "required": false
        },
        {
          "name": "merge_requests",
          "type": "number",
          "required": false
        },
        {
          "name": "review_requested_merge_requests",
          "type": "number",
          "required": false
        },
        {
          "name": "todos",
          "type": "number",
          "required": false
        }
      ],
      "response": {
        "merge_requests": 4,
        "assigned_issues": 15,
        "assigned_merge_requests": 11,
        "review_requested_merge_requests": 0,
        "todos": 1
      }
    },
    {
      "name": "List SSH keys",
      "description": "Get a list of currently authenticated user’s SSH keys.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/keys"
        }
      ],
      "attributes": [],
      "response": [
        {
          "id": 1,
          "title": "Public key",
          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt4596k6YjzGGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCddNaP0L+hM7zhFNzjFvpaMgJw0=",
          "created_at": "2014-08-01T14:47:39.080Z"
        },
        {
          "id": 3,
          "title": "Another Public key",
          "key": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt4596k6YjzGGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCddNaP0L+hM7zhFNzjFvpaMgJw0=",
          "created_at": "2014-08-01T14:47:39.080Z"
        }
      ]
    },
    {
      "name": "List SSH keys for user",
      "description": "Get a list of a specified user’s SSH keys.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id_or_username/keys"
        }
      ],
      "attributes": [
        {
          "name": "id_or_username",
          "type": "string",
          "required": true,
          "description": "The ID or username of the user to get the SSH keys for."
        }
      ],
      "response": null
    },
    {
      "name": "Single SSH key",
      "description": "Get a single key.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/keys/:key_id"
        }
      ],
      "attributes": [
        {
          "name": "key_id",
          "type": "string",
          "required": true,
          "description": "The ID of an SSH key"
        }
      ],
      "response": {
        "id": 1,
        "title": "Public key",
        "key": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt4596k6YjzGGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCddNaP0L+hM7zhFNzjFvpaMgJw0=",
        "created_at": "2014-08-01T14:47:39.080Z"
      }
    },
    {
      "name": "Single SSH key for given user",
      "description": "Get a single key for a given user.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id/keys/:key_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        },
        {
          "name": "key_id",
          "type": "integer",
          "required": true,
          "description": "SSH key ID"
        }
      ],
      "response": {
        "id": 1,
        "title": "Public key",
        "key": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAiPWx6WM4lhHNedGfBpPJNPpZ7yKu+dnn1SJejgt4596k6YjzGGphH2TUxwKzxcKDKKezwkpfnxPkSMkuEspGRt/aZZ9wa++Oi7Qkr8prgHc4soW6NUlfDzpvZK2H5E7eQaSeP3SAwGmQKUFHCddNaP0L+hM7zhFNzjFvpaMgJw0=",
        "created_at": "2014-08-01T14:47:39.080Z"
      }
    },
    {
      "name": "Add SSH key",
      "description": "Creates a new key owned by the currently authenticated user.",
      "resources": [
        {
          "method": "POST",
          "path": "/user/keys"
        }
      ],
      "attributes": [
        {
          "name": "title",
          "type": "string",
          "required": true,
          "description": "new SSH key’s title"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "description": "new SSH key"
        },
        {
          "name": "expires_at",
          "type": "string",
          "required": false,
          "description": "The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)"
        }
      ],
      "response": {
        "message": {
          "fingerprint": [
            "has already been taken"
          ],
          "key": [
            "has already been taken"
          ]
        },
        "title": "ABC",
        "key": "ssh-dss AAAAB3NzaC1kc3MAAACBAMLrhYgI3atfrSD6KDas1b/3n6R/HP+bLaHHX6oh+L1vg31mdUqK0Ac/NjZoQunavoyzqdPYhFz9zzOezCrZKjuJDS3NRK9rspvjgM0xYR4d47oNZbdZbwkI4cTv/gcMlquRy0OvpfIvJtjtaJWMwTLtM5VhRusRuUlpH99UUVeXAAAAFQCVyX+92hBEjInEKL0v13c/egDCTQAAAIEAvFdWGq0ccOPbw4f/F8LpZqvWDydAcpXHV3thwb7WkFfppvm4SZte0zds1FJ+Hr8Xzzc5zMHe6J4Nlay/rP4ewmIW7iFKNBEYb/yWa+ceLrs+TfR672TaAgO6o7iSRofEq5YLdwgrwkMmIawa21FrZ2D9SPao/IwvENzk/xcHu7YAAACAQFXQH6HQnxOrw4dqf0NqeKy1tfIPxYYUZhPJfo9O0AmBW2S36pD2l14kS89fvz6Y1g8gN/FwFnRncMzlLY/hX70FSc/3hKBSbH6C6j8hwlgFKfizav21eS358JJz93leOakJZnGb8XlWvz1UJbwCsnR2VEY8Dz90uIk1l/UqHkA= loic@call",
        "expires_at": "2016-01-21T00:00:00.000Z"
      }
    },
    {
      "name": "Add SSH key for user",
      "description": "Create new key owned by specified user. Available only for administrator.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/keys"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        },
        {
          "name": "title",
          "type": "string",
          "required": true,
          "description": "new SSH key’s title"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "description": "new SSH key"
        },
        {
          "name": "expires_at",
          "type": "string",
          "required": false,
          "description": "The expiration date of the SSH key in ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ)"
        }
      ],
      "response": null
    },
    {
      "name": "Delete SSH key for current user",
      "description": "Deletes key owned by currently authenticated user. This returns a 204 No Content status code if the operation was successfully or 404 if the resource was not found.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/user/keys/:key_id"
        }
      ],
      "attributes": [
        {
          "name": "key_id",
          "type": "integer",
          "required": true,
          "description": "SSH key ID"
        }
      ],
      "response": null
    },
    {
      "name": "Delete SSH key for given user",
      "description": "Deletes key owned by a specified user. Available only for administrator.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/users/:id/keys/:key_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        },
        {
          "name": "key_id",
          "type": "integer",
          "required": true,
          "description": "SSH key ID"
        }
      ],
      "response": null
    },
    {
      "name": "List all GPG keys",
      "description": "Get a list of currently authenticated user’s GPG keys.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/gpg_keys"
        }
      ],
      "attributes": [],
      "response": [
        {
          "id": 1,
          "key": "-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n\r\nxsBNBFVjnlIBCACibzXOLCiZiL2oyzYUaTOCkYnSUhymg3pdbfKtd4mpBa58xKBj\r\nt1pTHVpw3Sk03wmzhM/Ndlt1AV2YhLv++83WKr+gAHFYFiCV/tnY8bx3HqvVoy8O\r\nCfxWhw4QZK7+oYzVmJj8ZJm3ZjOC4pzuegNWlNLCUdZDx9OKlHVXLCX1iUbjdYWa\r\nqKV6tdV8hZolkbyjedQgrpvoWyeSHHpwHF7yk4gNJWMMI5rpcssL7i6mMXb/sDzO\r\nVaAtU5wiVducsOa01InRFf7QSTxoAm6Xy0PGv/k48M6xCALa9nY+BzlOv47jUT57\r\nvilf4Szy9dKD0v9S0mQ+IHB+gNukWrnwtXx5ABEBAAHNFm5hbWUgKGNvbW1lbnQp\r\nIDxlbUBpbD7CwHUEEwECACkFAlVjnlIJEINgJNgv009/AhsDAhkBBgsJCAcDAgYV\r\nCAIJCgsEFgIDAQAAxqMIAFBHuBA8P1v8DtHonIK8Lx2qU23t8Mh68HBIkSjk2H7/\r\noO2cDWCw50jZ9D91PXOOyMPvBWV2IE3tARzCvnNGtzEFRtpIEtZ0cuctxeIF1id5\r\ncrfzdMDsmZyRHAOoZ9VtuD6mzj0ybQWMACb7eIHjZDCee3Slh3TVrLy06YRdq2I4\r\nbjMOPePtK5xnIpHGpAXkB3IONxyITpSLKsA4hCeP7gVvm7r7TuQg1ygiUBlWbBYn\r\niE5ROzqZjG1s7dQNZK/riiU2umGqGuwAb2IPvNiyuGR3cIgRE4llXH/rLuUlspAp\r\no4nlxaz65VucmNbN1aMbDXLJVSqR1DuE00vEsL1AItI=\r\n=XQoy\r\n-----END PGP PUBLIC KEY BLOCK-----",
          "created_at": "2017-09-05T09:17:46.264Z"
        }
      ]
    },
    {
      "name": "Get a specific GPG key",
      "description": "Get a specific GPG key of currently authenticated user.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/gpg_keys/:key_id"
        }
      ],
      "attributes": [
        {
          "name": "key_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the GPG key"
        }
      ],
      "response": {
        "id": 1,
        "key": "-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n\r\nxsBNBFVjnlIBCACibzXOLCiZiL2oyzYUaTOCkYnSUhymg3pdbfKtd4mpBa58xKBj\r\nt1pTHVpw3Sk03wmzhM/Ndlt1AV2YhLv++83WKr+gAHFYFiCV/tnY8bx3HqvVoy8O\r\nCfxWhw4QZK7+oYzVmJj8ZJm3ZjOC4pzuegNWlNLCUdZDx9OKlHVXLCX1iUbjdYWa\r\nqKV6tdV8hZolkbyjedQgrpvoWyeSHHpwHF7yk4gNJWMMI5rpcssL7i6mMXb/sDzO\r\nVaAtU5wiVducsOa01InRFf7QSTxoAm6Xy0PGv/k48M6xCALa9nY+BzlOv47jUT57\r\nvilf4Szy9dKD0v9S0mQ+IHB+gNukWrnwtXx5ABEBAAHNFm5hbWUgKGNvbW1lbnQp\r\nIDxlbUBpbD7CwHUEEwECACkFAlVjnlIJEINgJNgv009/AhsDAhkBBgsJCAcDAgYV\r\nCAIJCgsEFgIDAQAAxqMIAFBHuBA8P1v8DtHonIK8Lx2qU23t8Mh68HBIkSjk2H7/\r\noO2cDWCw50jZ9D91PXOOyMPvBWV2IE3tARzCvnNGtzEFRtpIEtZ0cuctxeIF1id5\r\ncrfzdMDsmZyRHAOoZ9VtuD6mzj0ybQWMACb7eIHjZDCee3Slh3TVrLy06YRdq2I4\r\nbjMOPePtK5xnIpHGpAXkB3IONxyITpSLKsA4hCeP7gVvm7r7TuQg1ygiUBlWbBYn\r\niE5ROzqZjG1s7dQNZK/riiU2umGqGuwAb2IPvNiyuGR3cIgRE4llXH/rLuUlspAp\r\no4nlxaz65VucmNbN1aMbDXLJVSqR1DuE00vEsL1AItI=\r\n=XQoy\r\n-----END PGP PUBLIC KEY BLOCK-----",
        "created_at": "2017-09-05T09:17:46.264Z"
      }
    },
    {
      "name": "Add a GPG key",
      "description": "Creates a new GPG key owned by the currently authenticated user.",
      "resources": [
        {
          "method": "POST",
          "path": "/user/gpg_keys"
        }
      ],
      "attributes": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "description": "The new GPG key"
        }
      ],
      "response": [
        {
          "id": 1,
          "key": "-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n\r\nxsBNBFVjnlIBCACibzXOLCiZiL2oyzYUaTOCkYnSUhymg3pdbfKtd4mpBa58xKBj\r\nt1pTHVpw3Sk03wmzhM/Ndlt1AV2YhLv++83WKr+gAHFYFiCV/tnY8bx3HqvVoy8O\r\nCfxWhw4QZK7+oYzVmJj8ZJm3ZjOC4pzuegNWlNLCUdZDx9OKlHVXLCX1iUbjdYWa\r\nqKV6tdV8hZolkbyjedQgrpvoWyeSHHpwHF7yk4gNJWMMI5rpcssL7i6mMXb/sDzO\r\nVaAtU5wiVducsOa01InRFf7QSTxoAm6Xy0PGv/k48M6xCALa9nY+BzlOv47jUT57\r\nvilf4Szy9dKD0v9S0mQ+IHB+gNukWrnwtXx5ABEBAAHNFm5hbWUgKGNvbW1lbnQp\r\nIDxlbUBpbD7CwHUEEwECACkFAlVjnlIJEINgJNgv009/AhsDAhkBBgsJCAcDAgYV\r\nCAIJCgsEFgIDAQAAxqMIAFBHuBA8P1v8DtHonIK8Lx2qU23t8Mh68HBIkSjk2H7/\r\noO2cDWCw50jZ9D91PXOOyMPvBWV2IE3tARzCvnNGtzEFRtpIEtZ0cuctxeIF1id5\r\ncrfzdMDsmZyRHAOoZ9VtuD6mzj0ybQWMACb7eIHjZDCee3Slh3TVrLy06YRdq2I4\r\nbjMOPePtK5xnIpHGpAXkB3IONxyITpSLKsA4hCeP7gVvm7r7TuQg1ygiUBlWbBYn\r\niE5ROzqZjG1s7dQNZK/riiU2umGqGuwAb2IPvNiyuGR3cIgRE4llXH/rLuUlspAp\r\no4nlxaz65VucmNbN1aMbDXLJVSqR1DuE00vEsL1AItI=\r\n=XQoy\r\n-----END PGP PUBLIC KEY BLOCK-----",
          "created_at": "2017-09-05T09:17:46.264Z"
        }
      ]
    },
    {
      "name": "Delete a GPG key",
      "description": "Delete a GPG key owned by currently authenticated user.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/user/gpg_keys/:key_id"
        }
      ],
      "attributes": [
        {
          "name": "key_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the GPG key"
        }
      ],
      "response": null
    },
    {
      "name": "List all GPG keys for given user",
      "description": "Get a list of a specified user’s GPG keys. This endpoint can be accessed without authentication.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id/gpg_keys"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        }
      ],
      "response": [
        {
          "id": 1,
          "key": "-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n\r\nxsBNBFVjnlIBCACibzXOLCiZiL2oyzYUaTOCkYnSUhymg3pdbfKtd4mpBa58xKBj\r\nt1pTHVpw3Sk03wmzhM/Ndlt1AV2YhLv++83WKr+gAHFYFiCV/tnY8bx3HqvVoy8O\r\nCfxWhw4QZK7+oYzVmJj8ZJm3ZjOC4pzuegNWlNLCUdZDx9OKlHVXLCX1iUbjdYWa\r\nqKV6tdV8hZolkbyjedQgrpvoWyeSHHpwHF7yk4gNJWMMI5rpcssL7i6mMXb/sDzO\r\nVaAtU5wiVducsOa01InRFf7QSTxoAm6Xy0PGv/k48M6xCALa9nY+BzlOv47jUT57\r\nvilf4Szy9dKD0v9S0mQ+IHB+gNukWrnwtXx5ABEBAAHNFm5hbWUgKGNvbW1lbnQp\r\nIDxlbUBpbD7CwHUEEwECACkFAlVjnlIJEINgJNgv009/AhsDAhkBBgsJCAcDAgYV\r\nCAIJCgsEFgIDAQAAxqMIAFBHuBA8P1v8DtHonIK8Lx2qU23t8Mh68HBIkSjk2H7/\r\noO2cDWCw50jZ9D91PXOOyMPvBWV2IE3tARzCvnNGtzEFRtpIEtZ0cuctxeIF1id5\r\ncrfzdMDsmZyRHAOoZ9VtuD6mzj0ybQWMACb7eIHjZDCee3Slh3TVrLy06YRdq2I4\r\nbjMOPePtK5xnIpHGpAXkB3IONxyITpSLKsA4hCeP7gVvm7r7TuQg1ygiUBlWbBYn\r\niE5ROzqZjG1s7dQNZK/riiU2umGqGuwAb2IPvNiyuGR3cIgRE4llXH/rLuUlspAp\r\no4nlxaz65VucmNbN1aMbDXLJVSqR1DuE00vEsL1AItI=\r\n=XQoy\r\n-----END PGP PUBLIC KEY BLOCK-----",
          "created_at": "2017-09-05T09:17:46.264Z"
        }
      ]
    },
    {
      "name": "Get a specific GPG key for a given user",
      "description": "Get a specific GPG key for a given user. Introduced in GitLab 13.5, this endpoint can be accessed without administrator authentication.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id/gpg_keys/:key_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "key_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the GPG key"
        }
      ],
      "response": {
        "id": 1,
        "key": "-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n\r\nxsBNBFVjnlIBCACibzXOLCiZiL2oyzYUaTOCkYnSUhymg3pdbfKtd4mpBa58xKBj\r\nt1pTHVpw3Sk03wmzhM/Ndlt1AV2YhLv++83WKr+gAHFYFiCV/tnY8bx3HqvVoy8O\r\nCfxWhw4QZK7+oYzVmJj8ZJm3ZjOC4pzuegNWlNLCUdZDx9OKlHVXLCX1iUbjdYWa\r\nqKV6tdV8hZolkbyjedQgrpvoWyeSHHpwHF7yk4gNJWMMI5rpcssL7i6mMXb/sDzO\r\nVaAtU5wiVducsOa01InRFf7QSTxoAm6Xy0PGv/k48M6xCALa9nY+BzlOv47jUT57\r\nvilf4Szy9dKD0v9S0mQ+IHB+gNukWrnwtXx5ABEBAAHNFm5hbWUgKGNvbW1lbnQp\r\nIDxlbUBpbD7CwHUEEwECACkFAlVjnlIJEINgJNgv009/AhsDAhkBBgsJCAcDAgYV\r\nCAIJCgsEFgIDAQAAxqMIAFBHuBA8P1v8DtHonIK8Lx2qU23t8Mh68HBIkSjk2H7/\r\noO2cDWCw50jZ9D91PXOOyMPvBWV2IE3tARzCvnNGtzEFRtpIEtZ0cuctxeIF1id5\r\ncrfzdMDsmZyRHAOoZ9VtuD6mzj0ybQWMACb7eIHjZDCee3Slh3TVrLy06YRdq2I4\r\nbjMOPePtK5xnIpHGpAXkB3IONxyITpSLKsA4hCeP7gVvm7r7TuQg1ygiUBlWbBYn\r\niE5ROzqZjG1s7dQNZK/riiU2umGqGuwAb2IPvNiyuGR3cIgRE4llXH/rLuUlspAp\r\no4nlxaz65VucmNbN1aMbDXLJVSqR1DuE00vEsL1AItI=\r\n=XQoy\r\n-----END PGP PUBLIC KEY BLOCK-----",
        "created_at": "2017-09-05T09:17:46.264Z"
      }
    },
    {
      "name": "Add a GPG key for a given user",
      "description": "Create new GPG key owned by the specified user. Available only for administrator.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/gpg_keys"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "key_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the GPG key"
        }
      ],
      "response": [
        {
          "id": 1,
          "key": "-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n\r\nxsBNBFVjnlIBCACibzXOLCiZiL2oyzYUaTOCkYnSUhymg3pdbfKtd4mpBa58xKBj\r\nt1pTHVpw3Sk03wmzhM/Ndlt1AV2YhLv++83WKr+gAHFYFiCV/tnY8bx3HqvVoy8O\r\nCfxWhw4QZK7+oYzVmJj8ZJm3ZjOC4pzuegNWlNLCUdZDx9OKlHVXLCX1iUbjdYWa\r\nqKV6tdV8hZolkbyjedQgrpvoWyeSHHpwHF7yk4gNJWMMI5rpcssL7i6mMXb/sDzO\r\nVaAtU5wiVducsOa01InRFf7QSTxoAm6Xy0PGv/k48M6xCALa9nY+BzlOv47jUT57\r\nvilf4Szy9dKD0v9S0mQ+IHB+gNukWrnwtXx5ABEBAAHNFm5hbWUgKGNvbW1lbnQp\r\nIDxlbUBpbD7CwHUEEwECACkFAlVjnlIJEINgJNgv009/AhsDAhkBBgsJCAcDAgYV\r\nCAIJCgsEFgIDAQAAxqMIAFBHuBA8P1v8DtHonIK8Lx2qU23t8Mh68HBIkSjk2H7/\r\noO2cDWCw50jZ9D91PXOOyMPvBWV2IE3tARzCvnNGtzEFRtpIEtZ0cuctxeIF1id5\r\ncrfzdMDsmZyRHAOoZ9VtuD6mzj0ybQWMACb7eIHjZDCee3Slh3TVrLy06YRdq2I4\r\nbjMOPePtK5xnIpHGpAXkB3IONxyITpSLKsA4hCeP7gVvm7r7TuQg1ygiUBlWbBYn\r\niE5ROzqZjG1s7dQNZK/riiU2umGqGuwAb2IPvNiyuGR3cIgRE4llXH/rLuUlspAp\r\no4nlxaz65VucmNbN1aMbDXLJVSqR1DuE00vEsL1AItI=\r\n=XQoy\r\n-----END PGP PUBLIC KEY BLOCK-----",
          "created_at": "2017-09-05T09:17:46.264Z"
        }
      ]
    },
    {
      "name": "Delete a GPG key for a given user",
      "description": "Delete a GPG key owned by a specified user. Available only for administrator.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/users/:id/gpg_keys/:key_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "key_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the GPG key"
        }
      ],
      "response": null
    },
    {
      "name": "List emails",
      "description": "Get a list of currently authenticated user’s emails.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/emails"
        }
      ],
      "attributes": [],
      "response": [
        {
          "id": 1,
          "email": "email@example.com",
          "confirmed_at": "2021-03-26T19:07:56.248Z"
        },
        {
          "id": 3,
          "email": "email2@example.com",
          "confirmed_at": null
        }
      ]
    },
    {
      "name": "List emails for user",
      "description": "Get a list of a specified user’s emails. Available only for administrator",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id/emails"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        }
      ],
      "response": null
    },
    {
      "name": "Single email",
      "description": "Get a single email.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/emails/:email_id"
        }
      ],
      "attributes": [
        {
          "name": "email_id",
          "type": "integer",
          "required": true,
          "description": "Email ID"
        }
      ],
      "response": {
        "id": 1,
        "email": "email@example.com",
        "confirmed_at": "2021-03-26T19:07:56.248Z"
      }
    },
    {
      "name": "Add email",
      "description": "Creates a new email owned by the currently authenticated user.",
      "resources": [
        {
          "method": "POST",
          "path": "/user/emails"
        }
      ],
      "attributes": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "description": "Email address"
        }
      ],
      "response": {
        "message": {
          "email": [
            "has already been taken"
          ]
        },
        "id": 4,
        "email": "email@example.com",
        "confirmed_at": "2021-03-26T19:07:56.248Z"
      }
    },
    {
      "name": "Add email for user",
      "description": "Create new email owned by specified user. Available only for administrator",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/emails"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "ID of specified user"
        },
        {
          "name": "email",
          "type": "string",
          "required": true,
          "description": "Email address"
        },
        {
          "name": "skip_confirmation",
          "type": "boolean",
          "required": false,
          "description": "Skip confirmation and assume email is verified - true or false (default)"
        }
      ],
      "response": null
    },
    {
      "name": "Delete email for current user",
      "description": "Deletes email owned by currently authenticated user. This returns a 204 No Content status code if the operation was successfully or 404 if the resource was not found.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/user/emails/:email_id"
        }
      ],
      "attributes": [
        {
          "name": "email_id",
          "type": "integer",
          "required": true,
          "description": "Email ID"
        }
      ],
      "response": null
    },
    {
      "name": "Delete email for given user",
      "description": "Deletes email owned by a specified user. Available only for administrator.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/users/:id/emails/:email_id"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        },
        {
          "name": "email_id",
          "type": "integer",
          "required": true,
          "description": "Email ID"
        }
      ],
      "response": null
    },
    {
      "name": "Block user",
      "description": "Blocks the specified user. Available only for administrator.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/block"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        }
      ],
      "response": null
    },
    {
      "name": "Unblock user",
      "description": "Unblocks the specified user. Available only for administrator.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/unblock"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        }
      ],
      "response": null
    },
    {
      "name": "Deactivate user",
      "description": "Deactivates the specified user. Available only for administrator.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/deactivate"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        }
      ],
      "response": null
    },
    {
      "name": "Activate user",
      "description": "Activates the specified user. Available only for administrator.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/activate"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        }
      ],
      "response": null
    },
    {
      "name": "Ban user",
      "description": "Bans the specified user. Available only for administrator.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/ban"
        }
      ],
      "attributes": [],
      "response": null
    },
    {
      "name": "Unban user",
      "description": "Unbans the specified user. Available only for administrator.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/unban"
        }
      ],
      "attributes": [],
      "response": null
    },
    {
      "name": "Get all impersonation tokens of a user",
      "description": "Requires administrator access.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:user_id/impersonation_tokens"
        }
      ],
      "attributes": [
        {
          "name": "user_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "state",
          "type": "string",
          "required": false,
          "description": "filter tokens based on state (all, active, inactive)"
        }
      ],
      "response": [
        {
          "active": true,
          "user_id": 2,
          "scopes": [
            "api"
          ],
          "revoked": false,
          "name": "mytoken",
          "id": 2,
          "created_at": "2017-03-17T17:18:09.283Z",
          "impersonation": true,
          "expires_at": "2017-04-04"
        },
        {
          "active": false,
          "user_id": 2,
          "scopes": [
            "read_user"
          ],
          "revoked": true,
          "name": "mytoken2",
          "created_at": "2017-03-17T17:19:28.697Z",
          "id": 3,
          "impersonation": true,
          "expires_at": "2017-04-14"
        }
      ]
    },
    {
      "name": "Approve user",
      "description": "Approves the specified user. Available only for administrators.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/approve"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "ID of specified user"
        }
      ],
      "response": {
        "message": "Success"
      }
    },
    {
      "name": "Reject user",
      "description": "Rejects specified user that is pending approval. Available only for administrators.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:id/reject"
        }
      ],
      "attributes": [],
      "response": {
        "message": "Success"
      }
    },
    {
      "name": "Get an impersonation token of a user",
      "description": "It shows a user’s impersonation token.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:user_id/impersonation_tokens/:impersonation_token_id"
        }
      ],
      "attributes": [
        {
          "name": "user_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "impersonation_token_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the impersonation token"
        }
      ],
      "response": {
        "active": true,
        "user_id": 2,
        "scopes": [
          "api"
        ],
        "revoked": false,
        "name": "mytoken",
        "id": 2,
        "created_at": "2017-03-17T17:18:09.283Z",
        "impersonation": true,
        "expires_at": "2017-04-04"
      }
    },
    {
      "name": "Create an impersonation token",
      "description": "Requires administrator access. Token values are returned once. Make sure you save it because you can’t access it again.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:user_id/impersonation_tokens"
        }
      ],
      "attributes": [
        {
          "name": "user_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "The name of the impersonation token"
        },
        {
          "name": "expires_at",
          "type": "date",
          "required": false,
          "description": "The expiration date of the impersonation token in ISO format (YYYY-MM-DD)"
        },
        {
          "name": "scopes",
          "type": "array",
          "required": true,
          "description": "The array of scopes of the impersonation token (api, read_user)"
        }
      ],
      "response": {
        "id": 2,
        "revoked": false,
        "user_id": 2,
        "scopes": [
          "api"
        ],
        "token": "EsMo-vhKfXGwX9RKrwiy",
        "active": true,
        "impersonation": true,
        "name": "mytoken",
        "created_at": "2017-03-17T17:18:09.283Z",
        "expires_at": "2017-04-04"
      }
    },
    {
      "name": "Revoke an impersonation token",
      "description": "Requires administrator access.",
      "resources": [
        {
          "method": "DELETE",
          "path": "/users/:user_id/impersonation_tokens/:impersonation_token_id"
        }
      ],
      "attributes": [
        {
          "name": "user_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "impersonation_token_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the impersonation token"
        }
      ],
      "response": null
    },
    {
      "name": "Create a personal access token",
      "description": "Use this API to create a new personal access token. Token values are returned once so, make sure you save it as you can’t access it again. This API can only be used by GitLab administrators.",
      "resources": [
        {
          "method": "POST",
          "path": "/users/:user_id/personal_access_tokens"
        }
      ],
      "attributes": [
        {
          "name": "user_id",
          "type": "integer",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "description": "The name of the personal access token"
        },
        {
          "name": "expires_at",
          "type": "date",
          "required": false,
          "description": "The expiration date of the personal access token in ISO format (YYYY-MM-DD)"
        },
        {
          "name": "scopes",
          "type": "array",
          "required": true,
          "description": "The array of scopes of the personal access token. See personal access token scopes for possible values."
        }
      ],
      "response": {
        "id": 3,
        "name": "mytoken",
        "revoked": false,
        "created_at": "2020-10-14T11:58:53.526Z",
        "scopes": [
          "api"
        ],
        "user_id": 42,
        "active": true,
        "expires_at": "2020-12-31",
        "token": "ggbfKkC4n-Lujy8jwCR2"
      }
    },
    {
      "name": "Get user activities (administrator only)",
      "description": "Get the last activity date for all users, sorted from oldest to newest.",
      "resources": [
        {
          "method": "GET",
          "path": "/user/activities"
        }
      ],
      "attributes": [
        {
          "name": "from",
          "type": "string",
          "required": false,
          "description": "Date string in the format YEAR-MONTH-DAY. For example, 2016-03-11. Defaults to 6 months ago."
        }
      ],
      "response": [
        {
          "username": "user1",
          "last_activity_on": "2015-12-14",
          "last_activity_at": "2015-12-14"
        },
        {
          "username": "user2",
          "last_activity_on": "2015-12-15",
          "last_activity_at": "2015-12-15"
        },
        {
          "username": "user3",
          "last_activity_on": "2015-12-16",
          "last_activity_at": "2015-12-16"
        }
      ]
    },
    {
      "name": "User memberships (administrator only)",
      "description": "Lists all projects and groups a user is a member of. This endpoint is available for administrators only. It returns the source_id, source_name, source_type and access_level of a membership. Source can be of type Namespace (representing a group) or Project. The response represents only direct memberships. Inherited memberships, for example in subgroups, are not included. Access levels are represented by an integer value. For more details, read about the meaning of access level values.",
      "resources": [
        {
          "method": "GET",
          "path": "/users/:id/memberships"
        }
      ],
      "attributes": [
        {
          "name": "id",
          "type": "integer",
          "required": true,
          "description": "The ID of a specified user"
        },
        {
          "name": "type",
          "type": "string",
          "required": false,
          "description": "Filter memberships by type. Can be either Project or Namespace"
        }
      ],
      "response": [
        {
          "source_id": 1,
          "source_name": "Project one",
          "source_type": "Project",
          "access_level": "20"
        },
        {
          "source_id": 3,
          "source_name": "Group three",
          "source_type": "Namespace",
          "access_level": "20"
        }
      ]
    }
  ]
}